/*! jQuery v3.5.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function (e, t) { "use strict"; "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function (e) { if (!e.document) throw new Error("jQuery requires a window with a document"); return t(e) } : t(e) }("undefined" != typeof window ? window : this, function (C, e) { "use strict"; var t = [], r = Object.getPrototypeOf, s = t.slice, g = t.flat ? function (e) { return t.flat.call(e) } : function (e) { return t.concat.apply([], e) }, u = t.push, i = t.indexOf, n = {}, o = n.toString, v = n.hasOwnProperty, a = v.toString, l = a.call(Object), y = {}, m = function (e) { return "function" == typeof e && "number" != typeof e.nodeType }, x = function (e) { return null != e && e === e.window }, E = C.document, c = { type: !0, src: !0, nonce: !0, noModule: !0 }; function b(e, t, n) { var r, i, o = (n = n || E).createElement("script"); if (o.text = e, t) for (r in c) (i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i); n.head.appendChild(o).parentNode.removeChild(o) } function w(e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[o.call(e)] || "object" : typeof e } var f = "3.5.1", S = function (e, t) { return new S.fn.init(e, t) }; function p(e) { var t = !!e && "length" in e && e.length, n = w(e); return !m(e) && !x(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e) } S.fn = S.prototype = { jquery: f, constructor: S, length: 0, toArray: function () { return s.call(this) }, get: function (e) { return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e] }, pushStack: function (e) { var t = S.merge(this.constructor(), e); return t.prevObject = this, t }, each: function (e) { return S.each(this, e) }, map: function (n) { return this.pushStack(S.map(this, function (e, t) { return n.call(e, t, e) })) }, slice: function () { return this.pushStack(s.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, even: function () { return this.pushStack(S.grep(this, function (e, t) { return (t + 1) % 2 })) }, odd: function () { return this.pushStack(S.grep(this, function (e, t) { return t % 2 })) }, eq: function (e) { var t = this.length, n = +e + (e < 0 ? t : 0); return this.pushStack(0 <= n && n < t ? [this[n]] : []) }, end: function () { return this.prevObject || this.constructor() }, push: u, sort: t.sort, splice: t.splice }, S.extend = S.fn.extend = function () { var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1; for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || m(a) || (a = {}), s === u && (a = this, s--); s < u; s++)if (null != (e = arguments[s])) for (t in e) r = e[t], "__proto__" !== t && a !== r && (l && r && (S.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || S.isPlainObject(n) ? n : {}, i = !1, a[t] = S.extend(l, o, r)) : void 0 !== r && (a[t] = r)); return a }, S.extend({ expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (e) { throw new Error(e) }, noop: function () { }, isPlainObject: function (e) { var t, n; return !(!e || "[object Object]" !== o.call(e)) && (!(t = r(e)) || "function" == typeof (n = v.call(t, "constructor") && t.constructor) && a.call(n) === l) }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, globalEval: function (e, t, n) { b(e, { nonce: t && t.nonce }, n) }, each: function (e, t) { var n, r = 0; if (p(e)) { for (n = e.length; r < n; r++)if (!1 === t.call(e[r], r, e[r])) break } else for (r in e) if (!1 === t.call(e[r], r, e[r])) break; return e }, makeArray: function (e, t) { var n = t || []; return null != e && (p(Object(e)) ? S.merge(n, "string" == typeof e ? [e] : e) : u.call(n, e)), n }, inArray: function (e, t, n) { return null == t ? -1 : i.call(t, e, n) }, merge: function (e, t) { for (var n = +t.length, r = 0, i = e.length; r < n; r++)e[i++] = t[r]; return e.length = i, e }, grep: function (e, t, n) { for (var r = [], i = 0, o = e.length, a = !n; i < o; i++)!t(e[i], i) !== a && r.push(e[i]); return r }, map: function (e, t, n) { var r, i, o = 0, a = []; if (p(e)) for (r = e.length; o < r; o++)null != (i = t(e[o], o, n)) && a.push(i); else for (o in e) null != (i = t(e[o], o, n)) && a.push(i); return g(a) }, guid: 1, support: y }), "function" == typeof Symbol && (S.fn[Symbol.iterator] = t[Symbol.iterator]), S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) { n["[object " + t + "]"] = t.toLowerCase() }); var d = function (n) { var e, d, b, o, i, h, f, g, w, u, l, T, C, a, E, v, s, c, y, S = "sizzle" + 1 * new Date, p = n.document, k = 0, r = 0, m = ue(), x = ue(), A = ue(), N = ue(), D = function (e, t) { return e === t && (l = !0), 0 }, j = {}.hasOwnProperty, t = [], q = t.pop, L = t.push, H = t.push, O = t.slice, P = function (e, t) { for (var n = 0, r = e.length; n < r; n++)if (e[n] === t) return n; return -1 }, R = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", I = "(?:\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", W = "\\[" + M + "*(" + I + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + I + "))|)" + M + "*\\]", F = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + W + ")*)|.*)\\)|)", B = new RegExp(M + "+", "g"), $ = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"), _ = new RegExp("^" + M + "*," + M + "*"), z = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), U = new RegExp(M + "|>"), X = new RegExp(F), V = new RegExp("^" + I + "$"), G = { ID: new RegExp("^#(" + I + ")"), CLASS: new RegExp("^\\.(" + I + ")"), TAG: new RegExp("^(" + I + "|[*])"), ATTR: new RegExp("^" + W), PSEUDO: new RegExp("^" + F), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"), bool: new RegExp("^(?:" + R + ")$", "i"), needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i") }, Y = /HTML$/i, Q = /^(?:input|select|textarea|button)$/i, J = /^h\d$/i, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ee = /[+~]/, te = new RegExp("\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\([^\\r\\n\\f])", "g"), ne = function (e, t) { var n = "0x" + e.slice(1) - 65536; return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320)) }, re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ie = function (e, t) { return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e }, oe = function () { T() }, ae = be(function (e) { return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase() }, { dir: "parentNode", next: "legend" }); try { H.apply(t = O.call(p.childNodes), p.childNodes), t[p.childNodes.length].nodeType } catch (e) { H = { apply: t.length ? function (e, t) { L.apply(e, O.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function se(t, e, n, r) { var i, o, a, s, u, l, c, f = e && e.ownerDocument, p = e ? e.nodeType : 9; if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n; if (!r && (T(e), e = e || C, E)) { if (11 !== p && (u = Z.exec(t))) if (i = u[1]) { if (9 === p) { if (!(a = e.getElementById(i))) return n; if (a.id === i) return n.push(a), n } else if (f && (a = f.getElementById(i)) && y(e, a) && a.id === i) return n.push(a), n } else { if (u[2]) return H.apply(n, e.getElementsByTagName(t)), n; if ((i = u[3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply(n, e.getElementsByClassName(i)), n } if (d.qsa && !N[t + " "] && (!v || !v.test(t)) && (1 !== p || "object" !== e.nodeName.toLowerCase())) { if (c = t, f = e, 1 === p && (U.test(t) || z.test(t))) { (f = ee.test(t) && ye(e.parentNode) || e) === e && d.scope || ((s = e.getAttribute("id")) ? s = s.replace(re, ie) : e.setAttribute("id", s = S)), o = (l = h(t)).length; while (o--) l[o] = (s ? "#" + s : ":scope") + " " + xe(l[o]); c = l.join(",") } try { return H.apply(n, f.querySelectorAll(c)), n } catch (e) { N(t, !0) } finally { s === S && e.removeAttribute("id") } } } return g(t.replace($, "$1"), e, n, r) } function ue() { var r = []; return function e(t, n) { return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n } } function le(e) { return e[S] = !0, e } function ce(e) { var t = C.createElement("fieldset"); try { return !!e(t) } catch (e) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function fe(e, t) { var n = e.split("|"), r = n.length; while (r--) b.attrHandle[n[r]] = t } function pe(e, t) { var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex; if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function de(t) { return function (e) { return "input" === e.nodeName.toLowerCase() && e.type === t } } function he(n) { return function (e) { var t = e.nodeName.toLowerCase(); return ("input" === t || "button" === t) && e.type === n } } function ge(t) { return function (e) { return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ae(e) === t : e.disabled === t : "label" in e && e.disabled === t } } function ve(a) { return le(function (o) { return o = +o, le(function (e, t) { var n, r = a([], e.length, o), i = r.length; while (i--) e[n = r[i]] && (e[n] = !(t[n] = e[n])) }) }) } function ye(e) { return e && "undefined" != typeof e.getElementsByTagName && e } for (e in d = se.support = {}, i = se.isXML = function (e) { var t = e.namespaceURI, n = (e.ownerDocument || e).documentElement; return !Y.test(t || n && n.nodeName || "HTML") }, T = se.setDocument = function (e) { var t, n, r = e ? e.ownerDocument || e : p; return r != C && 9 === r.nodeType && r.documentElement && (a = (C = r).documentElement, E = !i(C), p != C && (n = C.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), d.scope = ce(function (e) { return a.appendChild(e).appendChild(C.createElement("div")), "undefined" != typeof e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length }), d.attributes = ce(function (e) { return e.className = "i", !e.getAttribute("className") }), d.getElementsByTagName = ce(function (e) { return e.appendChild(C.createComment("")), !e.getElementsByTagName("*").length }), d.getElementsByClassName = K.test(C.getElementsByClassName), d.getById = ce(function (e) { return a.appendChild(e).id = S, !C.getElementsByName || !C.getElementsByName(S).length }), d.getById ? (b.filter.ID = function (e) { var t = e.replace(te, ne); return function (e) { return e.getAttribute("id") === t } }, b.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && E) { var n = t.getElementById(e); return n ? [n] : [] } }) : (b.filter.ID = function (e) { var n = e.replace(te, ne); return function (e) { var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id"); return t && t.value === n } }, b.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && E) { var n, r, i, o = t.getElementById(e); if (o) { if ((n = o.getAttributeNode("id")) && n.value === e) return [o]; i = t.getElementsByName(e), r = 0; while (o = i[r++]) if ((n = o.getAttributeNode("id")) && n.value === e) return [o] } return [] } }), b.find.TAG = d.getElementsByTagName ? function (e, t) { return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : d.qsa ? t.querySelectorAll(e) : void 0 } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, b.find.CLASS = d.getElementsByClassName && function (e, t) { if ("undefined" != typeof t.getElementsByClassName && E) return t.getElementsByClassName(e) }, s = [], v = [], (d.qsa = K.test(C.querySelectorAll)) && (ce(function (e) { var t; a.appendChild(e).innerHTML = "<a id='" + S + "'></a><select id='" + S + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && v.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || v.push("\\[" + M + "*(?:value|" + R + ")"), e.querySelectorAll("[id~=" + S + "-]").length || v.push("~="), (t = C.createElement("input")).setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || v.push("\\[" + M + "*name" + M + "*=" + M + "*(?:''|\"\")"), e.querySelectorAll(":checked").length || v.push(":checked"), e.querySelectorAll("a#" + S + "+*").length || v.push(".#.+[+~]"), e.querySelectorAll("\\\f"), v.push("[\\r\\n\\f]") }), ce(function (e) { e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>"; var t = C.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && v.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && v.push(":enabled", ":disabled"), a.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && v.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), v.push(",.*:") })), (d.matchesSelector = K.test(c = a.matches || a.webkitMatchesSelector || a.mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce(function (e) { d.disconnectedMatch = c.call(e, "*"), c.call(e, "[s!='']:x"), s.push("!=", F) }), v = v.length && new RegExp(v.join("|")), s = s.length && new RegExp(s.join("|")), t = K.test(a.compareDocumentPosition), y = t || K.test(a.contains) ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, D = t ? function (e, t) { if (e === t) return l = !0, 0; var n = !e.compareDocumentPosition - !t.compareDocumentPosition; return n || (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !d.sortDetached && t.compareDocumentPosition(e) === n ? e == C || e.ownerDocument == p && y(p, e) ? -1 : t == C || t.ownerDocument == p && y(p, t) ? 1 : u ? P(u, e) - P(u, t) : 0 : 4 & n ? -1 : 1) } : function (e, t) { if (e === t) return l = !0, 0; var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], s = [t]; if (!i || !o) return e == C ? -1 : t == C ? 1 : i ? -1 : o ? 1 : u ? P(u, e) - P(u, t) : 0; if (i === o) return pe(e, t); n = e; while (n = n.parentNode) a.unshift(n); n = t; while (n = n.parentNode) s.unshift(n); while (a[r] === s[r]) r++; return r ? pe(a[r], s[r]) : a[r] == p ? -1 : s[r] == p ? 1 : 0 }), C }, se.matches = function (e, t) { return se(e, null, null, t) }, se.matchesSelector = function (e, t) { if (T(e), d.matchesSelector && E && !N[t + " "] && (!s || !s.test(t)) && (!v || !v.test(t))) try { var n = c.call(e, t); if (n || d.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n } catch (e) { N(t, !0) } return 0 < se(t, C, null, [e]).length }, se.contains = function (e, t) { return (e.ownerDocument || e) != C && T(e), y(e, t) }, se.attr = function (e, t) { (e.ownerDocument || e) != C && T(e); var n = b.attrHandle[t.toLowerCase()], r = n && j.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !E) : void 0; return void 0 !== r ? r : d.attributes || !E ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null }, se.escape = function (e) { return (e + "").replace(re, ie) }, se.error = function (e) { throw new Error("Syntax error, unrecognized expression: " + e) }, se.uniqueSort = function (e) { var t, n = [], r = 0, i = 0; if (l = !d.detectDuplicates, u = !d.sortStable && e.slice(0), e.sort(D), l) { while (t = e[i++]) t === e[i] && (r = n.push(i)); while (r--) e.splice(n[r], 1) } return u = null, e }, o = se.getText = function (e) { var t, n = "", r = 0, i = e.nodeType; if (i) { if (1 === i || 9 === i || 11 === i) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling)n += o(e) } else if (3 === i || 4 === i) return e.nodeValue } else while (t = e[r++]) n += o(t); return n }, (b = se.selectors = { cacheLength: 50, createPseudo: le, match: G, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e }, PSEUDO: function (e) { var t, n = !e[6] && e[2]; return G.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = h(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(te, ne).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = m[e + " "]; return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && m(e, function (e) { return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "") }) }, ATTR: function (n, r, i) { return function (e) { var t = se.attr(e, n); return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(B, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-")) } }, CHILD: function (h, e, t, g, v) { var y = "nth" !== h.slice(0, 3), m = "last" !== h.slice(-4), x = "of-type" === e; return 1 === g && 0 === v ? function (e) { return !!e.parentNode } : function (e, t, n) { var r, i, o, a, s, u, l = y !== m ? "nextSibling" : "previousSibling", c = e.parentNode, f = x && e.nodeName.toLowerCase(), p = !n && !x, d = !1; if (c) { if (y) { while (l) { a = e; while (a = a[l]) if (x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) return !1; u = l = "only" === h && !u && "nextSibling" } return !0 } if (u = [m ? c.firstChild : c.lastChild], m && p) { d = (s = (r = (i = (o = (a = c)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]) && r[2], a = s && c.childNodes[s]; while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) if (1 === a.nodeType && ++d && a === e) { i[h] = [k, s, d]; break } } else if (p && (d = s = (r = (i = (o = (a = e)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]), !1 === d) while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) if ((x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) && ++d && (p && ((i = (o = a[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] = [k, d]), a === e)) break; return (d -= v) === g || d % g == 0 && 0 <= d / g } } }, PSEUDO: function (e, o) { var t, a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e); return a[S] ? a(o) : 1 < a.length ? (t = [e, e, "", o], b.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function (e, t) { var n, r = a(e, o), i = r.length; while (i--) e[n = P(e, r[i])] = !(t[n] = r[i]) }) : function (e) { return a(e, 0, t) }) : a } }, pseudos: { not: le(function (e) { var r = [], i = [], s = f(e.replace($, "$1")); return s[S] ? le(function (e, t, n, r) { var i, o = s(e, null, r, []), a = e.length; while (a--) (i = o[a]) && (e[a] = !(t[a] = i)) }) : function (e, t, n) { return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop() } }), has: le(function (t) { return function (e) { return 0 < se(t, e).length } }), contains: le(function (t) { return t = t.replace(te, ne), function (e) { return -1 < (e.textContent || o(e)).indexOf(t) } }), lang: le(function (n) { return V.test(n || "") || se.error("unsupported lang: " + n), n = n.replace(te, ne).toLowerCase(), function (e) { var t; do { if (t = E ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-") } while ((e = e.parentNode) && 1 === e.nodeType); return !1 } }), target: function (e) { var t = n.location && n.location.hash; return t && t.slice(1) === e.id }, root: function (e) { return e === a }, focus: function (e) { return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: ge(!1), disabled: ge(!0), checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeType < 6) return !1; return !0 }, parent: function (e) { return !b.pseudos.empty(e) }, header: function (e) { return J.test(e.nodeName) }, input: function (e) { return Q.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase()) }, first: ve(function () { return [0] }), last: ve(function (e, t) { return [t - 1] }), eq: ve(function (e, t, n) { return [n < 0 ? n + t : n] }), even: ve(function (e, t) { for (var n = 0; n < t; n += 2)e.push(n); return e }), odd: ve(function (e, t) { for (var n = 1; n < t; n += 2)e.push(n); return e }), lt: ve(function (e, t, n) { for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;)e.push(r); return e }), gt: ve(function (e, t, n) { for (var r = n < 0 ? n + t : n; ++r < t;)e.push(r); return e }) } }).pseudos.nth = b.pseudos.eq, { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) b.pseudos[e] = de(e); for (e in { submit: !0, reset: !0 }) b.pseudos[e] = he(e); function me() { } function xe(e) { for (var t = 0, n = e.length, r = ""; t < n; t++)r += e[t].value; return r } function be(s, e, t) { var u = e.dir, l = e.next, c = l || u, f = t && "parentNode" === c, p = r++; return e.first ? function (e, t, n) { while (e = e[u]) if (1 === e.nodeType || f) return s(e, t, n); return !1 } : function (e, t, n) { var r, i, o, a = [k, p]; if (n) { while (e = e[u]) if ((1 === e.nodeType || f) && s(e, t, n)) return !0 } else while (e = e[u]) if (1 === e.nodeType || f) if (i = (o = e[S] || (e[S] = {}))[e.uniqueID] || (o[e.uniqueID] = {}), l && l === e.nodeName.toLowerCase()) e = e[u] || e; else { if ((r = i[c]) && r[0] === k && r[1] === p) return a[2] = r[2]; if ((i[c] = a)[2] = s(e, t, n)) return !0 } return !1 } } function we(i) { return 1 < i.length ? function (e, t, n) { var r = i.length; while (r--) if (!i[r](e, t, n)) return !1; return !0 } : i[0] } function Te(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a } function Ce(d, h, g, v, y, e) { return v && !v[S] && (v = Ce(v)), y && !y[S] && (y = Ce(y, e)), le(function (e, t, n, r) { var i, o, a, s = [], u = [], l = t.length, c = e || function (e, t, n) { for (var r = 0, i = t.length; r < i; r++)se(e, t[r], n); return n }(h || "*", n.nodeType ? [n] : n, []), f = !d || !e && h ? c : Te(c, s, d, n, r), p = g ? y || (e ? d : l || v) ? [] : t : f; if (g && g(f, p, n, r), v) { i = Te(p, u), v(i, [], n, r), o = i.length; while (o--) (a = i[o]) && (p[u[o]] = !(f[u[o]] = a)) } if (e) { if (y || d) { if (y) { i = [], o = p.length; while (o--) (a = p[o]) && i.push(f[o] = a); y(null, p = [], i, r) } o = p.length; while (o--) (a = p[o]) && -1 < (i = y ? P(e, a) : s[o]) && (e[i] = !(t[i] = a)) } } else p = Te(p === t ? p.splice(l, p.length) : p), y ? y(null, t, p, r) : H.apply(t, p) }) } function Ee(e) { for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = be(function (e) { return e === i }, a, !0), l = be(function (e) { return -1 < P(i, e) }, a, !0), c = [function (e, t, n) { var r = !o && (n || t !== w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n)); return i = null, r }]; s < r; s++)if (t = b.relative[e[s].type]) c = [be(we(c), t)]; else { if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) { for (n = ++s; n < r; n++)if (b.relative[e[n].type]) break; return Ce(1 < s && we(c), 1 < s && xe(e.slice(0, s - 1).concat({ value: " " === e[s - 2].type ? "*" : "" })).replace($, "$1"), t, s < n && Ee(e.slice(s, n)), n < r && Ee(e = e.slice(n)), n < r && xe(e)) } c.push(t) } return we(c) } return me.prototype = b.filters = b.pseudos, b.setFilters = new me, h = se.tokenize = function (e, t) { var n, r, i, o, a, s, u, l = x[e + " "]; if (l) return t ? 0 : l.slice(0); a = e, s = [], u = b.preFilter; while (a) { for (o in n && !(r = _.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = z.exec(a)) && (n = r.shift(), i.push({ value: n, type: r[0].replace($, " ") }), a = a.slice(n.length)), b.filter) !(r = G[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({ value: n, type: o, matches: r }), a = a.slice(n.length)); if (!n) break } return t ? a.length : a ? se.error(e) : x(e, s).slice(0) }, f = se.compile = function (e, t) { var n, v, y, m, x, r, i = [], o = [], a = A[e + " "]; if (!a) { t || (t = h(e)), n = t.length; while (n--) (a = Ee(t[n]))[S] ? i.push(a) : o.push(a); (a = A(e, (v = o, m = 0 < (y = i).length, x = 0 < v.length, r = function (e, t, n, r, i) { var o, a, s, u = 0, l = "0", c = e && [], f = [], p = w, d = e || x && b.find.TAG("*", i), h = k += null == p ? 1 : Math.random() || .1, g = d.length; for (i && (w = t == C || t || i); l !== g && null != (o = d[l]); l++) { if (x && o) { a = 0, t || o.ownerDocument == C || (T(o), n = !E); while (s = v[a++]) if (s(o, t || C, n)) { r.push(o); break } i && (k = h) } m && ((o = !s && o) && u--, e && c.push(o)) } if (u += l, m && l !== u) { a = 0; while (s = y[a++]) s(c, f, t, n); if (e) { if (0 < u) while (l--) c[l] || f[l] || (f[l] = q.call(r)); f = Te(f) } H.apply(r, f), i && !e && 0 < f.length && 1 < u + y.length && se.uniqueSort(r) } return i && (k = h, w = p), c }, m ? le(r) : r))).selector = e } return a }, g = se.select = function (e, t, n, r) { var i, o, a, s, u, l = "function" == typeof e && e, c = !r && h(e = l.selector || e); if (n = n || [], 1 === c.length) { if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && E && b.relative[o[1].type]) { if (!(t = (b.find.ID(a.matches[0].replace(te, ne), t) || [])[0])) return n; l && (t = t.parentNode), e = e.slice(o.shift().value.length) } i = G.needsContext.test(e) ? 0 : o.length; while (i--) { if (a = o[i], b.relative[s = a.type]) break; if ((u = b.find[s]) && (r = u(a.matches[0].replace(te, ne), ee.test(o[0].type) && ye(t.parentNode) || t))) { if (o.splice(i, 1), !(e = r.length && xe(o))) return H.apply(n, r), n; break } } } return (l || f(e, c))(r, t, !E, n, !t || ee.test(e) && ye(t.parentNode) || t), n }, d.sortStable = S.split("").sort(D).join("") === S, d.detectDuplicates = !!l, T(), d.sortDetached = ce(function (e) { return 1 & e.compareDocumentPosition(C.createElement("fieldset")) }), ce(function (e) { return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href") }) || fe("type|href|height|width", function (e, t, n) { if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2) }), d.attributes && ce(function (e) { return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value") }) || fe("value", function (e, t, n) { if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue }), ce(function (e) { return null == e.getAttribute("disabled") }) || fe(R, function (e, t, n) { var r; if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null }), se }(C); S.find = d, S.expr = d.selectors, S.expr[":"] = S.expr.pseudos, S.uniqueSort = S.unique = d.uniqueSort, S.text = d.getText, S.isXMLDoc = d.isXML, S.contains = d.contains, S.escapeSelector = d.escape; var h = function (e, t, n) { var r = [], i = void 0 !== n; while ((e = e[t]) && 9 !== e.nodeType) if (1 === e.nodeType) { if (i && S(e).is(n)) break; r.push(e) } return r }, T = function (e, t) { for (var n = []; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e); return n }, k = S.expr.match.needsContext; function A(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() } var N = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; function D(e, n, r) { return m(n) ? S.grep(e, function (e, t) { return !!n.call(e, t, e) !== r }) : n.nodeType ? S.grep(e, function (e) { return e === n !== r }) : "string" != typeof n ? S.grep(e, function (e) { return -1 < i.call(n, e) !== r }) : S.filter(n, e, r) } S.filter = function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? S.find.matchesSelector(r, e) ? [r] : [] : S.find.matches(e, S.grep(t, function (e) { return 1 === e.nodeType })) }, S.fn.extend({ find: function (e) { var t, n, r = this.length, i = this; if ("string" != typeof e) return this.pushStack(S(e).filter(function () { for (t = 0; t < r; t++)if (S.contains(i[t], this)) return !0 })); for (n = this.pushStack([]), t = 0; t < r; t++)S.find(e, i[t], n); return 1 < r ? S.uniqueSort(n) : n }, filter: function (e) { return this.pushStack(D(this, e || [], !1)) }, not: function (e) { return this.pushStack(D(this, e || [], !0)) }, is: function (e) { return !!D(this, "string" == typeof e && k.test(e) ? S(e) : e || [], !1).length } }); var j, q = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/; (S.fn.init = function (e, t, n) { var r, i; if (!e) return this; if (n = n || j, "string" == typeof e) { if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : q.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e); if (r[1]) { if (t = t instanceof S ? t[0] : t, S.merge(this, S.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : E, !0)), N.test(r[1]) && S.isPlainObject(t)) for (r in t) m(this[r]) ? this[r](t[r]) : this.attr(r, t[r]); return this } return (i = E.getElementById(r[2])) && (this[0] = i, this.length = 1), this } return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== n.ready ? n.ready(e) : e(S) : S.makeArray(e, this) }).prototype = S.fn, j = S(E); var L = /^(?:parents|prev(?:Until|All))/, H = { children: !0, contents: !0, next: !0, prev: !0 }; function O(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e } S.fn.extend({ has: function (e) { var t = S(e, this), n = t.length; return this.filter(function () { for (var e = 0; e < n; e++)if (S.contains(this, t[e])) return !0 }) }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], a = "string" != typeof e && S(e); if (!k.test(e)) for (; r < i; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && S.find.matchesSelector(n, e))) { o.push(n); break } return this.pushStack(1 < o.length ? S.uniqueSort(o) : o) }, index: function (e) { return e ? "string" == typeof e ? i.call(S(e), this[0]) : i.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { return this.pushStack(S.uniqueSort(S.merge(this.get(), S(e, t)))) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }), S.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return h(e, "parentNode") }, parentsUntil: function (e, t, n) { return h(e, "parentNode", n) }, next: function (e) { return O(e, "nextSibling") }, prev: function (e) { return O(e, "previousSibling") }, nextAll: function (e) { return h(e, "nextSibling") }, prevAll: function (e) { return h(e, "previousSibling") }, nextUntil: function (e, t, n) { return h(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return h(e, "previousSibling", n) }, siblings: function (e) { return T((e.parentNode || {}).firstChild, e) }, children: function (e) { return T(e.firstChild) }, contents: function (e) { return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (A(e, "template") && (e = e.content || e), S.merge([], e.childNodes)) } }, function (r, i) { S.fn[r] = function (e, t) { var n = S.map(this, i, e); return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = S.filter(t, n)), 1 < this.length && (H[r] || S.uniqueSort(n), L.test(r) && n.reverse()), this.pushStack(n) } }); var P = /[^\x20\t\r\n\f]+/g; function R(e) { return e } function M(e) { throw e } function I(e, t, n, r) { var i; try { e && m(i = e.promise) ? i.call(e).done(t).fail(n) : e && m(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)) } catch (e) { n.apply(void 0, [e]) } } S.Callbacks = function (r) { var e, n; r = "string" == typeof r ? (e = r, n = {}, S.each(e.match(P) || [], function (e, t) { n[t] = !0 }), n) : S.extend({}, r); var i, t, o, a, s = [], u = [], l = -1, c = function () { for (a = a || r.once, o = i = !0; u.length; l = -1) { t = u.shift(); while (++l < s.length) !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1) } r.memory || (t = !1), i = !1, a && (s = t ? [] : "") }, f = { add: function () { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { S.each(e, function (e, t) { m(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== w(t) && n(t) }) }(arguments), t && !i && c()), this }, remove: function () { return S.each(arguments, function (e, t) { var n; while (-1 < (n = S.inArray(t, s, n))) s.splice(n, 1), n <= l && l-- }), this }, has: function (e) { return e ? -1 < S.inArray(e, s) : 0 < s.length }, empty: function () { return s && (s = []), this }, disable: function () { return a = u = [], s = t = "", this }, disabled: function () { return !s }, lock: function () { return a = u = [], t || i || (s = t = ""), this }, locked: function () { return !!a }, fireWith: function (e, t) { return a || (t = [e, (t = t || []).slice ? t.slice() : t], u.push(t), i || c()), this }, fire: function () { return f.fireWith(this, arguments), this }, fired: function () { return !!o } }; return f }, S.extend({ Deferred: function (e) { var o = [["notify", "progress", S.Callbacks("memory"), S.Callbacks("memory"), 2], ["resolve", "done", S.Callbacks("once memory"), S.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", S.Callbacks("once memory"), S.Callbacks("once memory"), 1, "rejected"]], i = "pending", a = { state: function () { return i }, always: function () { return s.done(arguments).fail(arguments), this }, "catch": function (e) { return a.then(null, e) }, pipe: function () { var i = arguments; return S.Deferred(function (r) { S.each(o, function (e, t) { var n = m(i[t[4]]) && i[t[4]]; s[t[1]](function () { var e = n && n.apply(this, arguments); e && m(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments) }) }), i = null }).promise() }, then: function (t, n, r) { var u = 0; function l(i, o, a, s) { return function () { var n = this, r = arguments, e = function () { var e, t; if (!(i < u)) { if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution"); t = e && ("object" == typeof e || "function" == typeof e) && e.then, m(t) ? s ? t.call(e, l(u, o, R, s), l(u, o, M, s)) : (u++, t.call(e, l(u, o, R, s), l(u, o, M, s), l(u, o, R, o.notifyWith))) : (a !== R && (n = void 0, r = [e]), (s || o.resolveWith)(n, r)) } }, t = s ? e : function () { try { e() } catch (e) { S.Deferred.exceptionHook && S.Deferred.exceptionHook(e, t.stackTrace), u <= i + 1 && (a !== M && (n = void 0, r = [e]), o.rejectWith(n, r)) } }; i ? t() : (S.Deferred.getStackHook && (t.stackTrace = S.Deferred.getStackHook()), C.setTimeout(t)) } } return S.Deferred(function (e) { o[0][3].add(l(0, e, m(r) ? r : R, e.notifyWith)), o[1][3].add(l(0, e, m(t) ? t : R)), o[2][3].add(l(0, e, m(n) ? n : M)) }).promise() }, promise: function (e) { return null != e ? S.extend(e, a) : a } }, s = {}; return S.each(o, function (e, t) { var n = t[2], r = t[5]; a[t[1]] = n.add, r && n.add(function () { i = r }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function () { return s[t[0] + "With"](this === s ? void 0 : this, arguments), this }, s[t[0] + "With"] = n.fireWith }), a.promise(s), e && e.call(s, s), s }, when: function (e) { var n = arguments.length, t = n, r = Array(t), i = s.call(arguments), o = S.Deferred(), a = function (t) { return function (e) { r[t] = this, i[t] = 1 < arguments.length ? s.call(arguments) : e, --n || o.resolveWith(r, i) } }; if (n <= 1 && (I(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || m(i[t] && i[t].then))) return o.then(); while (t--) I(i[t], a(t), o.reject); return o.promise() } }); var W = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/; S.Deferred.exceptionHook = function (e, t) { C.console && C.console.warn && e && W.test(e.name) && C.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t) }, S.readyException = function (e) { C.setTimeout(function () { throw e }) }; var F = S.Deferred(); function B() { E.removeEventListener("DOMContentLoaded", B), C.removeEventListener("load", B), S.ready() } S.fn.ready = function (e) { return F.then(e)["catch"](function (e) { S.readyException(e) }), this }, S.extend({ isReady: !1, readyWait: 1, ready: function (e) { (!0 === e ? --S.readyWait : S.isReady) || (S.isReady = !0) !== e && 0 < --S.readyWait || F.resolveWith(E, [S]) } }), S.ready.then = F.then, "complete" === E.readyState || "loading" !== E.readyState && !E.documentElement.doScroll ? C.setTimeout(S.ready) : (E.addEventListener("DOMContentLoaded", B), C.addEventListener("load", B)); var $ = function (e, t, n, r, i, o, a) { var s = 0, u = e.length, l = null == n; if ("object" === w(n)) for (s in i = !0, n) $(e, t, s, n[s], !0, o, a); else if (void 0 !== r && (i = !0, m(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(S(e), n) })), t)) for (; s < u; s++)t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }, _ = /^-ms-/, z = /-([a-z])/g; function U(e, t) { return t.toUpperCase() } function X(e) { return e.replace(_, "ms-").replace(z, U) } var V = function (e) { return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType }; function G() { this.expando = S.expando + G.uid++ } G.uid = 1, G.prototype = { cache: function (e) { var t = e[this.expando]; return t || (t = {}, V(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, { value: t, configurable: !0 }))), t }, set: function (e, t, n) { var r, i = this.cache(e); if ("string" == typeof t) i[X(t)] = n; else for (r in t) i[X(r)] = t[r]; return i }, get: function (e, t) { return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][X(t)] }, access: function (e, t, n) { return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t) }, remove: function (e, t) { var n, r = e[this.expando]; if (void 0 !== r) { if (void 0 !== t) { n = (t = Array.isArray(t) ? t.map(X) : (t = X(t)) in r ? [t] : t.match(P) || []).length; while (n--) delete r[t[n]] } (void 0 === t || S.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]) } }, hasData: function (e) { var t = e[this.expando]; return void 0 !== t && !S.isEmptyObject(t) } }; var Y = new G, Q = new G, J = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, K = /[A-Z]/g; function Z(e, t, n) { var r, i; if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(K, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) { try { n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : J.test(i) ? JSON.parse(i) : i) } catch (e) { } Q.set(e, t, n) } else n = void 0; return n } S.extend({ hasData: function (e) { return Q.hasData(e) || Y.hasData(e) }, data: function (e, t, n) { return Q.access(e, t, n) }, removeData: function (e, t) { Q.remove(e, t) }, _data: function (e, t, n) { return Y.access(e, t, n) }, _removeData: function (e, t) { Y.remove(e, t) } }), S.fn.extend({ data: function (n, e) { var t, r, i, o = this[0], a = o && o.attributes; if (void 0 === n) { if (this.length && (i = Q.get(o), 1 === o.nodeType && !Y.get(o, "hasDataAttrs"))) { t = a.length; while (t--) a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = X(r.slice(5)), Z(o, r, i[r])); Y.set(o, "hasDataAttrs", !0) } return i } return "object" == typeof n ? this.each(function () { Q.set(this, n) }) : $(this, function (e) { var t; if (o && void 0 === e) return void 0 !== (t = Q.get(o, n)) ? t : void 0 !== (t = Z(o, n)) ? t : void 0; this.each(function () { Q.set(this, n, e) }) }, null, e, 1 < arguments.length, null, !0) }, removeData: function (e) { return this.each(function () { Q.remove(this, e) }) } }), S.extend({ queue: function (e, t, n) { var r; if (e) return t = (t || "fx") + "queue", r = Y.get(e, t), n && (!r || Array.isArray(n) ? r = Y.access(e, t, S.makeArray(n)) : r.push(n)), r || [] }, dequeue: function (e, t) { t = t || "fx"; var n = S.queue(e, t), r = n.length, i = n.shift(), o = S._queueHooks(e, t); "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function () { S.dequeue(e, t) }, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return Y.get(e, n) || Y.access(e, n, { empty: S.Callbacks("once memory").add(function () { Y.remove(e, [t + "queue", n]) }) }) } }), S.fn.extend({ queue: function (t, n) { var e = 2; return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? S.queue(this[0], t) : void 0 === n ? this : this.each(function () { var e = S.queue(this, t, n); S._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && S.dequeue(this, t) }) }, dequeue: function (e) { return this.each(function () { S.dequeue(this, e) }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, t) { var n, r = 1, i = S.Deferred(), o = this, a = this.length, s = function () { --r || i.resolveWith(o, [o]) }; "string" != typeof e && (t = e, e = void 0), e = e || "fx"; while (a--) (n = Y.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s)); return s(), i.promise(t) } }); var ee = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, te = new RegExp("^(?:([+-])=|)(" + ee + ")([a-z%]*)$", "i"), ne = ["Top", "Right", "Bottom", "Left"], re = E.documentElement, ie = function (e) { return S.contains(e.ownerDocument, e) }, oe = { composed: !0 }; re.getRootNode && (ie = function (e) { return S.contains(e.ownerDocument, e) || e.getRootNode(oe) === e.ownerDocument }); var ae = function (e, t) { return "none" === (e = t || e).style.display || "" === e.style.display && ie(e) && "none" === S.css(e, "display") }; function se(e, t, n, r) { var i, o, a = 20, s = r ? function () { return r.cur() } : function () { return S.css(e, t, "") }, u = s(), l = n && n[3] || (S.cssNumber[t] ? "" : "px"), c = e.nodeType && (S.cssNumber[t] || "px" !== l && +u) && te.exec(S.css(e, t)); if (c && c[3] !== l) { u /= 2, l = l || c[3], c = +u || 1; while (a--) S.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o; c *= 2, S.style(e, t, c + l), n = n || [] } return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i } var ue = {}; function le(e, t) { for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)(r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = Y.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && ae(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ue[s]) || (o = a.body.appendChild(a.createElement(s)), u = S.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ue[s] = u)))) : "none" !== n && (l[c] = "none", Y.set(r, "display", n))); for (c = 0; c < f; c++)null != l[c] && (e[c].style.display = l[c]); return e } S.fn.extend({ show: function () { return le(this, !0) }, hide: function () { return le(this) }, toggle: function (e) { return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () { ae(this) ? S(this).show() : S(this).hide() }) } }); var ce, fe, pe = /^(?:checkbox|radio)$/i, de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, he = /^$|^module$|\/(?:java|ecma)script/i; ce = E.createDocumentFragment().appendChild(E.createElement("div")), (fe = E.createElement("input")).setAttribute("type", "radio"), fe.setAttribute("checked", "checked"), fe.setAttribute("name", "t"), ce.appendChild(fe), y.checkClone = ce.cloneNode(!0).cloneNode(!0).lastChild.checked, ce.innerHTML = "<textarea>x</textarea>", y.noCloneChecked = !!ce.cloneNode(!0).lastChild.defaultValue, ce.innerHTML = "<option></option>", y.option = !!ce.lastChild; var ge = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; function ve(e, t) { var n; return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && A(e, t) ? S.merge([e], n) : n } function ye(e, t) { for (var n = 0, r = e.length; n < r; n++)Y.set(e[n], "globalEval", !t || Y.get(t[n], "globalEval")) } ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td, y.option || (ge.optgroup = ge.option = [1, "<select multiple='multiple'>", "</select>"]); var me = /<|&#?\w+;/; function xe(e, t, n, r, i) { for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)if ((o = e[d]) || 0 === o) if ("object" === w(o)) S.merge(p, o.nodeType ? [o] : o); else if (me.test(o)) { a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || ["", ""])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + S.htmlPrefilter(o) + u[2], c = u[0]; while (c--) a = a.lastChild; S.merge(p, a.childNodes), (a = f.firstChild).textContent = "" } else p.push(t.createTextNode(o)); f.textContent = "", d = 0; while (o = p[d++]) if (r && -1 < S.inArray(o, r)) i && i.push(o); else if (l = ie(o), a = ve(f.appendChild(o), "script"), l && ye(a), n) { c = 0; while (o = a[c++]) he.test(o.type || "") && n.push(o) } return f } var be = /^key/, we = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Te = /^([^.]*)(?:\.(.+)|)/; function Ce() { return !0 } function Ee() { return !1 } function Se(e, t) { return e === function () { try { return E.activeElement } catch (e) { } }() == ("focus" === t) } function ke(e, t, n, r, i, o) { var a, s; if ("object" == typeof t) { for (s in "string" != typeof n && (r = r || n, n = void 0), t) ke(e, s, n, r, t[s], o); return e } if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Ee; else if (!i) return e; return 1 === o && (a = i, (i = function (e) { return S().off(e), a.apply(this, arguments) }).guid = a.guid || (a.guid = S.guid++)), e.each(function () { S.event.add(this, t, i, r, n) }) } function Ae(e, i, o) { o ? (Y.set(e, i, !1), S.event.add(e, i, { namespace: !1, handler: function (e) { var t, n, r = Y.get(this, i); if (1 & e.isTrigger && this[i]) { if (r.length) (S.event.special[i] || {}).delegateType && e.stopPropagation(); else if (r = s.call(arguments), Y.set(this, i, r), t = o(this, i), this[i](), r !== (n = Y.get(this, i)) || t ? Y.set(this, i, !1) : n = {}, r !== n) return e.stopImmediatePropagation(), e.preventDefault(), n.value } else r.length && (Y.set(this, i, { value: S.event.trigger(S.extend(r[0], S.Event.prototype), r.slice(1), this) }), e.stopImmediatePropagation()) } })) : void 0 === Y.get(e, i) && S.event.add(e, i, Ce) } S.event = { global: {}, add: function (t, e, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, v = Y.get(t); if (V(t)) { n.handler && (n = (o = n).handler, i = o.selector), i && S.find.matchesSelector(re, i), n.guid || (n.guid = S.guid++), (u = v.events) || (u = v.events = Object.create(null)), (a = v.handle) || (a = v.handle = function (e) { return "undefined" != typeof S && S.event.triggered !== e.type ? S.event.dispatch.apply(t, arguments) : void 0 }), l = (e = (e || "").match(P) || [""]).length; while (l--) d = g = (s = Te.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = S.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = S.event.special[d] || {}, c = S.extend({ type: d, origType: g, data: r, handler: n, guid: n.guid, selector: i, needsContext: i && S.expr.match.needsContext.test(i), namespace: h.join(".") }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), S.event.global[d] = !0) } }, remove: function (e, t, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, v = Y.hasData(e) && Y.get(e); if (v && (u = v.events)) { l = (t = (t || "").match(P) || [""]).length; while (l--) if (d = g = (s = Te.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) { f = S.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length; while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c)); a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || S.removeEvent(e, d, v.handle), delete u[d]) } else for (d in u) S.event.remove(e, d + t[l], n, r, !0); S.isEmptyObject(u) && Y.remove(e, "handle events") } }, dispatch: function (e) { var t, n, r, i, o, a, s = new Array(arguments.length), u = S.event.fix(e), l = (Y.get(this, "events") || Object.create(null))[u.type] || [], c = S.event.special[u.type] || {}; for (s[0] = u, t = 1; t < arguments.length; t++)s[t] = arguments[t]; if (u.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, u)) { a = S.event.handlers.call(this, u, l), t = 0; while ((i = a[t++]) && !u.isPropagationStopped()) { u.currentTarget = i.elem, n = 0; while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped()) u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace) || (u.handleObj = o, u.data = o.data, void 0 !== (r = ((S.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(), u.stopPropagation())) } return c.postDispatch && c.postDispatch.call(this, u), u.result } }, handlers: function (e, t) { var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target; if (u && l.nodeType && !("click" === e.type && 1 <= e.button)) for (; l !== this; l = l.parentNode || this)if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) { for (o = [], a = {}, n = 0; n < u; n++)void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < S(i, this).index(l) : S.find(i, this, null, [l]).length), a[i] && o.push(r); o.length && s.push({ elem: l, handlers: o }) } return l = this, u < t.length && s.push({ elem: l, handlers: t.slice(u) }), s }, addProp: function (t, e) { Object.defineProperty(S.Event.prototype, t, { enumerable: !0, configurable: !0, get: m(e) ? function () { if (this.originalEvent) return e(this.originalEvent) } : function () { if (this.originalEvent) return this.originalEvent[t] }, set: function (e) { Object.defineProperty(this, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) } }) }, fix: function (e) { return e[S.expando] ? e : new S.Event(e) }, special: { load: { noBubble: !0 }, click: { setup: function (e) { var t = this || e; return pe.test(t.type) && t.click && A(t, "input") && Ae(t, "click", Ce), !1 }, trigger: function (e) { var t = this || e; return pe.test(t.type) && t.click && A(t, "input") && Ae(t, "click"), !0 }, _default: function (e) { var t = e.target; return pe.test(t.type) && t.click && A(t, "input") && Y.get(t, "click") || A(t, "a") } }, beforeunload: { postDispatch: function (e) { void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result) } } } }, S.removeEvent = function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n) }, S.Event = function (e, t) { if (!(this instanceof S.Event)) return new S.Event(e, t); e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ce : Ee, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && S.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[S.expando] = !0 }, S.Event.prototype = { constructor: S.Event, isDefaultPrevented: Ee, isPropagationStopped: Ee, isImmediatePropagationStopped: Ee, isSimulated: !1, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = Ce, e && !this.isSimulated && e.preventDefault() }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = Ce, e && !this.isSimulated && e.stopPropagation() }, stopImmediatePropagation: function () { var e = this.originalEvent; this.isImmediatePropagationStopped = Ce, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation() } }, S.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, code: !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function (e) { var t = e.button; return null == e.which && be.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && we.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which } }, S.event.addProp), S.each({ focus: "focusin", blur: "focusout" }, function (e, t) { S.event.special[e] = { setup: function () { return Ae(this, e, Se), !1 }, trigger: function () { return Ae(this, e), !0 }, delegateType: t } }), S.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (e, i) { S.event.special[e] = { delegateType: i, bindType: i, handle: function (e) { var t, n = e.relatedTarget, r = e.handleObj; return n && (n === this || S.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t } } }), S.fn.extend({ on: function (e, t, n, r) { return ke(this, e, t, n, r) }, one: function (e, t, n, r) { return ke(this, e, t, n, r, 1) }, off: function (e, t, n) { var r, i; if (e && e.preventDefault && e.handleObj) return r = e.handleObj, S(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this; if ("object" == typeof e) { for (i in e) this.off(i, t, e[i]); return this } return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Ee), this.each(function () { S.event.remove(this, e, n, t) }) } }); var Ne = /<script|<style|<link/i, De = /checked\s*(?:[^=]|=\s*.checked.)/i, je = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; function qe(e, t) { return A(e, "table") && A(11 !== t.nodeType ? t : t.firstChild, "tr") && S(e).children("tbody")[0] || e } function Le(e) { return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e } function He(e) { return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e } function Oe(e, t) { var n, r, i, o, a, s; if (1 === t.nodeType) { if (Y.hasData(e) && (s = Y.get(e).events)) for (i in Y.remove(t, "handle events"), s) for (n = 0, r = s[i].length; n < r; n++)S.event.add(t, i, s[i][n]); Q.hasData(e) && (o = Q.access(e), a = S.extend({}, o), Q.set(t, a)) } } function Pe(n, r, i, o) { r = g(r); var e, t, a, s, u, l, c = 0, f = n.length, p = f - 1, d = r[0], h = m(d); if (h || 1 < f && "string" == typeof d && !y.checkClone && De.test(d)) return n.each(function (e) { var t = n.eq(e); h && (r[0] = d.call(this, e, t.html())), Pe(t, r, i, o) }); if (f && (t = (e = xe(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) { for (s = (a = S.map(ve(e, "script"), Le)).length; c < f; c++)u = e, c !== p && (u = S.clone(u, !0, !0), s && S.merge(a, ve(u, "script"))), i.call(n[c], u, c); if (s) for (l = a[a.length - 1].ownerDocument, S.map(a, He), c = 0; c < s; c++)u = a[c], he.test(u.type || "") && !Y.access(u, "globalEval") && S.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? S._evalUrl && !u.noModule && S._evalUrl(u.src, { nonce: u.nonce || u.getAttribute("nonce") }, l) : b(u.textContent.replace(je, ""), u, l)) } return n } function Re(e, t, n) { for (var r, i = t ? S.filter(t, e) : e, o = 0; null != (r = i[o]); o++)n || 1 !== r.nodeType || S.cleanData(ve(r)), r.parentNode && (n && ie(r) && ye(ve(r, "script")), r.parentNode.removeChild(r)); return e } S.extend({ htmlPrefilter: function (e) { return e }, clone: function (e, t, n) { var r, i, o, a, s, u, l, c = e.cloneNode(!0), f = ie(e); if (!(y.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || S.isXMLDoc(e))) for (a = ve(c), r = 0, i = (o = ve(e)).length; r < i; r++)s = o[r], u = a[r], void 0, "input" === (l = u.nodeName.toLowerCase()) && pe.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue); if (t) if (n) for (o = o || ve(e), a = a || ve(c), r = 0, i = o.length; r < i; r++)Oe(o[r], a[r]); else Oe(e, c); return 0 < (a = ve(c, "script")).length && ye(a, !f && ve(e, "script")), c }, cleanData: function (e) { for (var t, n, r, i = S.event.special, o = 0; void 0 !== (n = e[o]); o++)if (V(n)) { if (t = n[Y.expando]) { if (t.events) for (r in t.events) i[r] ? S.event.remove(n, r) : S.removeEvent(n, r, t.handle); n[Y.expando] = void 0 } n[Q.expando] && (n[Q.expando] = void 0) } } }), S.fn.extend({ detach: function (e) { return Re(this, e, !0) }, remove: function (e) { return Re(this, e) }, text: function (e) { return $(this, function (e) { return void 0 === e ? S.text(this) : this.empty().each(function () { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e) }) }, null, e, arguments.length) }, append: function () { return Pe(this, arguments, function (e) { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || qe(this, e).appendChild(e) }) }, prepend: function () { return Pe(this, arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = qe(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return Pe(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return Pe(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, empty: function () { for (var e, t = 0; null != (e = this[t]); t++)1 === e.nodeType && (S.cleanData(ve(e, !1)), e.textContent = ""); return this }, clone: function (e, t) { return e = null != e && e, t = null == t ? e : t, this.map(function () { return S.clone(this, e, t) }) }, html: function (e) { return $(this, function (e) { var t = this[0] || {}, n = 0, r = this.length; if (void 0 === e && 1 === t.nodeType) return t.innerHTML; if ("string" == typeof e && !Ne.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) { e = S.htmlPrefilter(e); try { for (; n < r; n++)1 === (t = this[n] || {}).nodeType && (S.cleanData(ve(t, !1)), t.innerHTML = e); t = 0 } catch (e) { } } t && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var n = []; return Pe(this, arguments, function (e) { var t = this.parentNode; S.inArray(this, n) < 0 && (S.cleanData(ve(this)), t && t.replaceChild(e, this)) }, n) } }), S.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, a) { S.fn[e] = function (e) { for (var t, n = [], r = S(e), i = r.length - 1, o = 0; o <= i; o++)t = o === i ? this : this.clone(!0), S(r[o])[a](t), u.apply(n, t.get()); return this.pushStack(n) } }); var Me = new RegExp("^(" + ee + ")(?!px)[a-z%]+$", "i"), Ie = function (e) { var t = e.ownerDocument.defaultView; return t && t.opener || (t = C), t.getComputedStyle(e) }, We = function (e, t, n) { var r, i, o = {}; for (i in t) o[i] = e.style[i], e.style[i] = t[i]; for (i in r = n.call(e), t) e.style[i] = o[i]; return r }, Fe = new RegExp(ne.join("|"), "i"); function Be(e, t, n) { var r, i, o, a, s = e.style; return (n = n || Ie(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || ie(e) || (a = S.style(e, t)), !y.pixelBoxStyles() && Me.test(a) && Fe.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a } function $e(e, t) { return { get: function () { if (!e()) return (this.get = t).apply(this, arguments); delete this.get } } } !function () { function e() { if (l) { u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", re.appendChild(u).appendChild(l); var e = C.getComputedStyle(l); n = "1%" !== e.top, s = 12 === t(e.marginLeft), l.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), l.style.position = "absolute", i = 12 === t(l.offsetWidth / 3), re.removeChild(u), l = null } } function t(e) { return Math.round(parseFloat(e)) } var n, r, i, o, a, s, u = E.createElement("div"), l = E.createElement("div"); l.style && (l.style.backgroundClip = "content-box", l.cloneNode(!0).style.backgroundClip = "", y.clearCloneStyle = "content-box" === l.style.backgroundClip, S.extend(y, { boxSizingReliable: function () { return e(), r }, pixelBoxStyles: function () { return e(), o }, pixelPosition: function () { return e(), n }, reliableMarginLeft: function () { return e(), s }, scrollboxSize: function () { return e(), i }, reliableTrDimensions: function () { var e, t, n, r; return null == a && (e = E.createElement("table"), t = E.createElement("tr"), n = E.createElement("div"), e.style.cssText = "position:absolute;left:-11111px", t.style.height = "1px", n.style.height = "9px", re.appendChild(e).appendChild(t).appendChild(n), r = C.getComputedStyle(t), a = 3 < parseInt(r.height), re.removeChild(e)), a } })) }(); var _e = ["Webkit", "Moz", "ms"], ze = E.createElement("div").style, Ue = {}; function Xe(e) { var t = S.cssProps[e] || Ue[e]; return t || (e in ze ? e : Ue[e] = function (e) { var t = e[0].toUpperCase() + e.slice(1), n = _e.length; while (n--) if ((e = _e[n] + t) in ze) return e }(e) || e) } var Ve = /^(none|table(?!-c[ea]).+)/, Ge = /^--/, Ye = { position: "absolute", visibility: "hidden", display: "block" }, Qe = { letterSpacing: "0", fontWeight: "400" }; function Je(e, t, n) { var r = te.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t } function Ke(e, t, n, r, i, o) { var a = "width" === t ? 1 : 0, s = 0, u = 0; if (n === (r ? "border" : "content")) return 0; for (; a < 4; a += 2)"margin" === n && (u += S.css(e, n + ne[a], !0, i)), r ? ("content" === n && (u -= S.css(e, "padding" + ne[a], !0, i)), "margin" !== n && (u -= S.css(e, "border" + ne[a] + "Width", !0, i))) : (u += S.css(e, "padding" + ne[a], !0, i), "padding" !== n ? u += S.css(e, "border" + ne[a] + "Width", !0, i) : s += S.css(e, "border" + ne[a] + "Width", !0, i)); return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u } function Ze(e, t, n) { var r = Ie(e), i = (!y.boxSizingReliable() || n) && "border-box" === S.css(e, "boxSizing", !1, r), o = i, a = Be(e, t, r), s = "offset" + t[0].toUpperCase() + t.slice(1); if (Me.test(a)) { if (!n) return a; a = "auto" } return (!y.boxSizingReliable() && i || !y.reliableTrDimensions() && A(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === S.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === S.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + Ke(e, t, n || (i ? "border" : "content"), o, r, a) + "px" } function et(e, t, n, r, i) { return new et.prototype.init(e, t, n, r, i) } S.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = Be(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, gridArea: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnStart: !0, gridRow: !0, gridRowEnd: !0, gridRowStart: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: {}, style: function (e, t, n, r) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var i, o, a, s = X(t), u = Ge.test(t), l = e.style; if (u || (t = Xe(s)), a = S.cssHooks[t] || S.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t]; "string" === (o = typeof n) && (i = te.exec(n)) && i[1] && (n = se(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (S.cssNumber[s] ? "" : "px")), y.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n)) } }, css: function (e, t, n, r) { var i, o, a, s = X(t); return Ge.test(t) || (t = Xe(s)), (a = S.cssHooks[t] || S.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = Be(e, t, r)), "normal" === i && t in Qe && (i = Qe[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i } }), S.each(["height", "width"], function (e, u) { S.cssHooks[u] = { get: function (e, t, n) { if (t) return !Ve.test(S.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? Ze(e, u, n) : We(e, Ye, function () { return Ze(e, u, n) }) }, set: function (e, t, n) { var r, i = Ie(e), o = !y.scrollboxSize() && "absolute" === i.position, a = (o || n) && "border-box" === S.css(e, "boxSizing", !1, i), s = n ? Ke(e, u, n, a, i) : 0; return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - Ke(e, u, "border", !1, i) - .5)), s && (r = te.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = S.css(e, u)), Je(0, t, s) } } }), S.cssHooks.marginLeft = $e(y.reliableMarginLeft, function (e, t) { if (t) return (parseFloat(Be(e, "marginLeft")) || e.getBoundingClientRect().left - We(e, { marginLeft: 0 }, function () { return e.getBoundingClientRect().left })) + "px" }), S.each({ margin: "", padding: "", border: "Width" }, function (i, o) { S.cssHooks[i + o] = { expand: function (e) { for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++)n[i + ne[t] + o] = r[t] || r[t - 2] || r[0]; return n } }, "margin" !== i && (S.cssHooks[i + o].set = Je) }), S.fn.extend({ css: function (e, t) { return $(this, function (e, t, n) { var r, i, o = {}, a = 0; if (Array.isArray(t)) { for (r = Ie(e), i = t.length; a < i; a++)o[t[a]] = S.css(e, t[a], !1, r); return o } return void 0 !== n ? S.style(e, t, n) : S.css(e, t) }, e, t, 1 < arguments.length) } }), ((S.Tween = et).prototype = { constructor: et, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || S.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (S.cssNumber[n] ? "" : "px") }, cur: function () { var e = et.propHooks[this.prop]; return e && e.get ? e.get(this) : et.propHooks._default.get(this) }, run: function (e) { var t, n = et.propHooks[this.prop]; return this.options.duration ? this.pos = t = S.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : et.propHooks._default.set(this), this } }).init.prototype = et.prototype, (et.propHooks = { _default: { get: function (e) { var t; return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = S.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0 }, set: function (e) { S.fx.step[e.prop] ? S.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !S.cssHooks[e.prop] && null == e.elem.style[Xe(e.prop)] ? e.elem[e.prop] = e.now : S.style(e.elem, e.prop, e.now + e.unit) } } }).scrollTop = et.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, S.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 }, _default: "swing" }, S.fx = et.prototype.init, S.fx.step = {}; var tt, nt, rt, it, ot = /^(?:toggle|show|hide)$/, at = /queueHooks$/; function st() { nt && (!1 === E.hidden && C.requestAnimationFrame ? C.requestAnimationFrame(st) : C.setTimeout(st, S.fx.interval), S.fx.tick()) } function ut() { return C.setTimeout(function () { tt = void 0 }), tt = Date.now() } function lt(e, t) { var n, r = 0, i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t)i["margin" + (n = ne[r])] = i["padding" + n] = e; return t && (i.opacity = i.width = e), i } function ct(e, t, n) { for (var r, i = (ft.tweeners[t] || []).concat(ft.tweeners["*"]), o = 0, a = i.length; o < a; o++)if (r = i[o].call(n, t, e)) return r } function ft(o, e, t) { var n, a, r = 0, i = ft.prefilters.length, s = S.Deferred().always(function () { delete u.elem }), u = function () { if (a) return !1; for (var e = tt || ut(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++)l.tweens[r].run(n); return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1) }, l = s.promise({ elem: o, props: S.extend({}, e), opts: S.extend(!0, { specialEasing: {}, easing: S.easing._default }, t), originalProperties: e, originalOptions: t, startTime: tt || ut(), duration: t.duration, tweens: [], createTween: function (e, t) { var n = S.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing); return l.tweens.push(n), n }, stop: function (e) { var t = 0, n = e ? l.tweens.length : 0; if (a) return this; for (a = !0; t < n; t++)l.tweens[t].run(1); return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this } }), c = l.props; for (!function (e, t) { var n, r, i, o, a; for (n in e) if (i = t[r = X(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = S.cssHooks[r]) && "expand" in a) for (n in o = a.expand(o), delete e[r], o) n in e || (e[n] = o[n], t[n] = i); else t[r] = i }(c, l.opts.specialEasing); r < i; r++)if (n = ft.prefilters[r].call(l, o, c, l.opts)) return m(n.stop) && (S._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n; return S.map(c, ct, l), m(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), S.fx.timer(S.extend(u, { elem: o, anim: l, queue: l.opts.queue })), l } S.Animation = S.extend(ft, { tweeners: { "*": [function (e, t) { var n = this.createTween(e, t); return se(n.elem, e, te.exec(t), n), n }] }, tweener: function (e, t) { m(e) ? (t = e, e = ["*"]) : e = e.match(P); for (var n, r = 0, i = e.length; r < i; r++)n = e[r], ft.tweeners[n] = ft.tweeners[n] || [], ft.tweeners[n].unshift(t) }, prefilters: [function (e, t, n) { var r, i, o, a, s, u, l, c, f = "width" in t || "height" in t, p = this, d = {}, h = e.style, g = e.nodeType && ae(e), v = Y.get(e, "fxshow"); for (r in n.queue || (null == (a = S._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () { a.unqueued || s() }), a.unqueued++, p.always(function () { p.always(function () { a.unqueued--, S.queue(e, "fx").length || a.empty.fire() }) })), t) if (i = t[r], ot.test(i)) { if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) { if ("show" !== i || !v || void 0 === v[r]) continue; g = !0 } d[r] = v && v[r] || S.style(e, r) } if ((u = !S.isEmptyObject(t)) || !S.isEmptyObject(d)) for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = v && v.display) && (l = Y.get(e, "display")), "none" === (c = S.css(e, "display")) && (l ? c = l : (le([e], !0), l = e.style.display || l, c = S.css(e, "display"), le([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === S.css(e, "float") && (u || (p.done(function () { h.display = l }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), u = !1, d) u || (v ? "hidden" in v && (g = v.hidden) : v = Y.access(e, "fxshow", { display: l }), o && (v.hidden = !g), g && le([e], !0), p.done(function () { for (r in g || le([e]), Y.remove(e, "fxshow"), d) S.style(e, r, d[r]) })), u = ct(g ? v[r] : 0, r, p), r in v || (v[r] = u.start, g && (u.end = u.start, u.start = 0)) }], prefilter: function (e, t) { t ? ft.prefilters.unshift(e) : ft.prefilters.push(e) } }), S.speed = function (e, t, n) { var r = e && "object" == typeof e ? S.extend({}, e) : { complete: n || !n && t || m(e) && e, duration: e, easing: n && t || t && !m(t) && t }; return S.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in S.fx.speeds ? r.duration = S.fx.speeds[r.duration] : r.duration = S.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () { m(r.old) && r.old.call(this), r.queue && S.dequeue(this, r.queue) }, r }, S.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(ae).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (t, e, n, r) { var i = S.isEmptyObject(t), o = S.speed(e, n, r), a = function () { var e = ft(this, S.extend({}, t), o); (i || Y.get(this, "finish")) && e.stop(!0) }; return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a) }, stop: function (i, e, o) { var a = function (e) { var t = e.stop; delete e.stop, t(o) }; return "string" != typeof i && (o = e, e = i, i = void 0), e && this.queue(i || "fx", []), this.each(function () { var e = !0, t = null != i && i + "queueHooks", n = S.timers, r = Y.get(this); if (t) r[t] && r[t].stop && a(r[t]); else for (t in r) r[t] && r[t].stop && at.test(t) && a(r[t]); for (t = n.length; t--;)n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1)); !e && o || S.dequeue(this, i) }) }, finish: function (a) { return !1 !== a && (a = a || "fx"), this.each(function () { var e, t = Y.get(this), n = t[a + "queue"], r = t[a + "queueHooks"], i = S.timers, o = n ? n.length : 0; for (t.finish = !0, S.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;)i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1)); for (e = 0; e < o; e++)n[e] && n[e].finish && n[e].finish.call(this); delete t.finish }) } }), S.each(["toggle", "show", "hide"], function (e, r) { var i = S.fn[r]; S.fn[r] = function (e, t, n) { return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(lt(r, !0), e, t, n) } }), S.each({ slideDown: lt("show"), slideUp: lt("hide"), slideToggle: lt("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, r) { S.fn[e] = function (e, t, n) { return this.animate(r, e, t, n) } }), S.timers = [], S.fx.tick = function () { var e, t = 0, n = S.timers; for (tt = Date.now(); t < n.length; t++)(e = n[t])() || n[t] !== e || n.splice(t--, 1); n.length || S.fx.stop(), tt = void 0 }, S.fx.timer = function (e) { S.timers.push(e), S.fx.start() }, S.fx.interval = 13, S.fx.start = function () { nt || (nt = !0, st()) }, S.fx.stop = function () { nt = null }, S.fx.speeds = { slow: 600, fast: 200, _default: 400 }, S.fn.delay = function (r, e) { return r = S.fx && S.fx.speeds[r] || r, e = e || "fx", this.queue(e, function (e, t) { var n = C.setTimeout(e, r); t.stop = function () { C.clearTimeout(n) } }) }, rt = E.createElement("input"), it = E.createElement("select").appendChild(E.createElement("option")), rt.type = "checkbox", y.checkOn = "" !== rt.value, y.optSelected = it.selected, (rt = E.createElement("input")).value = "t", rt.type = "radio", y.radioValue = "t" === rt.value; var pt, dt = S.expr.attrHandle; S.fn.extend({ attr: function (e, t) { return $(this, S.attr, e, t, 1 < arguments.length) }, removeAttr: function (e) { return this.each(function () { S.removeAttr(this, e) }) } }), S.extend({ attr: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? S.prop(e, t, n) : (1 === o && S.isXMLDoc(e) || (i = S.attrHooks[t.toLowerCase()] || (S.expr.match.bool.test(t) ? pt : void 0)), void 0 !== n ? null === n ? void S.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = S.find.attr(e, t)) ? void 0 : r) }, attrHooks: { type: { set: function (e, t) { if (!y.radioValue && "radio" === t && A(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, removeAttr: function (e, t) { var n, r = 0, i = t && t.match(P); if (i && 1 === e.nodeType) while (n = i[r++]) e.removeAttribute(n) } }), pt = { set: function (e, t, n) { return !1 === t ? S.removeAttr(e, n) : e.setAttribute(n, n), n } }, S.each(S.expr.match.bool.source.match(/\w+/g), function (e, t) { var a = dt[t] || S.find.attr; dt[t] = function (e, t, n) { var r, i, o = t.toLowerCase(); return n || (i = dt[o], dt[o] = r, r = null != a(e, t, n) ? o : null, dt[o] = i), r } }); var ht = /^(?:input|select|textarea|button)$/i, gt = /^(?:a|area)$/i; function vt(e) { return (e.match(P) || []).join(" ") } function yt(e) { return e.getAttribute && e.getAttribute("class") || "" } function mt(e) { return Array.isArray(e) ? e : "string" == typeof e && e.match(P) || [] } S.fn.extend({ prop: function (e, t) { return $(this, S.prop, e, t, 1 < arguments.length) }, removeProp: function (e) { return this.each(function () { delete this[S.propFix[e] || e] }) } }), S.extend({ prop: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return 1 === o && S.isXMLDoc(e) || (t = S.propFix[t] || t, i = S.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t] }, propHooks: { tabIndex: { get: function (e) { var t = S.find.attr(e, "tabindex"); return t ? parseInt(t, 10) : ht.test(e.nodeName) || gt.test(e.nodeName) && e.href ? 0 : -1 } } }, propFix: { "for": "htmlFor", "class": "className" } }), y.optSelected || (S.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && t.parentNode && t.parentNode.selectedIndex, null }, set: function (e) { var t = e.parentNode; t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex) } }), S.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { S.propFix[this.toLowerCase()] = this }), S.fn.extend({ addClass: function (t) { var e, n, r, i, o, a, s, u = 0; if (m(t)) return this.each(function (e) { S(this).addClass(t.call(this, e, yt(this))) }); if ((e = mt(t)).length) while (n = this[u++]) if (i = yt(n), r = 1 === n.nodeType && " " + vt(i) + " ") { a = 0; while (o = e[a++]) r.indexOf(" " + o + " ") < 0 && (r += o + " "); i !== (s = vt(r)) && n.setAttribute("class", s) } return this }, removeClass: function (t) { var e, n, r, i, o, a, s, u = 0; if (m(t)) return this.each(function (e) { S(this).removeClass(t.call(this, e, yt(this))) }); if (!arguments.length) return this.attr("class", ""); if ((e = mt(t)).length) while (n = this[u++]) if (i = yt(n), r = 1 === n.nodeType && " " + vt(i) + " ") { a = 0; while (o = e[a++]) while (-1 < r.indexOf(" " + o + " ")) r = r.replace(" " + o + " ", " "); i !== (s = vt(r)) && n.setAttribute("class", s) } return this }, toggleClass: function (i, t) { var o = typeof i, a = "string" === o || Array.isArray(i); return "boolean" == typeof t && a ? t ? this.addClass(i) : this.removeClass(i) : m(i) ? this.each(function (e) { S(this).toggleClass(i.call(this, e, yt(this), t), t) }) : this.each(function () { var e, t, n, r; if (a) { t = 0, n = S(this), r = mt(i); while (e = r[t++]) n.hasClass(e) ? n.removeClass(e) : n.addClass(e) } else void 0 !== i && "boolean" !== o || ((e = yt(this)) && Y.set(this, "__className__", e), this.setAttribute && this.setAttribute("class", e || !1 === i ? "" : Y.get(this, "__className__") || "")) }) }, hasClass: function (e) { var t, n, r = 0; t = " " + e + " "; while (n = this[r++]) if (1 === n.nodeType && -1 < (" " + vt(yt(n)) + " ").indexOf(t)) return !0; return !1 } }); var xt = /\r/g; S.fn.extend({ val: function (n) { var r, e, i, t = this[0]; return arguments.length ? (i = m(n), this.each(function (e) { var t; 1 === this.nodeType && (null == (t = i ? n.call(this, e, S(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = S.map(t, function (e) { return null == e ? "" : e + "" })), (r = S.valHooks[this.type] || S.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t)) })) : t ? (r = S.valHooks[t.type] || S.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(xt, "") : null == e ? "" : e : void 0 } }), S.extend({ valHooks: { option: { get: function (e) { var t = S.find.attr(e, "value"); return null != t ? t : vt(S.text(e)) } }, select: { get: function (e) { var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length; for (r = o < 0 ? u : a ? o : 0; r < u; r++)if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) { if (t = S(n).val(), a) return t; s.push(t) } return s }, set: function (e, t) { var n, r, i = e.options, o = S.makeArray(t), a = i.length; while (a--) ((r = i[a]).selected = -1 < S.inArray(S.valHooks.option.get(r), o)) && (n = !0); return n || (e.selectedIndex = -1), o } } } }), S.each(["radio", "checkbox"], function () { S.valHooks[this] = { set: function (e, t) { if (Array.isArray(t)) return e.checked = -1 < S.inArray(S(e).val(), t) } }, y.checkOn || (S.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }), y.focusin = "onfocusin" in C; var bt = /^(?:focusinfocus|focusoutblur)$/, wt = function (e) { e.stopPropagation() }; S.extend(S.event, { trigger: function (e, t, n, r) { var i, o, a, s, u, l, c, f, p = [n || E], d = v.call(e, "type") ? e.type : e, h = v.call(e, "namespace") ? e.namespace.split(".") : []; if (o = f = a = n = n || E, 3 !== n.nodeType && 8 !== n.nodeType && !bt.test(d + S.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[S.expando] ? e : new S.Event(d, "object" == typeof e && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [e] : S.makeArray(t, [e]), c = S.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) { if (!r && !c.noBubble && !x(n)) { for (s = c.delegateType || d, bt.test(s + d) || (o = o.parentNode); o; o = o.parentNode)p.push(o), a = o; a === (n.ownerDocument || E) && p.push(a.defaultView || a.parentWindow || C) } i = 0; while ((o = p[i++]) && !e.isPropagationStopped()) f = o, e.type = 1 < i ? s : c.bindType || d, (l = (Y.get(o, "events") || Object.create(null))[e.type] && Y.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && V(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault()); return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !V(n) || u && m(n[d]) && !x(n) && ((a = n[u]) && (n[u] = null), S.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, wt), n[d](), e.isPropagationStopped() && f.removeEventListener(d, wt), S.event.triggered = void 0, a && (n[u] = a)), e.result } }, simulate: function (e, t, n) { var r = S.extend(new S.Event, n, { type: e, isSimulated: !0 }); S.event.trigger(r, null, t) } }), S.fn.extend({ trigger: function (e, t) { return this.each(function () { S.event.trigger(e, t, this) }) }, triggerHandler: function (e, t) { var n = this[0]; if (n) return S.event.trigger(e, t, n, !0) } }), y.focusin || S.each({ focus: "focusin", blur: "focusout" }, function (n, r) { var i = function (e) { S.event.simulate(r, e.target, S.event.fix(e)) }; S.event.special[r] = { setup: function () { var e = this.ownerDocument || this.document || this, t = Y.access(e, r); t || e.addEventListener(n, i, !0), Y.access(e, r, (t || 0) + 1) }, teardown: function () { var e = this.ownerDocument || this.document || this, t = Y.access(e, r) - 1; t ? Y.access(e, r, t) : (e.removeEventListener(n, i, !0), Y.remove(e, r)) } } }); var Tt = C.location, Ct = { guid: Date.now() }, Et = /\?/; S.parseXML = function (e) { var t; if (!e || "string" != typeof e) return null; try { t = (new C.DOMParser).parseFromString(e, "text/xml") } catch (e) { t = void 0 } return t && !t.getElementsByTagName("parsererror").length || S.error("Invalid XML: " + e), t }; var St = /\[\]$/, kt = /\r?\n/g, At = /^(?:submit|button|image|reset|file)$/i, Nt = /^(?:input|select|textarea|keygen)/i; function Dt(n, e, r, i) { var t; if (Array.isArray(e)) S.each(e, function (e, t) { r || St.test(n) ? i(n, t) : Dt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i) }); else if (r || "object" !== w(e)) i(n, e); else for (t in e) Dt(n + "[" + t + "]", e[t], r, i) } S.param = function (e, t) { var n, r = [], i = function (e, t) { var n = m(t) ? t() : t; r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n) }; if (null == e) return ""; if (Array.isArray(e) || e.jquery && !S.isPlainObject(e)) S.each(e, function () { i(this.name, this.value) }); else for (n in e) Dt(n, e[n], t, i); return r.join("&") }, S.fn.extend({ serialize: function () { return S.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = S.prop(this, "elements"); return e ? S.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !S(this).is(":disabled") && Nt.test(this.nodeName) && !At.test(e) && (this.checked || !pe.test(e)) }).map(function (e, t) { var n = S(this).val(); return null == n ? null : Array.isArray(n) ? S.map(n, function (e) { return { name: t.name, value: e.replace(kt, "\r\n") } }) : { name: t.name, value: n.replace(kt, "\r\n") } }).get() } }); var jt = /%20/g, qt = /#.*$/, Lt = /([?&])_=[^&]*/, Ht = /^(.*?):[ \t]*([^\r\n]*)$/gm, Ot = /^(?:GET|HEAD)$/, Pt = /^\/\//, Rt = {}, Mt = {}, It = "*/".concat("*"), Wt = E.createElement("a"); function Ft(o) { return function (e, t) { "string" != typeof e && (t = e, e = "*"); var n, r = 0, i = e.toLowerCase().match(P) || []; if (m(t)) while (n = i[r++]) "+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t) } } function Bt(t, i, o, a) { var s = {}, u = t === Mt; function l(e) { var r; return s[e] = !0, S.each(t[e] || [], function (e, t) { var n = t(i, o, a); return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1) }), r } return l(i.dataTypes[0]) || !s["*"] && l("*") } function $t(e, t) { var n, r, i = S.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && S.extend(!0, e, r), e } Wt.href = Tt.href, S.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Tt.href, type: "GET", isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": It, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": S.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? $t($t(e, S.ajaxSettings), t) : $t(S.ajaxSettings, e) }, ajaxPrefilter: Ft(Rt), ajaxTransport: Ft(Mt), ajax: function (e, t) { "object" == typeof e && (t = e, e = void 0), t = t || {}; var c, f, p, n, d, r, h, g, i, o, v = S.ajaxSetup({}, t), y = v.context || v, m = v.context && (y.nodeType || y.jquery) ? S(y) : S.event, x = S.Deferred(), b = S.Callbacks("once memory"), w = v.statusCode || {}, a = {}, s = {}, u = "canceled", T = { readyState: 0, getResponseHeader: function (e) { var t; if (h) { if (!n) { n = {}; while (t = Ht.exec(p)) n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]) } t = n[e.toLowerCase() + " "] } return null == t ? null : t.join(", ") }, getAllResponseHeaders: function () { return h ? p : null }, setRequestHeader: function (e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }, overrideMimeType: function (e) { return null == h && (v.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (h) T.always(e[T.status]); else for (t in e) w[t] = [w[t], e[t]]; return this }, abort: function (e) { var t = e || u; return c && c.abort(t), l(0, t), this } }; if (x.promise(T), v.url = ((e || v.url || Tt.href) + "").replace(Pt, Tt.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*").toLowerCase().match(P) || [""], null == v.crossDomain) { r = E.createElement("a"); try { r.href = v.url, r.href = r.href, v.crossDomain = Wt.protocol + "//" + Wt.host != r.protocol + "//" + r.host } catch (e) { v.crossDomain = !0 } } if (v.data && v.processData && "string" != typeof v.data && (v.data = S.param(v.data, v.traditional)), Bt(Rt, v, t, T), h) return T; for (i in (g = S.event && v.global) && 0 == S.active++ && S.event.trigger("ajaxStart"), v.type = v.type.toUpperCase(), v.hasContent = !Ot.test(v.type), f = v.url.replace(qt, ""), v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(jt, "+")) : (o = v.url.slice(f.length), v.data && (v.processData || "string" == typeof v.data) && (f += (Et.test(f) ? "&" : "?") + v.data, delete v.data), !1 === v.cache && (f = f.replace(Lt, "$1"), o = (Et.test(f) ? "&" : "?") + "_=" + Ct.guid++ + o), v.url = f + o), v.ifModified && (S.lastModified[f] && T.setRequestHeader("If-Modified-Since", S.lastModified[f]), S.etag[f] && T.setRequestHeader("If-None-Match", S.etag[f])), (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType), T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + It + "; q=0.01" : "") : v.accepts["*"]), v.headers) T.setRequestHeader(i, v.headers[i]); if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort(); if (u = "abort", b.add(v.complete), T.done(v.success), T.fail(v.error), c = Bt(Mt, v, t, T)) { if (T.readyState = 1, g && m.trigger("ajaxSend", [T, v]), h) return T; v.async && 0 < v.timeout && (d = C.setTimeout(function () { T.abort("timeout") }, v.timeout)); try { h = !1, c.send(a, l) } catch (e) { if (h) throw e; l(-1, e) } } else l(-1, "No Transport"); function l(e, t, n, r) { var i, o, a, s, u, l = t; h || (h = !0, d && C.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function (e, t, n) { var r, i, o, a, s = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type")); if (r) for (i in s) if (s[i] && s[i].test(r)) { u.unshift(i); break } if (u[0] in n) o = u[0]; else { for (i in n) { if (!u[0] || e.converters[i + " " + u[0]]) { o = i; break } a || (a = i) } o = o || a } if (o) return o !== u[0] && u.unshift(o), n[o] }(v, T, n)), !i && -1 < S.inArray("script", v.dataTypes) && (v.converters["text script"] = function () { }), s = function (e, t, n, r) { var i, o, a, s, u, l = {}, c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) { if (!(a = l[u + " " + o] || l["* " + o])) for (i in l) if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) { !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break } if (!0 !== a) if (a && e["throws"]) t = a(t); else try { t = a(t) } catch (e) { return { state: "parsererror", error: a ? e : "No conversion from " + u + " to " + o } } } return { state: "success", data: t } }(v, s, T, i), i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (S.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (S.etag[f] = u)), 204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]), b.fireWith(y, [T, l]), g && (m.trigger("ajaxComplete", [T, v]), --S.active || S.event.trigger("ajaxStop"))) } return T }, getJSON: function (e, t, n) { return S.get(e, t, n, "json") }, getScript: function (e, t) { return S.get(e, void 0, t, "script") } }), S.each(["get", "post"], function (e, i) { S[i] = function (e, t, n, r) { return m(t) && (r = r || n, n = t, t = void 0), S.ajax(S.extend({ url: e, type: i, dataType: r, data: t, success: n }, S.isPlainObject(e) && e)) } }), S.ajaxPrefilter(function (e) { var t; for (t in e.headers) "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "") }), S._evalUrl = function (e, t, n) { return S.ajax({ url: e, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, converters: { "text script": function () { } }, dataFilter: function (e) { S.globalEval(e, t, n) } }) }, S.fn.extend({ wrapAll: function (e) { var t; return this[0] && (m(e) && (e = e.call(this[0])), t = S(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstElementChild) e = e.firstElementChild; return e }).append(this)), this }, wrapInner: function (n) { return m(n) ? this.each(function (e) { S(this).wrapInner(n.call(this, e)) }) : this.each(function () { var e = S(this), t = e.contents(); t.length ? t.wrapAll(n) : e.append(n) }) }, wrap: function (t) { var n = m(t); return this.each(function (e) { S(this).wrapAll(n ? t.call(this, e) : t) }) }, unwrap: function (e) { return this.parent(e).not("body").each(function () { S(this).replaceWith(this.childNodes) }), this } }), S.expr.pseudos.hidden = function (e) { return !S.expr.pseudos.visible(e) }, S.expr.pseudos.visible = function (e) { return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length) }, S.ajaxSettings.xhr = function () { try { return new C.XMLHttpRequest } catch (e) { } }; var _t = { 0: 200, 1223: 204 }, zt = S.ajaxSettings.xhr(); y.cors = !!zt && "withCredentials" in zt, y.ajax = zt = !!zt, S.ajaxTransport(function (i) { var o, a; if (y.cors || zt && !i.crossDomain) return { send: function (e, t) { var n, r = i.xhr(); if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields) for (n in i.xhrFields) r[n] = i.xhrFields[n]; for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e) r.setRequestHeader(n, e[n]); o = function (e) { return function () { o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(_t[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? { binary: r.response } : { text: r.responseText }, r.getAllResponseHeaders())) } }, r.onload = o(), a = r.onerror = r.ontimeout = o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function () { 4 === r.readyState && C.setTimeout(function () { o && a() }) }, o = o("abort"); try { r.send(i.hasContent && i.data || null) } catch (e) { if (o) throw e } }, abort: function () { o && o() } } }), S.ajaxPrefilter(function (e) { e.crossDomain && (e.contents.script = !1) }), S.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function (e) { return S.globalEval(e), e } } }), S.ajaxPrefilter("script", function (e) { void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET") }), S.ajaxTransport("script", function (n) { var r, i; if (n.crossDomain || n.scriptAttrs) return { send: function (e, t) { r = S("<script>").attr(n.scriptAttrs || {}).prop({ charset: n.scriptCharset, src: n.url }).on("load error", i = function (e) { r.remove(), i = null, e && t("error" === e.type ? 404 : 200, e.type) }), E.head.appendChild(r[0]) }, abort: function () { i && i() } } }); var Ut, Xt = [], Vt = /(=)\?(?=&|$)|\?\?/; S.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = Xt.pop() || S.expando + "_" + Ct.guid++; return this[e] = !0, e } }), S.ajaxPrefilter("json jsonp", function (e, t, n) { var r, i, o, a = !1 !== e.jsonp && (Vt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Vt.test(e.data) && "data"); if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Vt, "$1" + r) : !1 !== e.jsonp && (e.url += (Et.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () { return o || S.error(r + " was not called"), o[0] }, e.dataTypes[0] = "json", i = C[r], C[r] = function () { o = arguments }, n.always(function () { void 0 === i ? S(C).removeProp(r) : C[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Xt.push(r)), o && m(i) && i(o[0]), o = i = void 0 }), "script" }), y.createHTMLDocument = ((Ut = E.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Ut.childNodes.length), S.parseHTML = function (e, t, n) { return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (y.createHTMLDocument ? ((r = (t = E.implementation.createHTMLDocument("")).createElement("base")).href = E.location.href, t.head.appendChild(r)) : t = E), o = !n && [], (i = N.exec(e)) ? [t.createElement(i[1])] : (i = xe([e], t, o), o && o.length && S(o).remove(), S.merge([], i.childNodes))); var r, i, o }, S.fn.load = function (e, t, n) { var r, i, o, a = this, s = e.indexOf(" "); return -1 < s && (r = vt(e.slice(s)), e = e.slice(0, s)), m(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), 0 < a.length && S.ajax({ url: e, type: i || "GET", dataType: "html", data: t }).done(function (e) { o = arguments, a.html(r ? S("<div>").append(S.parseHTML(e)).find(r) : e) }).always(n && function (e, t) { a.each(function () { n.apply(this, o || [e.responseText, t, e]) }) }), this }, S.expr.pseudos.animated = function (t) { return S.grep(S.timers, function (e) { return t === e.elem }).length }, S.offset = { setOffset: function (e, t, n) { var r, i, o, a, s, u, l = S.css(e, "position"), c = S(e), f = {}; "static" === l && (e.style.position = "relative"), s = c.offset(), o = S.css(e, "top"), u = S.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), m(t) && (t = t.call(e, n, S.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : ("number" == typeof f.top && (f.top += "px"), "number" == typeof f.left && (f.left += "px"), c.css(f)) } }, S.fn.extend({ offset: function (t) { if (arguments.length) return void 0 === t ? this : this.each(function (e) { S.offset.setOffset(this, t, e) }); var e, n, r = this[0]; return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, { top: e.top + n.pageYOffset, left: e.left + n.pageXOffset }) : { top: 0, left: 0 } : void 0 }, position: function () { if (this[0]) { var e, t, n, r = this[0], i = { top: 0, left: 0 }; if ("fixed" === S.css(r, "position")) t = r.getBoundingClientRect(); else { t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement; while (e && (e === n.body || e === n.documentElement) && "static" === S.css(e, "position")) e = e.parentNode; e && e !== r && 1 === e.nodeType && ((i = S(e).offset()).top += S.css(e, "borderTopWidth", !0), i.left += S.css(e, "borderLeftWidth", !0)) } return { top: t.top - i.top - S.css(r, "marginTop", !0), left: t.left - i.left - S.css(r, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent; while (e && "static" === S.css(e, "position")) e = e.offsetParent; return e || re }) } }), S.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, i) { var o = "pageYOffset" === i; S.fn[t] = function (e) { return $(this, function (e, t, n) { var r; if (x(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t]; r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n }, t, e, arguments.length) } }), S.each(["top", "left"], function (e, n) { S.cssHooks[n] = $e(y.pixelPosition, function (e, t) { if (t) return t = Be(e, n), Me.test(t) ? S(e).position()[n] + "px" : t }) }), S.each({ Height: "height", Width: "width" }, function (a, s) { S.each({ padding: "inner" + a, content: s, "": "outer" + a }, function (r, o) { S.fn[o] = function (e, t) { var n = arguments.length && (r || "boolean" != typeof e), i = r || (!0 === e || !0 === t ? "margin" : "border"); return $(this, function (e, t, n) { var r; return x(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? S.css(e, t, i) : S.style(e, t, n, i) }, s, n ? e : void 0, n) } }) }), S.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { S.fn[t] = function (e) { return this.on(t, e) } }), S.fn.extend({ bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) }, hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) } }), S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, n) { S.fn[n] = function (e, t) { return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n) } }); var Gt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; S.proxy = function (e, t) { var n, r, i; if ("string" == typeof t && (n = e[t], t = e, e = n), m(e)) return r = s.call(arguments, 2), (i = function () { return e.apply(t || this, r.concat(s.call(arguments))) }).guid = e.guid = e.guid || S.guid++, i }, S.holdReady = function (e) { e ? S.readyWait++ : S.ready(!0) }, S.isArray = Array.isArray, S.parseJSON = JSON.parse, S.nodeName = A, S.isFunction = m, S.isWindow = x, S.camelCase = X, S.type = w, S.now = Date.now, S.isNumeric = function (e) { var t = S.type(e); return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e)) }, S.trim = function (e) { return null == e ? "" : (e + "").replace(Gt, "") }, "function" == typeof define && define.amd && define("jquery", [], function () { return S }); var Yt = C.jQuery, Qt = C.$; return S.noConflict = function (e) { return C.$ === S && (C.$ = Qt), e && C.jQuery === S && (C.jQuery = Yt), S }, "undefined" == typeof e && (C.jQuery = C.$ = S), S });

/*! jQuery UI - v1.12.1 - 2018-02-14*/
(function (t) { "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery) })(function (t) {
    function e(t) { for (var e = t.css("visibility"); "inherit" === e;)t = t.parent(), e = t.css("visibility"); return "hidden" !== e } function i(t) { for (var e, i; t.length && t[0] !== document;) { if (e = t.css("position"), ("absolute" === e || "relative" === e || "fixed" === e) && (i = parseInt(t.css("zIndex"), 10), !isNaN(i) && 0 !== i)) return i; t = t.parent() } return 0 } function s() { this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: !1, showMonthAfterYear: !1, yearSuffix: "" }, this._defaults = { showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: !1, hideIfNoPrevNext: !1, navigationAsDateFormat: !1, gotoCurrent: !1, changeMonth: !1, changeYear: !1, yearRange: "c-10:c+10", showOtherMonths: !1, selectOtherMonths: !1, showWeek: !1, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: !0, showButtonPanel: !1, autoSize: !1, disabled: !1 }, t.extend(this._defaults, this.regional[""]), this.regional.en = t.extend(!0, {}, this.regional[""]), this.regional["en-US"] = t.extend(!0, {}, this.regional.en), this.dpDiv = n(t("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) } function n(e) { var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a"; return e.on("mouseout", i, function () { t(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && t(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && t(this).removeClass("ui-datepicker-next-hover") }).on("mouseover", i, o) } function o() { t.datepicker._isDisabledDatepicker(p.inline ? p.dpDiv.parent()[0] : p.input[0]) || (t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), t(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && t(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && t(this).addClass("ui-datepicker-next-hover")) } function a(e, i) { t.extend(e, i); for (var s in i) null == i[s] && (e[s] = i[s]); return e } function r(t) { return function () { var e = this.element.val(); t.apply(this, arguments), this._refresh(), e !== this.element.val() && this._trigger("change") } } t.ui = t.ui || {}, t.ui.version = "1.12.1"; var l = 0, h = Array.prototype.slice; t.cleanData = function (e) { return function (i) { var s, n, o; for (o = 0; null != (n = i[o]); o++)try { s = t._data(n, "events"), s && s.remove && t(n).triggerHandler("remove") } catch (a) { } e(i) } }(t.cleanData), t.widget = function (e, i, s) { var n, o, a, r = {}, l = e.split(".")[0]; e = e.split(".")[1]; var h = l + "-" + e; return s || (s = i, i = t.Widget), t.isArray(s) && (s = t.extend.apply(null, [{}].concat(s))), t.expr.pseudos[h.toLowerCase()] = function (e) { return !!t.data(e, h) }, t[l] = t[l] || {}, n = t[l][e], o = t[l][e] = function (t, e) { return this._createWidget ? (arguments.length && this._createWidget(t, e), void 0) : new o(t, e) }, t.extend(o, n, { version: s.version, _proto: t.extend({}, s), _childConstructors: [] }), a = new i, a.options = t.widget.extend({}, a.options), t.each(s, function (e, s) { return t.isFunction(s) ? (r[e] = function () { function t() { return i.prototype[e].apply(this, arguments) } function n(t) { return i.prototype[e].apply(this, t) } return function () { var e, i = this._super, o = this._superApply; return this._super = t, this._superApply = n, e = s.apply(this, arguments), this._super = i, this._superApply = o, e } }(), void 0) : (r[e] = s, void 0) }), o.prototype = t.widget.extend(a, { widgetEventPrefix: n ? a.widgetEventPrefix || e : e }, r, { constructor: o, namespace: l, widgetName: e, widgetFullName: h }), n ? (t.each(n._childConstructors, function (e, i) { var s = i.prototype; t.widget(s.namespace + "." + s.widgetName, o, i._proto) }), delete n._childConstructors) : i._childConstructors.push(o), t.widget.bridge(e, o), o }, t.widget.extend = function (e) { for (var i, s, n = h.call(arguments, 1), o = 0, a = n.length; a > o; o++)for (i in n[o]) s = n[o][i], n[o].hasOwnProperty(i) && void 0 !== s && (e[i] = t.isPlainObject(s) ? t.isPlainObject(e[i]) ? t.widget.extend({}, e[i], s) : t.widget.extend({}, s) : s); return e }, t.widget.bridge = function (e, i) { var s = i.prototype.widgetFullName || e; t.fn[e] = function (n) { var o = "string" == typeof n, a = h.call(arguments, 1), r = this; return o ? this.length || "instance" !== n ? this.each(function () { var i, o = t.data(this, s); return "instance" === n ? (r = o, !1) : o ? t.isFunction(o[n]) && "_" !== n.charAt(0) ? (i = o[n].apply(o, a), i !== o && void 0 !== i ? (r = i && i.jquery ? r.pushStack(i.get()) : i, !1) : void 0) : t.error("no such method '" + n + "' for " + e + " widget instance") : t.error("cannot call methods on " + e + " prior to initialization; " + "attempted to call method '" + n + "'") }) : r = void 0 : (a.length && (n = t.widget.extend.apply(null, [n].concat(a))), this.each(function () { var e = t.data(this, s); e ? (e.option(n || {}), e._init && e._init()) : t.data(this, s, new i(n, this)) })), r } }, t.Widget = function () { }, t.Widget._childConstructors = [], t.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { classes: {}, disabled: !1, create: null }, _createWidget: function (e, i) { i = t(i || this.defaultElement || this)[0], this.element = t(i), this.uuid = l++ , this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = t(), this.hoverable = t(), this.focusable = t(), this.classesElementLookup = {}, i !== this && (t.data(i, this.widgetFullName, this), this._on(!0, this.element, { remove: function (t) { t.target === i && this.destroy() } }), this.document = t(i.style ? i.ownerDocument : i.document || i), this.window = t(this.document[0].defaultView || this.document[0].parentWindow)), this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e), this._create(), this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger("create", null, this._getCreateEventData()), this._init() }, _getCreateOptions: function () { return {} }, _getCreateEventData: t.noop, _create: t.noop, _init: t.noop, destroy: function () { var e = this; this._destroy(), t.each(this.classesElementLookup, function (t, i) { e._removeClass(i, t) }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr("aria-disabled"), this.bindings.off(this.eventNamespace) }, _destroy: t.noop, widget: function () { return this.element }, option: function (e, i) { var s, n, o, a = e; if (0 === arguments.length) return t.widget.extend({}, this.options); if ("string" == typeof e) if (a = {}, s = e.split("."), e = s.shift(), s.length) { for (n = a[e] = t.widget.extend({}, this.options[e]), o = 0; s.length - 1 > o; o++)n[s[o]] = n[s[o]] || {}, n = n[s[o]]; if (e = s.pop(), 1 === arguments.length) return void 0 === n[e] ? null : n[e]; n[e] = i } else { if (1 === arguments.length) return void 0 === this.options[e] ? null : this.options[e]; a[e] = i } return this._setOptions(a), this }, _setOptions: function (t) { var e; for (e in t) this._setOption(e, t[e]); return this }, _setOption: function (t, e) { return "classes" === t && this._setOptionClasses(e), this.options[t] = e, "disabled" === t && this._setOptionDisabled(e), this }, _setOptionClasses: function (e) { var i, s, n; for (i in e) n = this.classesElementLookup[i], e[i] !== this.options.classes[i] && n && n.length && (s = t(n.get()), this._removeClass(n, i), s.addClass(this._classes({ element: s, keys: i, classes: e, add: !0 }))) }, _setOptionDisabled: function (t) { this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!t), t && (this._removeClass(this.hoverable, null, "ui-state-hover"), this._removeClass(this.focusable, null, "ui-state-focus")) }, enable: function () { return this._setOptions({ disabled: !1 }) }, disable: function () { return this._setOptions({ disabled: !0 }) }, _classes: function (e) { function i(i, o) { var a, r; for (r = 0; i.length > r; r++)a = n.classesElementLookup[i[r]] || t(), a = e.add ? t(t.uniqueSort(a.get().concat(e.element.get()))) : t(a.not(e.element).get()), n.classesElementLookup[i[r]] = a, s.push(i[r]), o && e.classes[i[r]] && s.push(e.classes[i[r]]) } var s = [], n = this; return e = t.extend({ element: this.element, classes: this.options.classes || {} }, e), this._on(e.element, { remove: "_untrackClassesElement" }), e.keys && i(e.keys.match(/\S+/g) || [], !0), e.extra && i(e.extra.match(/\S+/g) || []), s.join(" ") }, _untrackClassesElement: function (e) { var i = this; t.each(i.classesElementLookup, function (s, n) { -1 !== t.inArray(e.target, n) && (i.classesElementLookup[s] = t(n.not(e.target).get())) }) }, _removeClass: function (t, e, i) { return this._toggleClass(t, e, i, !1) }, _addClass: function (t, e, i) { return this._toggleClass(t, e, i, !0) }, _toggleClass: function (t, e, i, s) { s = "boolean" == typeof s ? s : i; var n = "string" == typeof t || null === t, o = { extra: n ? e : i, keys: n ? t : e, element: n ? this.element : t, add: s }; return o.element.toggleClass(this._classes(o), s), this }, _on: function (e, i, s) { var n, o = this; "boolean" != typeof e && (s = i, i = e, e = !1), s ? (i = n = t(i), this.bindings = this.bindings.add(i)) : (s = i, i = this.element, n = this.widget()), t.each(s, function (s, a) { function r() { return e || o.options.disabled !== !0 && !t(this).hasClass("ui-state-disabled") ? ("string" == typeof a ? o[a] : a).apply(o, arguments) : void 0 } "string" != typeof a && (r.guid = a.guid = a.guid || r.guid || t.guid++); var l = s.match(/^([\w:-]*)\s*(.*)$/), h = l[1] + o.eventNamespace, c = l[2]; c ? n.on(h, c, r) : i.on(h, r) }) }, _off: function (e, i) { i = (i || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, e.off(i).off(i), this.bindings = t(this.bindings.not(e).get()), this.focusable = t(this.focusable.not(e).get()), this.hoverable = t(this.hoverable.not(e).get()) }, _delay: function (t, e) { function i() { return ("string" == typeof t ? s[t] : t).apply(s, arguments) } var s = this; return setTimeout(i, e || 0) }, _hoverable: function (e) { this.hoverable = this.hoverable.add(e), this._on(e, { mouseenter: function (e) { this._addClass(t(e.currentTarget), null, "ui-state-hover") }, mouseleave: function (e) { this._removeClass(t(e.currentTarget), null, "ui-state-hover") } }) }, _focusable: function (e) { this.focusable = this.focusable.add(e), this._on(e, { focusin: function (e) { this._addClass(t(e.currentTarget), null, "ui-state-focus") }, focusout: function (e) { this._removeClass(t(e.currentTarget), null, "ui-state-focus") } }) }, _trigger: function (e, i, s) { var n, o, a = this.options[e]; if (s = s || {}, i = t.Event(i), i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(), i.target = this.element[0], o = i.originalEvent) for (n in o) n in i || (i[n] = o[n]); return this.element.trigger(i, s), !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented()) } }, t.each({ show: "fadeIn", hide: "fadeOut" }, function (e, i) { t.Widget.prototype["_" + e] = function (s, n, o) { "string" == typeof n && (n = { effect: n }); var a, r = n ? n === !0 || "number" == typeof n ? i : n.effect || i : e; n = n || {}, "number" == typeof n && (n = { duration: n }), a = !t.isEmptyObject(n), n.complete = o, n.delay && s.delay(n.delay), a && t.effects && t.effects.effect[r] ? s[e](n) : r !== e && s[r] ? s[r](n.duration, n.easing, o) : s.queue(function (i) { t(this)[e](), o && o.call(s[0]), i() }) } }), t.widget, function () { function e(t, e, i) { return [parseFloat(t[0]) * (u.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (u.test(t[1]) ? i / 100 : 1)] } function i(e, i) { return parseInt(t.css(e, i), 10) || 0 } function s(e) { var i = e[0]; return 9 === i.nodeType ? { width: e.width(), height: e.height(), offset: { top: 0, left: 0 } } : t.isWindow(i) ? { width: e.width(), height: e.height(), offset: { top: e.scrollTop(), left: e.scrollLeft() } } : i.preventDefault ? { width: 0, height: 0, offset: { top: i.pageY, left: i.pageX } } : { width: e.outerWidth(), height: e.outerHeight(), offset: e.offset() } } var n, o = Math.max, a = Math.abs, r = /left|center|right/, l = /top|center|bottom/, h = /[\+\-]\d+(\.[\d]+)?%?/, c = /^\w+/, u = /%$/, d = t.fn.position; t.position = { scrollbarWidth: function () { if (void 0 !== n) return n; var e, i, s = t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), o = s.children()[0]; return t("body").append(s), e = o.offsetWidth, s.css("overflow", "scroll"), i = o.offsetWidth, e === i && (i = s[0].clientWidth), s.remove(), n = e - i }, getScrollInfo: function (e) { var i = e.isWindow || e.isDocument ? "" : e.element.css("overflow-x"), s = e.isWindow || e.isDocument ? "" : e.element.css("overflow-y"), n = "scroll" === i || "auto" === i && e.width < e.element[0].scrollWidth, o = "scroll" === s || "auto" === s && e.height < e.element[0].scrollHeight; return { width: o ? t.position.scrollbarWidth() : 0, height: n ? t.position.scrollbarWidth() : 0 } }, getWithinInfo: function (e) { var i = t(e || window), s = t.isWindow(i[0]), n = !!i[0] && 9 === i[0].nodeType, o = !s && !n; return { element: i, isWindow: s, isDocument: n, offset: o ? t(e).offset() : { left: 0, top: 0 }, scrollLeft: i.scrollLeft(), scrollTop: i.scrollTop(), width: i.outerWidth(), height: i.outerHeight() } } }, t.fn.position = function (n) { if (!n || !n.of) return d.apply(this, arguments); n = t.extend({}, n); var u, p, f, g, m, _, v = t(n.of), b = t.position.getWithinInfo(n.within), y = t.position.getScrollInfo(b), w = (n.collision || "flip").split(" "), k = {}; return _ = s(v), v[0].preventDefault && (n.at = "left top"), p = _.width, f = _.height, g = _.offset, m = t.extend({}, g), t.each(["my", "at"], function () { var t, e, i = (n[this] || "").split(" "); 1 === i.length && (i = r.test(i[0]) ? i.concat(["center"]) : l.test(i[0]) ? ["center"].concat(i) : ["center", "center"]), i[0] = r.test(i[0]) ? i[0] : "center", i[1] = l.test(i[1]) ? i[1] : "center", t = h.exec(i[0]), e = h.exec(i[1]), k[this] = [t ? t[0] : 0, e ? e[0] : 0], n[this] = [c.exec(i[0])[0], c.exec(i[1])[0]] }), 1 === w.length && (w[1] = w[0]), "right" === n.at[0] ? m.left += p : "center" === n.at[0] && (m.left += p / 2), "bottom" === n.at[1] ? m.top += f : "center" === n.at[1] && (m.top += f / 2), u = e(k.at, p, f), m.left += u[0], m.top += u[1], this.each(function () { var s, r, l = t(this), h = l.outerWidth(), c = l.outerHeight(), d = i(this, "marginLeft"), _ = i(this, "marginTop"), x = h + d + i(this, "marginRight") + y.width, C = c + _ + i(this, "marginBottom") + y.height, D = t.extend({}, m), T = e(k.my, l.outerWidth(), l.outerHeight()); "right" === n.my[0] ? D.left -= h : "center" === n.my[0] && (D.left -= h / 2), "bottom" === n.my[1] ? D.top -= c : "center" === n.my[1] && (D.top -= c / 2), D.left += T[0], D.top += T[1], s = { marginLeft: d, marginTop: _ }, t.each(["left", "top"], function (e, i) { t.ui.position[w[e]] && t.ui.position[w[e]][i](D, { targetWidth: p, targetHeight: f, elemWidth: h, elemHeight: c, collisionPosition: s, collisionWidth: x, collisionHeight: C, offset: [u[0] + T[0], u[1] + T[1]], my: n.my, at: n.at, within: b, elem: l }) }), n.using && (r = function (t) { var e = g.left - D.left, i = e + p - h, s = g.top - D.top, r = s + f - c, u = { target: { element: v, left: g.left, top: g.top, width: p, height: f }, element: { element: l, left: D.left, top: D.top, width: h, height: c }, horizontal: 0 > i ? "left" : e > 0 ? "right" : "center", vertical: 0 > r ? "top" : s > 0 ? "bottom" : "middle" }; h > p && p > a(e + i) && (u.horizontal = "center"), c > f && f > a(s + r) && (u.vertical = "middle"), u.important = o(a(e), a(i)) > o(a(s), a(r)) ? "horizontal" : "vertical", n.using.call(this, t, u) }), l.offset(t.extend(D, { using: r })) }) }, t.ui.position = { fit: { left: function (t, e) { var i, s = e.within, n = s.isWindow ? s.scrollLeft : s.offset.left, a = s.width, r = t.left - e.collisionPosition.marginLeft, l = n - r, h = r + e.collisionWidth - a - n; e.collisionWidth > a ? l > 0 && 0 >= h ? (i = t.left + l + e.collisionWidth - a - n, t.left += l - i) : t.left = h > 0 && 0 >= l ? n : l > h ? n + a - e.collisionWidth : n : l > 0 ? t.left += l : h > 0 ? t.left -= h : t.left = o(t.left - r, t.left) }, top: function (t, e) { var i, s = e.within, n = s.isWindow ? s.scrollTop : s.offset.top, a = e.within.height, r = t.top - e.collisionPosition.marginTop, l = n - r, h = r + e.collisionHeight - a - n; e.collisionHeight > a ? l > 0 && 0 >= h ? (i = t.top + l + e.collisionHeight - a - n, t.top += l - i) : t.top = h > 0 && 0 >= l ? n : l > h ? n + a - e.collisionHeight : n : l > 0 ? t.top += l : h > 0 ? t.top -= h : t.top = o(t.top - r, t.top) } }, flip: { left: function (t, e) { var i, s, n = e.within, o = n.offset.left + n.scrollLeft, r = n.width, l = n.isWindow ? n.scrollLeft : n.offset.left, h = t.left - e.collisionPosition.marginLeft, c = h - l, u = h + e.collisionWidth - r - l, d = "left" === e.my[0] ? -e.elemWidth : "right" === e.my[0] ? e.elemWidth : 0, p = "left" === e.at[0] ? e.targetWidth : "right" === e.at[0] ? -e.targetWidth : 0, f = -2 * e.offset[0]; 0 > c ? (i = t.left + d + p + f + e.collisionWidth - r - o, (0 > i || a(c) > i) && (t.left += d + p + f)) : u > 0 && (s = t.left - e.collisionPosition.marginLeft + d + p + f - l, (s > 0 || u > a(s)) && (t.left += d + p + f)) }, top: function (t, e) { var i, s, n = e.within, o = n.offset.top + n.scrollTop, r = n.height, l = n.isWindow ? n.scrollTop : n.offset.top, h = t.top - e.collisionPosition.marginTop, c = h - l, u = h + e.collisionHeight - r - l, d = "top" === e.my[1], p = d ? -e.elemHeight : "bottom" === e.my[1] ? e.elemHeight : 0, f = "top" === e.at[1] ? e.targetHeight : "bottom" === e.at[1] ? -e.targetHeight : 0, g = -2 * e.offset[1]; 0 > c ? (s = t.top + p + f + g + e.collisionHeight - r - o, (0 > s || a(c) > s) && (t.top += p + f + g)) : u > 0 && (i = t.top - e.collisionPosition.marginTop + p + f + g - l, (i > 0 || u > a(i)) && (t.top += p + f + g)) } }, flipfit: { left: function () { t.ui.position.flip.left.apply(this, arguments), t.ui.position.fit.left.apply(this, arguments) }, top: function () { t.ui.position.flip.top.apply(this, arguments), t.ui.position.fit.top.apply(this, arguments) } } } }(), t.ui.position, t.extend(t.expr.pseudos, { data: t.expr.createPseudo ? t.expr.createPseudo(function (e) { return function (i) { return !!t.data(i, e) } }) : function (e, i, s) { return !!t.data(e, s[3]) } }), t.fn.extend({ disableSelection: function () { var t = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown"; return function () { return this.on(t + ".ui-disableSelection", function (t) { t.preventDefault() }) } }(), enableSelection: function () { return this.off(".ui-disableSelection") } }), t.ui.focusable = function (i, s) { var n, o, a, r, l, h = i.nodeName.toLowerCase(); return "area" === h ? (n = i.parentNode, o = n.name, i.href && o && "map" === n.nodeName.toLowerCase() ? (a = t("img[usemap='#" + o + "']"), a.length > 0 && a.is(":visible")) : !1) : (/^(input|select|textarea|button|object)$/.test(h) ? (r = !i.disabled, r && (l = t(i).closest("fieldset")[0], l && (r = !l.disabled))) : r = "a" === h ? i.href || s : s, r && t(i).is(":visible") && e(t(i))) }, t.extend(t.expr.pseudos, { focusable: function (e) { return t.ui.focusable(e, null != t.attr(e, "tabindex")) } }), t.ui.focusable, t.fn.form = function () { return "string" == typeof this[0].form ? this.closest("form") : t(this[0].form) }, t.ui.formResetMixin = { _formResetHandler: function () { var e = t(this); setTimeout(function () { var i = e.data("ui-form-reset-instances"); t.each(i, function () { this.refresh() }) }) }, _bindFormResetHandler: function () { if (this.form = this.element.form(), this.form.length) { var t = this.form.data("ui-form-reset-instances") || []; t.length || this.form.on("reset.ui-form-reset", this._formResetHandler), t.push(this), this.form.data("ui-form-reset-instances", t) } }, _unbindFormResetHandler: function () { if (this.form.length) { var e = this.form.data("ui-form-reset-instances"); e.splice(t.inArray(this, e), 1), e.length ? this.form.data("ui-form-reset-instances", e) : this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset") } } }, "1.7" === t.fn.jquery.substring(0, 3) && (t.each(["Width", "Height"], function (e, i) { function s(e, i, s, o) { return t.each(n, function () { i -= parseFloat(t.css(e, "padding" + this)) || 0, s && (i -= parseFloat(t.css(e, "border" + this + "Width")) || 0), o && (i -= parseFloat(t.css(e, "margin" + this)) || 0) }), i } var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"], o = i.toLowerCase(), a = { innerWidth: t.fn.innerWidth, innerHeight: t.fn.innerHeight, outerWidth: t.fn.outerWidth, outerHeight: t.fn.outerHeight }; t.fn["inner" + i] = function (e) { return void 0 === e ? a["inner" + i].call(this) : this.each(function () { t(this).css(o, s(this, e) + "px") }) }, t.fn["outer" + i] = function (e, n) { return "number" != typeof e ? a["outer" + i].call(this, e) : this.each(function () { t(this).css(o, s(this, e, !0, n) + "px") }) } }), t.fn.addBack = function (t) { return this.add(null == t ? this.prevObject : this.prevObject.filter(t)) }), t.ui.keyCode = { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 }, t.ui.escapeSelector = function () { var t = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g; return function (e) { return e.replace(t, "\\$1") } }(), t.fn.labels = function () { var e, i, s, n, o; return this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (n = this.eq(0).parents("label"), s = this.attr("id"), s && (e = this.eq(0).parents().last(), o = e.add(e.length ? e.siblings() : this.siblings()), i = "label[for='" + t.ui.escapeSelector(s) + "']", n = n.add(o.find(i).addBack(i))), this.pushStack(n)) }, t.fn.scrollParent = function (e) { var i = this.css("position"), s = "absolute" === i, n = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/, o = this.parents().filter(function () { var e = t(this); return s && "static" === e.css("position") ? !1 : n.test(e.css("overflow") + e.css("overflow-y") + e.css("overflow-x")) }).eq(0); return "fixed" !== i && o.length ? o : t(this[0].ownerDocument || document) }, t.extend(t.expr.pseudos, { tabbable: function (e) { var i = t.attr(e, "tabindex"), s = null != i; return (!s || i >= 0) && t.ui.focusable(e, s) } }), t.fn.extend({ uniqueId: function () { var t = 0; return function () { return this.each(function () { this.id || (this.id = "ui-id-" + ++t) }) } }(), removeUniqueId: function () { return this.each(function () { /^ui-id-\d+$/.test(this.id) && t(this).removeAttr("id") }) } }), t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()); var c = !1; t(document).on("mouseup", function () { c = !1 }), t.widget("ui.mouse", { version: "1.12.1", options: { cancel: "input, textarea, button, select, option", distance: 1, delay: 0 }, _mouseInit: function () { var e = this; this.element.on("mousedown." + this.widgetName, function (t) { return e._mouseDown(t) }).on("click." + this.widgetName, function (i) { return !0 === t.data(i.target, e.widgetName + ".preventClickEvent") ? (t.removeData(i.target, e.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : void 0 }), this.started = !1 }, _mouseDestroy: function () { this.element.off("." + this.widgetName), this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate) }, _mouseDown: function (e) { if (!c) { this._mouseMoved = !1, this._mouseStarted && this._mouseUp(e), this._mouseDownEvent = e; var i = this, s = 1 === e.which, n = "string" == typeof this.options.cancel && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1; return s && !n && this._mouseCapture(e) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () { i.mouseDelayMet = !0 }, this.options.delay)), this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(e) !== !1, !this._mouseStarted) ? (e.preventDefault(), !0) : (!0 === t.data(e.target, this.widgetName + ".preventClickEvent") && t.removeData(e.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (t) { return i._mouseMove(t) }, this._mouseUpDelegate = function (t) { return i._mouseUp(t) }, this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate), e.preventDefault(), c = !0, !0)) : !0 } }, _mouseMove: function (e) { if (this._mouseMoved) { if (t.ui.ie && (!document.documentMode || 9 > document.documentMode) && !e.button) return this._mouseUp(e); if (!e.which) if (e.originalEvent.altKey || e.originalEvent.ctrlKey || e.originalEvent.metaKey || e.originalEvent.shiftKey) this.ignoreMissingWhich = !0; else if (!this.ignoreMissingWhich) return this._mouseUp(e) } return (e.which || e.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(e), e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1, this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted) }, _mouseUp: function (e) { this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, e.target === this._mouseDownEvent.target && t.data(e.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(e)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, c = !1, e.preventDefault() }, _mouseDistanceMet: function (t) { return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance }, _mouseDelayMet: function () { return this.mouseDelayMet }, _mouseStart: function () { }, _mouseDrag: function () { }, _mouseStop: function () { }, _mouseCapture: function () { return !0 } }), t.ui.plugin = { add: function (e, i, s) { var n, o = t.ui[e].prototype; for (n in s) o.plugins[n] = o.plugins[n] || [], o.plugins[n].push([i, s[n]]) }, call: function (t, e, i, s) { var n, o = t.plugins[e]; if (o && (s || t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType)) for (n = 0; o.length > n; n++)t.options[o[n][0]] && o[n][1].apply(t.element, i) } }, t.ui.safeActiveElement = function (t) { var e; try { e = t.activeElement } catch (i) { e = t.body } return e || (e = t.body), e.nodeName || (e = t.body), e }, t.ui.safeBlur = function (e) { e && "body" !== e.nodeName.toLowerCase() && t(e).trigger("blur") }, t.widget("ui.draggable", t.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "drag", options: { addClasses: !0, appendTo: "parent", axis: !1, connectToSortable: !1, containment: !1, cursor: "auto", cursorAt: !1, grid: !1, handle: !1, helper: "original", iframeFix: !1, opacity: !1, refreshPositions: !1, revert: !1, revertDuration: 500, scope: "default", scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, snap: !1, snapMode: "both", snapTolerance: 20, stack: !1, zIndex: !1, drag: null, start: null, stop: null }, _create: function () { "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass("ui-draggable"), this._setHandleClassName(), this._mouseInit() }, _setOption: function (t, e) { this._super(t, e), "handle" === t && (this._removeHandleClassName(), this._setHandleClassName()) }, _destroy: function () { return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this._removeHandleClassName(), this._mouseDestroy(), void 0) }, _mouseCapture: function (e) { var i = this.options; return this.helper || i.disabled || t(e.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(e), this.handle ? (this._blurActiveElement(e), this._blockFrames(i.iframeFix === !0 ? "iframe" : i.iframeFix), !0) : !1) }, _blockFrames: function (e) { this.iframeBlocks = this.document.find(e).map(function () { var e = t(this); return t("<div>").css("position", "absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0] }) }, _unblockFrames: function () { this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks) }, _blurActiveElement: function (e) { var i = t.ui.safeActiveElement(this.document[0]), s = t(e.target); s.closest(i).length || t.ui.safeBlur(i) }, _mouseStart: function (e) { var i = this.options; return this.helper = this._createHelper(e), this._addClass(this.helper, "ui-draggable-dragging"), this._cacheHelperProportions(), t.ui.ddmanager && (t.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function () { return "fixed" === t(this).css("position") }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(e), this.originalPosition = this.position = this._generatePosition(e, !1), this.originalPageX = e.pageX, this.originalPageY = e.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), this._setContainment(), this._trigger("start", e) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), t.ui.ddmanager && !i.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this._mouseDrag(e, !0), t.ui.ddmanager && t.ui.ddmanager.dragStart(this, e), !0) }, _refreshOffsets: function (t) { this.offset = { top: this.positionAbs.top - this.margins.top, left: this.positionAbs.left - this.margins.left, scroll: !1, parent: this._getParentOffset(), relative: this._getRelativeOffset() }, this.offset.click = { left: t.pageX - this.offset.left, top: t.pageY - this.offset.top } }, _mouseDrag: function (e, i) { if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(e, !0), this.positionAbs = this._convertPositionTo("absolute"), !i) { var s = this._uiHash(); if (this._trigger("drag", e, s) === !1) return this._mouseUp(new t.Event("mouseup", e)), !1; this.position = s.position } return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", t.ui.ddmanager && t.ui.ddmanager.drag(this, e), !1 }, _mouseStop: function (e) { var i = this, s = !1; return t.ui.ddmanager && !this.options.dropBehaviour && (s = t.ui.ddmanager.drop(this, e)), this.dropped && (s = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !s || "valid" === this.options.revert && s || this.options.revert === !0 || t.isFunction(this.options.revert) && this.options.revert.call(this.element, s) ? t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () { i._trigger("stop", e) !== !1 && i._clear() }) : this._trigger("stop", e) !== !1 && this._clear(), !1 }, _mouseUp: function (e) { return this._unblockFrames(), t.ui.ddmanager && t.ui.ddmanager.dragStop(this, e), this.handleElement.is(e.target) && this.element.trigger("focus"), t.ui.mouse.prototype._mouseUp.call(this, e) }, cancel: function () { return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new t.Event("mouseup", { target: this.element[0] })) : this._clear(), this }, _getHandle: function (e) { return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0 }, _setHandleClassName: function () { this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this._addClass(this.handleElement, "ui-draggable-handle") }, _removeHandleClassName: function () { this._removeClass(this.handleElement, "ui-draggable-handle") }, _createHelper: function (e) { var i = this.options, s = t.isFunction(i.helper), n = s ? t(i.helper.apply(this.element[0], [e])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element; return n.parents("body").length || n.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo), s && n[0] === this.element[0] && this._setPositionRelative(), n[0] === this.element[0] || /(fixed|absolute)/.test(n.css("position")) || n.css("position", "absolute"), n }, _setPositionRelative: function () { /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative") }, _adjustOffsetFromHelper: function (e) { "string" == typeof e && (e = e.split(" ")), t.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }), "left" in e && (this.offset.click.left = e.left + this.margins.left), "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left), "top" in e && (this.offset.click.top = e.top + this.margins.top), "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top) }, _isRootNode: function (t) { return /(html|body)/i.test(t.tagName) || t === this.document[0] }, _getParentOffset: function () { var e = this.offsetParent.offset(), i = this.document[0]; return "absolute" === this.cssPosition && this.scrollParent[0] !== i && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(), e.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (e = { top: 0, left: 0 }), { top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if ("relative" !== this.cssPosition) return { top: 0, left: 0 }; var t = this.element.position(), e = this._isRootNode(this.scrollParent[0]); return { top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + (e ? 0 : this.scrollParent.scrollTop()), left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + (e ? 0 : this.scrollParent.scrollLeft()) } }, _cacheMargins: function () { this.margins = { left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () {
            var e, i, s, n = this.options, o = this.document[0]; return this.relativeContainer = null, n.containment ? "window" === n.containment ? (this.containment = [t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left, t(window).scrollTop() + (t(window).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === n.containment ? (this.containment = [0, 0, t(o).width() - this.helperProportions.width - this.margins.left, (t(o).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : n.containment.constructor === Array ? (this.containment = n.containment, void 0) : ("parent" === n.containment && (n.containment = this.helper[0].parentNode), i = t(n.containment), s = i[0], s && (e = /(scroll|auto)/.test(i.css("overflow")), this.containment = [(parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0), (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0), (e ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(i.css("borderRightWidth"), 10) || 0) - (parseInt(i.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (e ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(i.css("borderBottomWidth"), 10) || 0) - (parseInt(i.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = i), void 0) : (this.containment = null, void 0)
        }, _convertPositionTo: function (t, e) { e || (e = this.position); var i = "absolute" === t ? 1 : -1, s = this._isRootNode(this.scrollParent[0]); return { top: e.top + this.offset.relative.top * i + this.offset.parent.top * i - ("fixed" === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i, left: e.left + this.offset.relative.left * i + this.offset.parent.left * i - ("fixed" === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i } }, _generatePosition: function (t, e) { var i, s, n, o, a = this.options, r = this._isRootNode(this.scrollParent[0]), l = t.pageX, h = t.pageY; return r && this.offset.scroll || (this.offset.scroll = { top: this.scrollParent.scrollTop(), left: this.scrollParent.scrollLeft() }), e && (this.containment && (this.relativeContainer ? (s = this.relativeContainer.offset(), i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]) : i = this.containment, t.pageX - this.offset.click.left < i[0] && (l = i[0] + this.offset.click.left), t.pageY - this.offset.click.top < i[1] && (h = i[1] + this.offset.click.top), t.pageX - this.offset.click.left > i[2] && (l = i[2] + this.offset.click.left), t.pageY - this.offset.click.top > i[3] && (h = i[3] + this.offset.click.top)), a.grid && (n = a.grid[1] ? this.originalPageY + Math.round((h - this.originalPageY) / a.grid[1]) * a.grid[1] : this.originalPageY, h = i ? n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - a.grid[1] : n + a.grid[1] : n, o = a.grid[0] ? this.originalPageX + Math.round((l - this.originalPageX) / a.grid[0]) * a.grid[0] : this.originalPageX, l = i ? o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2] ? o : o - this.offset.click.left >= i[0] ? o - a.grid[0] : o + a.grid[0] : o), "y" === a.axis && (l = this.originalPageX), "x" === a.axis && (h = this.originalPageY)), { top: h - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top), left: l - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left) } }, _clear: function () { this._removeClass(this.helper, "ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy() }, _trigger: function (e, i, s) { return s = s || this._uiHash(), t.ui.plugin.call(this, e, [i, s, this], !0), /^(drag|start|stop)/.test(e) && (this.positionAbs = this._convertPositionTo("absolute"), s.offset = this.positionAbs), t.Widget.prototype._trigger.call(this, e, i, s) }, plugins: {}, _uiHash: function () { return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs } }
    }), t.ui.plugin.add("draggable", "connectToSortable", { start: function (e, i, s) { var n = t.extend({}, i, { item: s.element }); s.sortables = [], t(s.options.connectToSortable).each(function () { var i = t(this).sortable("instance"); i && !i.options.disabled && (s.sortables.push(i), i.refreshPositions(), i._trigger("activate", e, n)) }) }, stop: function (e, i, s) { var n = t.extend({}, i, { item: s.element }); s.cancelHelperRemoval = !1, t.each(s.sortables, function () { var t = this; t.isOver ? (t.isOver = 0, s.cancelHelperRemoval = !0, t.cancelHelperRemoval = !1, t._storedCSS = { position: t.placeholder.css("position"), top: t.placeholder.css("top"), left: t.placeholder.css("left") }, t._mouseStop(e), t.options.helper = t.options._helper) : (t.cancelHelperRemoval = !0, t._trigger("deactivate", e, n)) }) }, drag: function (e, i, s) { t.each(s.sortables, function () { var n = !1, o = this; o.positionAbs = s.positionAbs, o.helperProportions = s.helperProportions, o.offset.click = s.offset.click, o._intersectsWith(o.containerCache) && (n = !0, t.each(s.sortables, function () { return this.positionAbs = s.positionAbs, this.helperProportions = s.helperProportions, this.offset.click = s.offset.click, this !== o && this._intersectsWith(this.containerCache) && t.contains(o.element[0], this.element[0]) && (n = !1), n })), n ? (o.isOver || (o.isOver = 1, s._parent = i.helper.parent(), o.currentItem = i.helper.appendTo(o.element).data("ui-sortable-item", !0), o.options._helper = o.options.helper, o.options.helper = function () { return i.helper[0] }, e.target = o.currentItem[0], o._mouseCapture(e, !0), o._mouseStart(e, !0, !0), o.offset.click.top = s.offset.click.top, o.offset.click.left = s.offset.click.left, o.offset.parent.left -= s.offset.parent.left - o.offset.parent.left, o.offset.parent.top -= s.offset.parent.top - o.offset.parent.top, s._trigger("toSortable", e), s.dropped = o.element, t.each(s.sortables, function () { this.refreshPositions() }), s.currentItem = s.element, o.fromOutside = s), o.currentItem && (o._mouseDrag(e), i.position = o.position)) : o.isOver && (o.isOver = 0, o.cancelHelperRemoval = !0, o.options._revert = o.options.revert, o.options.revert = !1, o._trigger("out", e, o._uiHash(o)), o._mouseStop(e, !0), o.options.revert = o.options._revert, o.options.helper = o.options._helper, o.placeholder && o.placeholder.remove(), i.helper.appendTo(s._parent), s._refreshOffsets(e), i.position = s._generatePosition(e, !0), s._trigger("fromSortable", e), s.dropped = !1, t.each(s.sortables, function () { this.refreshPositions() })) }) } }), t.ui.plugin.add("draggable", "cursor", { start: function (e, i, s) { var n = t("body"), o = s.options; n.css("cursor") && (o._cursor = n.css("cursor")), n.css("cursor", o.cursor) }, stop: function (e, i, s) { var n = s.options; n._cursor && t("body").css("cursor", n._cursor) } }), t.ui.plugin.add("draggable", "opacity", { start: function (e, i, s) { var n = t(i.helper), o = s.options; n.css("opacity") && (o._opacity = n.css("opacity")), n.css("opacity", o.opacity) }, stop: function (e, i, s) { var n = s.options; n._opacity && t(i.helper).css("opacity", n._opacity) } }), t.ui.plugin.add("draggable", "scroll", { start: function (t, e, i) { i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)), i.scrollParentNotHidden[0] !== i.document[0] && "HTML" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset()) }, drag: function (e, i, s) { var n = s.options, o = !1, a = s.scrollParentNotHidden[0], r = s.document[0]; a !== r && "HTML" !== a.tagName ? (n.axis && "x" === n.axis || (s.overflowOffset.top + a.offsetHeight - e.pageY < n.scrollSensitivity ? a.scrollTop = o = a.scrollTop + n.scrollSpeed : e.pageY - s.overflowOffset.top < n.scrollSensitivity && (a.scrollTop = o = a.scrollTop - n.scrollSpeed)), n.axis && "y" === n.axis || (s.overflowOffset.left + a.offsetWidth - e.pageX < n.scrollSensitivity ? a.scrollLeft = o = a.scrollLeft + n.scrollSpeed : e.pageX - s.overflowOffset.left < n.scrollSensitivity && (a.scrollLeft = o = a.scrollLeft - n.scrollSpeed))) : (n.axis && "x" === n.axis || (e.pageY - t(r).scrollTop() < n.scrollSensitivity ? o = t(r).scrollTop(t(r).scrollTop() - n.scrollSpeed) : t(window).height() - (e.pageY - t(r).scrollTop()) < n.scrollSensitivity && (o = t(r).scrollTop(t(r).scrollTop() + n.scrollSpeed))), n.axis && "y" === n.axis || (e.pageX - t(r).scrollLeft() < n.scrollSensitivity ? o = t(r).scrollLeft(t(r).scrollLeft() - n.scrollSpeed) : t(window).width() - (e.pageX - t(r).scrollLeft()) < n.scrollSensitivity && (o = t(r).scrollLeft(t(r).scrollLeft() + n.scrollSpeed)))), o !== !1 && t.ui.ddmanager && !n.dropBehaviour && t.ui.ddmanager.prepareOffsets(s, e) } }), t.ui.plugin.add("draggable", "snap", { start: function (e, i, s) { var n = s.options; s.snapElements = [], t(n.snap.constructor !== String ? n.snap.items || ":data(ui-draggable)" : n.snap).each(function () { var e = t(this), i = e.offset(); this !== s.element[0] && s.snapElements.push({ item: this, width: e.outerWidth(), height: e.outerHeight(), top: i.top, left: i.left }) }) }, drag: function (e, i, s) { var n, o, a, r, l, h, c, u, d, p, f = s.options, g = f.snapTolerance, m = i.offset.left, _ = m + s.helperProportions.width, v = i.offset.top, b = v + s.helperProportions.height; for (d = s.snapElements.length - 1; d >= 0; d--)l = s.snapElements[d].left - s.margins.left, h = l + s.snapElements[d].width, c = s.snapElements[d].top - s.margins.top, u = c + s.snapElements[d].height, l - g > _ || m > h + g || c - g > b || v > u + g || !t.contains(s.snapElements[d].item.ownerDocument, s.snapElements[d].item) ? (s.snapElements[d].snapping && s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), { snapItem: s.snapElements[d].item })), s.snapElements[d].snapping = !1) : ("inner" !== f.snapMode && (n = g >= Math.abs(c - b), o = g >= Math.abs(u - v), a = g >= Math.abs(l - _), r = g >= Math.abs(h - m), n && (i.position.top = s._convertPositionTo("relative", { top: c - s.helperProportions.height, left: 0 }).top), o && (i.position.top = s._convertPositionTo("relative", { top: u, left: 0 }).top), a && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l - s.helperProportions.width }).left), r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h }).left)), p = n || o || a || r, "outer" !== f.snapMode && (n = g >= Math.abs(c - v), o = g >= Math.abs(u - b), a = g >= Math.abs(l - m), r = g >= Math.abs(h - _), n && (i.position.top = s._convertPositionTo("relative", { top: c, left: 0 }).top), o && (i.position.top = s._convertPositionTo("relative", { top: u - s.helperProportions.height, left: 0 }).top), a && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l }).left), r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h - s.helperProportions.width }).left)), !s.snapElements[d].snapping && (n || o || a || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), { snapItem: s.snapElements[d].item })), s.snapElements[d].snapping = n || o || a || r || p) } }), t.ui.plugin.add("draggable", "stack", { start: function (e, i, s) { var n, o = s.options, a = t.makeArray(t(o.stack)).sort(function (e, i) { return (parseInt(t(e).css("zIndex"), 10) || 0) - (parseInt(t(i).css("zIndex"), 10) || 0) }); a.length && (n = parseInt(t(a[0]).css("zIndex"), 10) || 0, t(a).each(function (e) { t(this).css("zIndex", n + e) }), this.css("zIndex", n + a.length)) } }), t.ui.plugin.add("draggable", "zIndex", { start: function (e, i, s) { var n = t(i.helper), o = s.options; n.css("zIndex") && (o._zIndex = n.css("zIndex")), n.css("zIndex", o.zIndex) }, stop: function (e, i, s) { var n = s.options; n._zIndex && t(i.helper).css("zIndex", n._zIndex) } }), t.ui.draggable, t.widget("ui.droppable", { version: "1.12.1", widgetEventPrefix: "drop", options: { accept: "*", addClasses: !0, greedy: !1, scope: "default", tolerance: "intersect", activate: null, deactivate: null, drop: null, out: null, over: null }, _create: function () { var e, i = this.options, s = i.accept; this.isover = !1, this.isout = !0, this.accept = t.isFunction(s) ? s : function (t) { return t.is(s) }, this.proportions = function () { return arguments.length ? (e = arguments[0], void 0) : e ? e : e = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight } }, this._addToManager(i.scope), i.addClasses && this._addClass("ui-droppable") }, _addToManager: function (e) { t.ui.ddmanager.droppables[e] = t.ui.ddmanager.droppables[e] || [], t.ui.ddmanager.droppables[e].push(this) }, _splice: function (t) { for (var e = 0; t.length > e; e++)t[e] === this && t.splice(e, 1) }, _destroy: function () { var e = t.ui.ddmanager.droppables[this.options.scope]; this._splice(e) }, _setOption: function (e, i) { if ("accept" === e) this.accept = t.isFunction(i) ? i : function (t) { return t.is(i) }; else if ("scope" === e) { var s = t.ui.ddmanager.droppables[this.options.scope]; this._splice(s), this._addToManager(i) } this._super(e, i) }, _activate: function (e) { var i = t.ui.ddmanager.current; this._addActiveClass(), i && this._trigger("activate", e, this.ui(i)) }, _deactivate: function (e) { var i = t.ui.ddmanager.current; this._removeActiveClass(), i && this._trigger("deactivate", e, this.ui(i)) }, _over: function (e) { var i = t.ui.ddmanager.current; i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._addHoverClass(), this._trigger("over", e, this.ui(i))) }, _out: function (e) { var i = t.ui.ddmanager.current; i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._removeHoverClass(), this._trigger("out", e, this.ui(i))) }, _drop: function (e, i) { var s = i || t.ui.ddmanager.current, n = !1; return s && (s.currentItem || s.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () { var i = t(this).droppable("instance"); return i.options.greedy && !i.options.disabled && i.options.scope === s.options.scope && i.accept.call(i.element[0], s.currentItem || s.element) && u(s, t.extend(i, { offset: i.element.offset() }), i.options.tolerance, e) ? (n = !0, !1) : void 0 }), n ? !1 : this.accept.call(this.element[0], s.currentItem || s.element) ? (this._removeActiveClass(), this._removeHoverClass(), this._trigger("drop", e, this.ui(s)), this.element) : !1) : !1 }, ui: function (t) { return { draggable: t.currentItem || t.element, helper: t.helper, position: t.position, offset: t.positionAbs } }, _addHoverClass: function () { this._addClass("ui-droppable-hover") }, _removeHoverClass: function () { this._removeClass("ui-droppable-hover") }, _addActiveClass: function () { this._addClass("ui-droppable-active") }, _removeActiveClass: function () { this._removeClass("ui-droppable-active") } }); var u = t.ui.intersect = function () { function t(t, e, i) { return t >= e && e + i > t } return function (e, i, s, n) { if (!i.offset) return !1; var o = (e.positionAbs || e.position.absolute).left + e.margins.left, a = (e.positionAbs || e.position.absolute).top + e.margins.top, r = o + e.helperProportions.width, l = a + e.helperProportions.height, h = i.offset.left, c = i.offset.top, u = h + i.proportions().width, d = c + i.proportions().height; switch (s) { case "fit": return o >= h && u >= r && a >= c && d >= l; case "intersect": return o + e.helperProportions.width / 2 > h && u > r - e.helperProportions.width / 2 && a + e.helperProportions.height / 2 > c && d > l - e.helperProportions.height / 2; case "pointer": return t(n.pageY, c, i.proportions().height) && t(n.pageX, h, i.proportions().width); case "touch": return (a >= c && d >= a || l >= c && d >= l || c > a && l > d) && (o >= h && u >= o || r >= h && u >= r || h > o && r > u); default: return !1 } } }(); t.ui.ddmanager = { current: null, droppables: { "default": [] }, prepareOffsets: function (e, i) { var s, n, o = t.ui.ddmanager.droppables[e.options.scope] || [], a = i ? i.type : null, r = (e.currentItem || e.element).find(":data(ui-droppable)").addBack(); t: for (s = 0; o.length > s; s++)if (!(o[s].options.disabled || e && !o[s].accept.call(o[s].element[0], e.currentItem || e.element))) { for (n = 0; r.length > n; n++)if (r[n] === o[s].element[0]) { o[s].proportions().height = 0; continue t } o[s].visible = "none" !== o[s].element.css("display"), o[s].visible && ("mousedown" === a && o[s]._activate.call(o[s], i), o[s].offset = o[s].element.offset(), o[s].proportions({ width: o[s].element[0].offsetWidth, height: o[s].element[0].offsetHeight })) } }, drop: function (e, i) { var s = !1; return t.each((t.ui.ddmanager.droppables[e.options.scope] || []).slice(), function () { this.options && (!this.options.disabled && this.visible && u(e, this, this.options.tolerance, i) && (s = this._drop.call(this, i) || s), !this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, i))) }), s }, dragStart: function (e, i) { e.element.parentsUntil("body").on("scroll.droppable", function () { e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i) }) }, drag: function (e, i) { e.options.refreshPositions && t.ui.ddmanager.prepareOffsets(e, i), t.each(t.ui.ddmanager.droppables[e.options.scope] || [], function () { if (!this.options.disabled && !this.greedyChild && this.visible) { var s, n, o, a = u(e, this, this.options.tolerance, i), r = !a && this.isover ? "isout" : a && !this.isover ? "isover" : null; r && (this.options.greedy && (n = this.options.scope, o = this.element.parents(":data(ui-droppable)").filter(function () { return t(this).droppable("instance").options.scope === n }), o.length && (s = t(o[0]).droppable("instance"), s.greedyChild = "isover" === r)), s && "isover" === r && (s.isover = !1, s.isout = !0, s._out.call(s, i)), this[r] = !0, this["isout" === r ? "isover" : "isout"] = !1, this["isover" === r ? "_over" : "_out"].call(this, i), s && "isout" === r && (s.isout = !1, s.isover = !0, s._over.call(s, i))) } }) }, dragStop: function (e, i) { e.element.parentsUntil("body").off("scroll.droppable"), e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i) } }, t.uiBackCompat !== !1 && t.widget("ui.droppable", t.ui.droppable, { options: { hoverClass: !1, activeClass: !1 }, _addActiveClass: function () { this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass) }, _removeActiveClass: function () { this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass) }, _addHoverClass: function () { this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass) }, _removeHoverClass: function () { this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass) } }), t.ui.droppable, t.widget("ui.resizable", t.ui.mouse, { version: "1.12.1", widgetEventPrefix: "resize", options: { alsoResize: !1, animate: !1, animateDuration: "slow", animateEasing: "swing", aspectRatio: !1, autoHide: !1, classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" }, containment: !1, ghost: !1, grid: !1, handles: "e,s,se", helper: !1, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 90, resize: null, start: null, stop: null }, _num: function (t) { return parseFloat(t) || 0 }, _isNumber: function (t) { return !isNaN(parseFloat(t)) }, _hasScroll: function (e, i) { if ("hidden" === t(e).css("overflow")) return !1; var s = i && "left" === i ? "scrollLeft" : "scrollTop", n = !1; return e[s] > 0 ? !0 : (e[s] = 1, n = e[s] > 0, e[s] = 0, n) }, _create: function () { var e, i = this.options, s = this; this._addClass("ui-resizable"), t.extend(this, { _aspectRatio: !!i.aspectRatio, aspectRatio: i.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: i.helper || i.ghost || i.animate ? i.helper || "ui-resizable-helper" : null }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, e = { marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom"), marginLeft: this.originalElement.css("marginLeft") }, this.element.css(e), this.originalElement.css("margin", 0), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })), this.originalElement.css(e), this._proportionallyResize()), this._setupHandles(), i.autoHide && t(this.element).on("mouseenter", function () { i.disabled || (s._removeClass("ui-resizable-autohide"), s._handles.show()) }).on("mouseleave", function () { i.disabled || s.resizing || (s._addClass("ui-resizable-autohide"), s._handles.hide()) }), this._mouseInit() }, _destroy: function () { this._mouseDestroy(); var e, i = function (e) { t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove() }; return this.elementIsWrapper && (i(this.element), e = this.element, this.originalElement.css({ position: e.css("position"), width: e.outerWidth(), height: e.outerHeight(), top: e.css("top"), left: e.css("left") }).insertAfter(e), e.remove()), this.originalElement.css("resize", this.originalResizeStyle), i(this.originalElement), this }, _setOption: function (t, e) { switch (this._super(t, e), t) { case "handles": this._removeHandles(), this._setupHandles(); break; default: } }, _setupHandles: function () { var e, i, s, n, o, a = this.options, r = this; if (this.handles = a.handles || (t(".ui-resizable-handle", this.element).length ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" } : "e,s,se"), this._handles = t(), this.handles.constructor === String) for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), s = this.handles.split(","), this.handles = {}, i = 0; s.length > i; i++)e = t.trim(s[i]), n = "ui-resizable-" + e, o = t("<div>"), this._addClass(o, "ui-resizable-handle " + n), o.css({ zIndex: a.zIndex }), this.handles[e] = ".ui-resizable-" + e, this.element.append(o); this._renderAxis = function (e) { var i, s, n, o; e = e || this.element; for (i in this.handles) this.handles[i].constructor === String ? this.handles[i] = this.element.children(this.handles[i]).first().show() : (this.handles[i].jquery || this.handles[i].nodeType) && (this.handles[i] = t(this.handles[i]), this._on(this.handles[i], { mousedown: r._mouseDown })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (s = t(this.handles[i], this.element), o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(), n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""), e.css(n, o), this._proportionallyResize()), this._handles = this._handles.add(this.handles[i]) }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.on("mouseover", function () { r.resizing || (this.className && (o = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), r.axis = o && o[1] ? o[1] : "se") }), a.autoHide && (this._handles.hide(), this._addClass("ui-resizable-autohide")) }, _removeHandles: function () { this._handles.remove() }, _mouseCapture: function (e) { var i, s, n = !1; for (i in this.handles) s = t(this.handles[i])[0], (s === e.target || t.contains(s, e.target)) && (n = !0); return !this.options.disabled && n }, _mouseStart: function (e) { var i, s, n, o = this.options, a = this.element; return this.resizing = !0, this._renderProxy(), i = this._num(this.helper.css("left")), s = this._num(this.helper.css("top")), o.containment && (i += t(o.containment).scrollLeft() || 0, s += t(o.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = { left: i, top: s }, this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: a.width(), height: a.height() }, this.originalSize = this._helper ? { width: a.outerWidth(), height: a.outerHeight() } : { width: a.width(), height: a.height() }, this.sizeDiff = { width: a.outerWidth() - a.width(), height: a.outerHeight() - a.height() }, this.originalPosition = { left: i, top: s }, this.originalMousePosition = { left: e.pageX, top: e.pageY }, this.aspectRatio = "number" == typeof o.aspectRatio ? o.aspectRatio : this.originalSize.width / this.originalSize.height || 1, n = t(".ui-resizable-" + this.axis).css("cursor"), t("body").css("cursor", "auto" === n ? this.axis + "-resize" : n), this._addClass("ui-resizable-resizing"), this._propagate("start", e), !0 }, _mouseDrag: function (e) { var i, s, n = this.originalMousePosition, o = this.axis, a = e.pageX - n.left || 0, r = e.pageY - n.top || 0, l = this._change[o]; return this._updatePrevProperties(), l ? (i = l.apply(this, [e, a, r]), this._updateVirtualBoundaries(e.shiftKey), (this._aspectRatio || e.shiftKey) && (i = this._updateRatio(i, e)), i = this._respectSize(i, e), this._updateCache(i), this._propagate("resize", e), s = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), t.isEmptyObject(s) || (this._updatePrevProperties(), this._trigger("resize", e, this.ui()), this._applyChanges()), !1) : !1 }, _mouseStop: function (e) { this.resizing = !1; var i, s, n, o, a, r, l, h = this.options, c = this; return this._helper && (i = this._proportionallyResizeElements, s = i.length && /textarea/i.test(i[0].nodeName), n = s && this._hasScroll(i[0], "left") ? 0 : c.sizeDiff.height, o = s ? 0 : c.sizeDiff.width, a = { width: c.helper.width() - o, height: c.helper.height() - n }, r = parseFloat(c.element.css("left")) + (c.position.left - c.originalPosition.left) || null, l = parseFloat(c.element.css("top")) + (c.position.top - c.originalPosition.top) || null, h.animate || this.element.css(t.extend(a, { top: l, left: r })), c.helper.height(c.size.height), c.helper.width(c.size.width), this._helper && !h.animate && this._proportionallyResize()), t("body").css("cursor", "auto"), this._removeClass("ui-resizable-resizing"), this._propagate("stop", e), this._helper && this.helper.remove(), !1 }, _updatePrevProperties: function () { this.prevPosition = { top: this.position.top, left: this.position.left }, this.prevSize = { width: this.size.width, height: this.size.height } }, _applyChanges: function () { var t = {}; return this.position.top !== this.prevPosition.top && (t.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (t.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (t.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (t.height = this.size.height + "px"), this.helper.css(t), t }, _updateVirtualBoundaries: function (t) { var e, i, s, n, o, a = this.options; o = { minWidth: this._isNumber(a.minWidth) ? a.minWidth : 0, maxWidth: this._isNumber(a.maxWidth) ? a.maxWidth : 1 / 0, minHeight: this._isNumber(a.minHeight) ? a.minHeight : 0, maxHeight: this._isNumber(a.maxHeight) ? a.maxHeight : 1 / 0 }, (this._aspectRatio || t) && (e = o.minHeight * this.aspectRatio, s = o.minWidth / this.aspectRatio, i = o.maxHeight * this.aspectRatio, n = o.maxWidth / this.aspectRatio, e > o.minWidth && (o.minWidth = e), s > o.minHeight && (o.minHeight = s), o.maxWidth > i && (o.maxWidth = i), o.maxHeight > n && (o.maxHeight = n)), this._vBoundaries = o }, _updateCache: function (t) { this.offset = this.helper.offset(), this._isNumber(t.left) && (this.position.left = t.left), this._isNumber(t.top) && (this.position.top = t.top), this._isNumber(t.height) && (this.size.height = t.height), this._isNumber(t.width) && (this.size.width = t.width) }, _updateRatio: function (t) { var e = this.position, i = this.size, s = this.axis; return this._isNumber(t.height) ? t.width = t.height * this.aspectRatio : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio), "sw" === s && (t.left = e.left + (i.width - t.width), t.top = null), "nw" === s && (t.top = e.top + (i.height - t.height), t.left = e.left + (i.width - t.width)), t }, _respectSize: function (t) { var e = this._vBoundaries, i = this.axis, s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width, n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height, o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width, a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height, r = this.originalPosition.left + this.originalSize.width, l = this.originalPosition.top + this.originalSize.height, h = /sw|nw|w/.test(i), c = /nw|ne|n/.test(i); return o && (t.width = e.minWidth), a && (t.height = e.minHeight), s && (t.width = e.maxWidth), n && (t.height = e.maxHeight), o && h && (t.left = r - e.minWidth), s && h && (t.left = r - e.maxWidth), a && c && (t.top = l - e.minHeight), n && c && (t.top = l - e.maxHeight), t.width || t.height || t.left || !t.top ? t.width || t.height || t.top || !t.left || (t.left = null) : t.top = null, t }, _getPaddingPlusBorderDimensions: function (t) { for (var e = 0, i = [], s = [t.css("borderTopWidth"), t.css("borderRightWidth"), t.css("borderBottomWidth"), t.css("borderLeftWidth")], n = [t.css("paddingTop"), t.css("paddingRight"), t.css("paddingBottom"), t.css("paddingLeft")]; 4 > e; e++)i[e] = parseFloat(s[e]) || 0, i[e] += parseFloat(n[e]) || 0; return { height: i[0] + i[2], width: i[1] + i[3] } }, _proportionallyResize: function () { if (this._proportionallyResizeElements.length) for (var t, e = 0, i = this.helper || this.element; this._proportionallyResizeElements.length > e; e++)t = this._proportionallyResizeElements[e], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)), t.css({ height: i.height() - this.outerDimensions.height || 0, width: i.width() - this.outerDimensions.width || 0 }) }, _renderProxy: function () { var e = this.element, i = this.options; this.elementOffset = e.offset(), this._helper ? (this.helper = this.helper || t("<div style='overflow:hidden;'></div>"), this._addClass(this.helper, this._helper), this.helper.css({ width: this.element.outerWidth(), height: this.element.outerHeight(), position: "absolute", left: this.elementOffset.left + "px", top: this.elementOffset.top + "px", zIndex: ++i.zIndex }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element }, _change: { e: function (t, e) { return { width: this.originalSize.width + e } }, w: function (t, e) { var i = this.originalSize, s = this.originalPosition; return { left: s.left + e, width: i.width - e } }, n: function (t, e, i) { var s = this.originalSize, n = this.originalPosition; return { top: n.top + i, height: s.height - i } }, s: function (t, e, i) { return { height: this.originalSize.height + i } }, se: function (e, i, s) { return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s])) }, sw: function (e, i, s) { return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s])) }, ne: function (e, i, s) { return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s])) }, nw: function (e, i, s) { return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s])) } }, _propagate: function (e, i) { t.ui.plugin.call(this, e, [i, this.ui()]), "resize" !== e && this._trigger(e, i, this.ui()) }, plugins: {}, ui: function () { return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition } } }), t.ui.plugin.add("resizable", "animate", { stop: function (e) { var i = t(this).resizable("instance"), s = i.options, n = i._proportionallyResizeElements, o = n.length && /textarea/i.test(n[0].nodeName), a = o && i._hasScroll(n[0], "left") ? 0 : i.sizeDiff.height, r = o ? 0 : i.sizeDiff.width, l = { width: i.size.width - r, height: i.size.height - a }, h = parseFloat(i.element.css("left")) + (i.position.left - i.originalPosition.left) || null, c = parseFloat(i.element.css("top")) + (i.position.top - i.originalPosition.top) || null; i.element.animate(t.extend(l, c && h ? { top: c, left: h } : {}), { duration: s.animateDuration, easing: s.animateEasing, step: function () { var s = { width: parseFloat(i.element.css("width")), height: parseFloat(i.element.css("height")), top: parseFloat(i.element.css("top")), left: parseFloat(i.element.css("left")) }; n && n.length && t(n[0]).css({ width: s.width, height: s.height }), i._updateCache(s), i._propagate("resize", e) } }) } }), t.ui.plugin.add("resizable", "containment", { start: function () { var e, i, s, n, o, a, r, l = t(this).resizable("instance"), h = l.options, c = l.element, u = h.containment, d = u instanceof t ? u.get(0) : /parent/.test(u) ? c.parent().get(0) : u; d && (l.containerElement = t(d), /document/.test(u) || u === document ? (l.containerOffset = { left: 0, top: 0 }, l.containerPosition = { left: 0, top: 0 }, l.parentData = { element: t(document), left: 0, top: 0, width: t(document).width(), height: t(document).height() || document.body.parentNode.scrollHeight }) : (e = t(d), i = [], t(["Top", "Right", "Left", "Bottom"]).each(function (t, s) { i[t] = l._num(e.css("padding" + s)) }), l.containerOffset = e.offset(), l.containerPosition = e.position(), l.containerSize = { height: e.innerHeight() - i[3], width: e.innerWidth() - i[1] }, s = l.containerOffset, n = l.containerSize.height, o = l.containerSize.width, a = l._hasScroll(d, "left") ? d.scrollWidth : o, r = l._hasScroll(d) ? d.scrollHeight : n, l.parentData = { element: d, left: s.left, top: s.top, width: a, height: r })) }, resize: function (e) { var i, s, n, o, a = t(this).resizable("instance"), r = a.options, l = a.containerOffset, h = a.position, c = a._aspectRatio || e.shiftKey, u = { top: 0, left: 0 }, d = a.containerElement, p = !0; d[0] !== document && /static/.test(d.css("position")) && (u = l), h.left < (a._helper ? l.left : 0) && (a.size.width = a.size.width + (a._helper ? a.position.left - l.left : a.position.left - u.left), c && (a.size.height = a.size.width / a.aspectRatio, p = !1), a.position.left = r.helper ? l.left : 0), h.top < (a._helper ? l.top : 0) && (a.size.height = a.size.height + (a._helper ? a.position.top - l.top : a.position.top), c && (a.size.width = a.size.height * a.aspectRatio, p = !1), a.position.top = a._helper ? l.top : 0), n = a.containerElement.get(0) === a.element.parent().get(0), o = /relative|absolute/.test(a.containerElement.css("position")), n && o ? (a.offset.left = a.parentData.left + a.position.left, a.offset.top = a.parentData.top + a.position.top) : (a.offset.left = a.element.offset().left, a.offset.top = a.element.offset().top), i = Math.abs(a.sizeDiff.width + (a._helper ? a.offset.left - u.left : a.offset.left - l.left)), s = Math.abs(a.sizeDiff.height + (a._helper ? a.offset.top - u.top : a.offset.top - l.top)), i + a.size.width >= a.parentData.width && (a.size.width = a.parentData.width - i, c && (a.size.height = a.size.width / a.aspectRatio, p = !1)), s + a.size.height >= a.parentData.height && (a.size.height = a.parentData.height - s, c && (a.size.width = a.size.height * a.aspectRatio, p = !1)), p || (a.position.left = a.prevPosition.left, a.position.top = a.prevPosition.top, a.size.width = a.prevSize.width, a.size.height = a.prevSize.height) }, stop: function () { var e = t(this).resizable("instance"), i = e.options, s = e.containerOffset, n = e.containerPosition, o = e.containerElement, a = t(e.helper), r = a.offset(), l = a.outerWidth() - e.sizeDiff.width, h = a.outerHeight() - e.sizeDiff.height; e._helper && !i.animate && /relative/.test(o.css("position")) && t(this).css({ left: r.left - n.left - s.left, width: l, height: h }), e._helper && !i.animate && /static/.test(o.css("position")) && t(this).css({ left: r.left - n.left - s.left, width: l, height: h }) } }), t.ui.plugin.add("resizable", "alsoResize", {
        start: function () { var e = t(this).resizable("instance"), i = e.options; t(i.alsoResize).each(function () { var e = t(this); e.data("ui-resizable-alsoresize", { width: parseFloat(e.width()), height: parseFloat(e.height()), left: parseFloat(e.css("left")), top: parseFloat(e.css("top")) }) }) }, resize: function (e, i) {
            var s = t(this).resizable("instance"), n = s.options, o = s.originalSize, a = s.originalPosition, r = { height: s.size.height - o.height || 0, width: s.size.width - o.width || 0, top: s.position.top - a.top || 0, left: s.position.left - a.left || 0 };
            t(n.alsoResize).each(function () { var e = t(this), s = t(this).data("ui-resizable-alsoresize"), n = {}, o = e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"]; t.each(o, function (t, e) { var i = (s[e] || 0) + (r[e] || 0); i && i >= 0 && (n[e] = i || null) }), e.css(n) })
        }, stop: function () { t(this).removeData("ui-resizable-alsoresize") }
    }), t.ui.plugin.add("resizable", "ghost", { start: function () { var e = t(this).resizable("instance"), i = e.size; e.ghost = e.originalElement.clone(), e.ghost.css({ opacity: .25, display: "block", position: "relative", height: i.height, width: i.width, margin: 0, left: 0, top: 0 }), e._addClass(e.ghost, "ui-resizable-ghost"), t.uiBackCompat !== !1 && "string" == typeof e.options.ghost && e.ghost.addClass(this.options.ghost), e.ghost.appendTo(e.helper) }, resize: function () { var e = t(this).resizable("instance"); e.ghost && e.ghost.css({ position: "relative", height: e.size.height, width: e.size.width }) }, stop: function () { var e = t(this).resizable("instance"); e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0)) } }), t.ui.plugin.add("resizable", "grid", { resize: function () { var e, i = t(this).resizable("instance"), s = i.options, n = i.size, o = i.originalSize, a = i.originalPosition, r = i.axis, l = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid, h = l[0] || 1, c = l[1] || 1, u = Math.round((n.width - o.width) / h) * h, d = Math.round((n.height - o.height) / c) * c, p = o.width + u, f = o.height + d, g = s.maxWidth && p > s.maxWidth, m = s.maxHeight && f > s.maxHeight, _ = s.minWidth && s.minWidth > p, v = s.minHeight && s.minHeight > f; s.grid = l, _ && (p += h), v && (f += c), g && (p -= h), m && (f -= c), /^(se|s|e)$/.test(r) ? (i.size.width = p, i.size.height = f) : /^(ne)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.top = a.top - d) : /^(sw)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.left = a.left - u) : ((0 >= f - c || 0 >= p - h) && (e = i._getPaddingPlusBorderDimensions(this)), f - c > 0 ? (i.size.height = f, i.position.top = a.top - d) : (f = c - e.height, i.size.height = f, i.position.top = a.top + o.height - f), p - h > 0 ? (i.size.width = p, i.position.left = a.left - u) : (p = h - e.width, i.size.width = p, i.position.left = a.left + o.width - p)) } }), t.ui.resizable, t.widget("ui.selectable", t.ui.mouse, { version: "1.12.1", options: { appendTo: "body", autoRefresh: !0, distance: 0, filter: "*", tolerance: "touch", selected: null, selecting: null, start: null, stop: null, unselected: null, unselecting: null }, _create: function () { var e = this; this._addClass("ui-selectable"), this.dragged = !1, this.refresh = function () { e.elementPos = t(e.element[0]).offset(), e.selectees = t(e.options.filter, e.element[0]), e._addClass(e.selectees, "ui-selectee"), e.selectees.each(function () { var i = t(this), s = i.offset(), n = { left: s.left - e.elementPos.left, top: s.top - e.elementPos.top }; t.data(this, "selectable-item", { element: this, $element: i, left: n.left, top: n.top, right: n.left + i.outerWidth(), bottom: n.top + i.outerHeight(), startselected: !1, selected: i.hasClass("ui-selected"), selecting: i.hasClass("ui-selecting"), unselecting: i.hasClass("ui-unselecting") }) }) }, this.refresh(), this._mouseInit(), this.helper = t("<div>"), this._addClass(this.helper, "ui-selectable-helper") }, _destroy: function () { this.selectees.removeData("selectable-item"), this._mouseDestroy() }, _mouseStart: function (e) { var i = this, s = this.options; this.opos = [e.pageX, e.pageY], this.elementPos = t(this.element[0]).offset(), this.options.disabled || (this.selectees = t(s.filter, this.element[0]), this._trigger("start", e), t(s.appendTo).append(this.helper), this.helper.css({ left: e.pageX, top: e.pageY, width: 0, height: 0 }), s.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () { var s = t.data(this, "selectable-item"); s.startselected = !0, e.metaKey || e.ctrlKey || (i._removeClass(s.$element, "ui-selected"), s.selected = !1, i._addClass(s.$element, "ui-unselecting"), s.unselecting = !0, i._trigger("unselecting", e, { unselecting: s.element })) }), t(e.target).parents().addBack().each(function () { var s, n = t.data(this, "selectable-item"); return n ? (s = !e.metaKey && !e.ctrlKey || !n.$element.hasClass("ui-selected"), i._removeClass(n.$element, s ? "ui-unselecting" : "ui-selected")._addClass(n.$element, s ? "ui-selecting" : "ui-unselecting"), n.unselecting = !s, n.selecting = s, n.selected = s, s ? i._trigger("selecting", e, { selecting: n.element }) : i._trigger("unselecting", e, { unselecting: n.element }), !1) : void 0 })) }, _mouseDrag: function (e) { if (this.dragged = !0, !this.options.disabled) { var i, s = this, n = this.options, o = this.opos[0], a = this.opos[1], r = e.pageX, l = e.pageY; return o > r && (i = r, r = o, o = i), a > l && (i = l, l = a, a = i), this.helper.css({ left: o, top: a, width: r - o, height: l - a }), this.selectees.each(function () { var i = t.data(this, "selectable-item"), h = !1, c = {}; i && i.element !== s.element[0] && (c.left = i.left + s.elementPos.left, c.right = i.right + s.elementPos.left, c.top = i.top + s.elementPos.top, c.bottom = i.bottom + s.elementPos.top, "touch" === n.tolerance ? h = !(c.left > r || o > c.right || c.top > l || a > c.bottom) : "fit" === n.tolerance && (h = c.left > o && r > c.right && c.top > a && l > c.bottom), h ? (i.selected && (s._removeClass(i.$element, "ui-selected"), i.selected = !1), i.unselecting && (s._removeClass(i.$element, "ui-unselecting"), i.unselecting = !1), i.selecting || (s._addClass(i.$element, "ui-selecting"), i.selecting = !0, s._trigger("selecting", e, { selecting: i.element }))) : (i.selecting && ((e.metaKey || e.ctrlKey) && i.startselected ? (s._removeClass(i.$element, "ui-selecting"), i.selecting = !1, s._addClass(i.$element, "ui-selected"), i.selected = !0) : (s._removeClass(i.$element, "ui-selecting"), i.selecting = !1, i.startselected && (s._addClass(i.$element, "ui-unselecting"), i.unselecting = !0), s._trigger("unselecting", e, { unselecting: i.element }))), i.selected && (e.metaKey || e.ctrlKey || i.startselected || (s._removeClass(i.$element, "ui-selected"), i.selected = !1, s._addClass(i.$element, "ui-unselecting"), i.unselecting = !0, s._trigger("unselecting", e, { unselecting: i.element }))))) }), !1 } }, _mouseStop: function (e) { var i = this; return this.dragged = !1, t(".ui-unselecting", this.element[0]).each(function () { var s = t.data(this, "selectable-item"); i._removeClass(s.$element, "ui-unselecting"), s.unselecting = !1, s.startselected = !1, i._trigger("unselected", e, { unselected: s.element }) }), t(".ui-selecting", this.element[0]).each(function () { var s = t.data(this, "selectable-item"); i._removeClass(s.$element, "ui-selecting")._addClass(s.$element, "ui-selected"), s.selecting = !1, s.selected = !0, s.startselected = !0, i._trigger("selected", e, { selected: s.element }) }), this._trigger("stop", e), this.helper.remove(), !1 } }), t.widget("ui.sortable", t.ui.mouse, { version: "1.12.1", widgetEventPrefix: "sort", ready: !1, options: { appendTo: "parent", axis: !1, connectWith: !1, containment: !1, cursor: "auto", cursorAt: !1, dropOnEmpty: !0, forcePlaceholderSize: !1, forceHelperSize: !1, grid: !1, handle: !1, helper: "original", items: "> *", opacity: !1, placeholder: !1, revert: !1, scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1e3, activate: null, beforeStop: null, change: null, deactivate: null, out: null, over: null, receive: null, remove: null, sort: null, start: null, stop: null, update: null }, _isOverAxis: function (t, e, i) { return t >= e && e + i > t }, _isFloating: function (t) { return /left|right/.test(t.css("float")) || /inline|table-cell/.test(t.css("display")) }, _create: function () { this.containerCache = {}, this._addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0 }, _setOption: function (t, e) { this._super(t, e), "handle" === t && this._setHandleClassName() }, _setHandleClassName: function () { var e = this; this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"), t.each(this.items, function () { e._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle") }) }, _destroy: function () { this._mouseDestroy(); for (var t = this.items.length - 1; t >= 0; t--)this.items[t].item.removeData(this.widgetName + "-item"); return this }, _mouseCapture: function (e, i) { var s = null, n = !1, o = this; return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(e), t(e.target).parents().each(function () { return t.data(this, o.widgetName + "-item") === o ? (s = t(this), !1) : void 0 }), t.data(e.target, o.widgetName + "-item") === o && (s = t(e.target)), s ? !this.options.handle || i || (t(this.options.handle, s).find("*").addBack().each(function () { this === e.target && (n = !0) }), n) ? (this.currentItem = s, this._removeCurrentsFromItems(), !0) : !1 : !1) }, _mouseStart: function (e, i, s) { var n, o, a = this.options; if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(e), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, t.extend(this.offset, { click: { left: e.pageX - this.offset.left, top: e.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(e), this.originalPageX = e.pageX, this.originalPageY = e.pageY, a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt), this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), a.containment && this._setContainment(), a.cursor && "auto" !== a.cursor && (o = this.document.find("body"), this.storedCursor = o.css("cursor"), o.css("cursor", a.cursor), this.storedStylesheet = t("<style>*{ cursor: " + a.cursor + " !important; }</style>").appendTo(o)), a.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", a.opacity)), a.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", a.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", e, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !s) for (n = this.containers.length - 1; n >= 0; n--)this.containers[n]._trigger("activate", e, this._uiHash(this)); return t.ui.ddmanager && (t.ui.ddmanager.current = this), t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this.dragging = !0, this._addClass(this.helper, "ui-sortable-helper"), this._mouseDrag(e), !0 }, _mouseDrag: function (e) { var i, s, n, o, a = this.options, r = !1; for (this.position = this._generatePosition(e), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < a.scrollSensitivity ? this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + a.scrollSpeed : e.pageY - this.overflowOffset.top < a.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - a.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < a.scrollSensitivity ? this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + a.scrollSpeed : e.pageX - this.overflowOffset.left < a.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - a.scrollSpeed)) : (e.pageY - this.document.scrollTop() < a.scrollSensitivity ? r = this.document.scrollTop(this.document.scrollTop() - a.scrollSpeed) : this.window.height() - (e.pageY - this.document.scrollTop()) < a.scrollSensitivity && (r = this.document.scrollTop(this.document.scrollTop() + a.scrollSpeed)), e.pageX - this.document.scrollLeft() < a.scrollSensitivity ? r = this.document.scrollLeft(this.document.scrollLeft() - a.scrollSpeed) : this.window.width() - (e.pageX - this.document.scrollLeft()) < a.scrollSensitivity && (r = this.document.scrollLeft(this.document.scrollLeft() + a.scrollSpeed))), r !== !1 && t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), i = this.items.length - 1; i >= 0; i--)if (s = this.items[i], n = s.item[0], o = this._intersectsWithPointer(s), o && s.instance === this.currentContainer && n !== this.currentItem[0] && this.placeholder[1 === o ? "next" : "prev"]()[0] !== n && !t.contains(this.placeholder[0], n) && ("semi-dynamic" === this.options.type ? !t.contains(this.element[0], n) : !0)) { if (this.direction = 1 === o ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(s)) break; this._rearrange(e, s), this._trigger("change", e, this._uiHash()); break } return this._contactContainers(e), t.ui.ddmanager && t.ui.ddmanager.drag(this, e), this._trigger("sort", e, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1 }, _mouseStop: function (e, i) { if (e) { if (t.ui.ddmanager && !this.options.dropBehaviour && t.ui.ddmanager.drop(this, e), this.options.revert) { var s = this, n = this.placeholder.offset(), o = this.options.axis, a = {}; o && "x" !== o || (a.left = n.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), o && "y" !== o || (a.top = n.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, t(this.helper).animate(a, parseInt(this.options.revert, 10) || 500, function () { s._clear(e) }) } else this._clear(e, i); return !1 } }, cancel: function () { if (this.dragging) { this._mouseUp(new t.Event("mouseup", { target: null })), "original" === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show(); for (var e = this.containers.length - 1; e >= 0; e--)this.containers[e]._trigger("deactivate", null, this._uiHash(this)), this.containers[e].containerCache.over && (this.containers[e]._trigger("out", null, this._uiHash(this)), this.containers[e].containerCache.over = 0) } return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), t.extend(this, { helper: null, dragging: !1, reverting: !1, _noFinalSort: null }), this.domPosition.prev ? t(this.domPosition.prev).after(this.currentItem) : t(this.domPosition.parent).prepend(this.currentItem)), this }, serialize: function (e) { var i = this._getItemsAsjQuery(e && e.connected), s = []; return e = e || {}, t(i).each(function () { var i = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[\-=_](.+)/); i && s.push((e.key || i[1] + "[]") + "=" + (e.key && e.expression ? i[1] : i[2])) }), !s.length && e.key && s.push(e.key + "="), s.join("&") }, toArray: function (e) { var i = this._getItemsAsjQuery(e && e.connected), s = []; return e = e || {}, i.each(function () { s.push(t(e.item || this).attr(e.attribute || "id") || "") }), s }, _intersectsWith: function (t) { var e = this.positionAbs.left, i = e + this.helperProportions.width, s = this.positionAbs.top, n = s + this.helperProportions.height, o = t.left, a = o + t.width, r = t.top, l = r + t.height, h = this.offset.click.top, c = this.offset.click.left, u = "x" === this.options.axis || s + h > r && l > s + h, d = "y" === this.options.axis || e + c > o && a > e + c, p = u && d; return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"] ? p : e + this.helperProportions.width / 2 > o && a > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > r && l > n - this.helperProportions.height / 2 }, _intersectsWithPointer: function (t) { var e, i, s = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height), n = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width), o = s && n; return o ? (e = this._getDragVerticalDirection(), i = this._getDragHorizontalDirection(), this.floating ? "right" === i || "down" === e ? 2 : 1 : e && ("down" === e ? 2 : 1)) : !1 }, _intersectsWithSides: function (t) { var e = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height), i = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width), s = this._getDragVerticalDirection(), n = this._getDragHorizontalDirection(); return this.floating && n ? "right" === n && i || "left" === n && !i : s && ("down" === s && e || "up" === s && !e) }, _getDragVerticalDirection: function () { var t = this.positionAbs.top - this.lastPositionAbs.top; return 0 !== t && (t > 0 ? "down" : "up") }, _getDragHorizontalDirection: function () { var t = this.positionAbs.left - this.lastPositionAbs.left; return 0 !== t && (t > 0 ? "right" : "left") }, refresh: function (t) { return this._refreshItems(t), this._setHandleClassName(), this.refreshPositions(), this }, _connectWith: function () { var t = this.options; return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith }, _getItemsAsjQuery: function (e) { function i() { r.push(this) } var s, n, o, a, r = [], l = [], h = this._connectWith(); if (h && e) for (s = h.length - 1; s >= 0; s--)for (o = t(h[s], this.document[0]), n = o.length - 1; n >= 0; n--)a = t.data(o[n], this.widgetFullName), a && a !== this && !a.options.disabled && l.push([t.isFunction(a.options.items) ? a.options.items.call(a.element) : t(a.options.items, a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), a]); for (l.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), s = l.length - 1; s >= 0; s--)l[s][0].each(i); return t(r) }, _removeCurrentsFromItems: function () { var e = this.currentItem.find(":data(" + this.widgetName + "-item)"); this.items = t.grep(this.items, function (t) { for (var i = 0; e.length > i; i++)if (e[i] === t.item[0]) return !1; return !0 }) }, _refreshItems: function (e) { this.items = [], this.containers = [this]; var i, s, n, o, a, r, l, h, c = this.items, u = [[t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, { item: this.currentItem }) : t(this.options.items, this.element), this]], d = this._connectWith(); if (d && this.ready) for (i = d.length - 1; i >= 0; i--)for (n = t(d[i], this.document[0]), s = n.length - 1; s >= 0; s--)o = t.data(n[s], this.widgetFullName), o && o !== this && !o.options.disabled && (u.push([t.isFunction(o.options.items) ? o.options.items.call(o.element[0], e, { item: this.currentItem }) : t(o.options.items, o.element), o]), this.containers.push(o)); for (i = u.length - 1; i >= 0; i--)for (a = u[i][1], r = u[i][0], s = 0, h = r.length; h > s; s++)l = t(r[s]), l.data(this.widgetName + "-item", a), c.push({ item: l, instance: a, width: 0, height: 0, left: 0, top: 0 }) }, refreshPositions: function (e) { this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset()); var i, s, n, o; for (i = this.items.length - 1; i >= 0; i--)s = this.items[i], s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (n = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item, e || (s.width = n.outerWidth(), s.height = n.outerHeight()), o = n.offset(), s.left = o.left, s.top = o.top); if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this); else for (i = this.containers.length - 1; i >= 0; i--)o = this.containers[i].element.offset(), this.containers[i].containerCache.left = o.left, this.containers[i].containerCache.top = o.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight(); return this }, _createPlaceholder: function (e) { e = e || this; var i, s = e.options; s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder, s.placeholder = { element: function () { var s = e.currentItem[0].nodeName.toLowerCase(), n = t("<" + s + ">", e.document[0]); return e._addClass(n, "ui-sortable-placeholder", i || e.currentItem[0].className)._removeClass(n, "ui-sortable-helper"), "tbody" === s ? e._createTrPlaceholder(e.currentItem.find("tr").eq(0), t("<tr>", e.document[0]).appendTo(n)) : "tr" === s ? e._createTrPlaceholder(e.currentItem, n) : "img" === s && n.attr("src", e.currentItem.attr("src")), i || n.css("visibility", "hidden"), n }, update: function (t, n) { (!i || s.forcePlaceholderSize) && (n.height() || n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)), n.width() || n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10))) } }), e.placeholder = t(s.placeholder.element.call(e.element, e.currentItem)), e.currentItem.after(e.placeholder), s.placeholder.update(e, e.placeholder) }, _createTrPlaceholder: function (e, i) { var s = this; e.children().each(function () { t("<td>&#160;</td>", s.document[0]).attr("colspan", t(this).attr("colspan") || 1).appendTo(i) }) }, _contactContainers: function (e) { var i, s, n, o, a, r, l, h, c, u, d = null, p = null; for (i = this.containers.length - 1; i >= 0; i--)if (!t.contains(this.currentItem[0], this.containers[i].element[0])) if (this._intersectsWith(this.containers[i].containerCache)) { if (d && t.contains(this.containers[i].element[0], d.element[0])) continue; d = this.containers[i], p = i } else this.containers[i].containerCache.over && (this.containers[i]._trigger("out", e, this._uiHash(this)), this.containers[i].containerCache.over = 0); if (d) if (1 === this.containers.length) this.containers[p].containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash(this)), this.containers[p].containerCache.over = 1); else { for (n = 1e4, o = null, c = d.floating || this._isFloating(this.currentItem), a = c ? "left" : "top", r = c ? "width" : "height", u = c ? "pageX" : "pageY", s = this.items.length - 1; s >= 0; s--)t.contains(this.containers[p].element[0], this.items[s].item[0]) && this.items[s].item[0] !== this.currentItem[0] && (l = this.items[s].item.offset()[a], h = !1, e[u] - l > this.items[s][r] / 2 && (h = !0), n > Math.abs(e[u] - l) && (n = Math.abs(e[u] - l), o = this.items[s], this.direction = h ? "up" : "down")); if (!o && !this.options.dropOnEmpty) return; if (this.currentContainer === this.containers[p]) return this.currentContainer.containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0; o ? this._rearrange(e, o, null, !0) : this._rearrange(e, null, this.containers[p].element, !0), this._trigger("change", e, this._uiHash()), this.containers[p]._trigger("change", e, this._uiHash(this)), this.currentContainer = this.containers[p], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[p]._trigger("over", e, this._uiHash(this)), this.containers[p].containerCache.over = 1 } }, _createHelper: function (e) { var i = this.options, s = t.isFunction(i.helper) ? t(i.helper.apply(this.element[0], [e, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem; return s.parents("body").length || t("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]), s[0] === this.currentItem[0] && (this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") }), (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()), (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()), s }, _adjustOffsetFromHelper: function (e) { "string" == typeof e && (e = e.split(" ")), t.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }), "left" in e && (this.offset.click.left = e.left + this.margins.left), "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left), "top" in e && (this.offset.click.top = e.top + this.margins.top), "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top) }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var e = this.offsetParent.offset(); return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(), e.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && t.ui.ie) && (e = { top: 0, left: 0 }), { top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if ("relative" === this.cssPosition) { var t = this.currentItem.position(); return { top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } return { top: 0, left: 0 } }, _cacheMargins: function () { this.margins = { left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var e, i, s, n = this.options; "parent" === n.containment && (n.containment = this.helper[0].parentNode), ("document" === n.containment || "window" === n.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === n.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === n.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(n.containment) || (e = t(n.containment)[0], i = t(n.containment).offset(), s = "hidden" !== t(e).css("overflow"), this.containment = [i.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left, i.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top, i.left + (s ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css("borderLeftWidth"), 10) || 0) - (parseInt(t(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css("borderTopWidth"), 10) || 0) - (parseInt(t(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]) }, _convertPositionTo: function (e, i) { i || (i = this.position); var s = "absolute" === e ? 1 : -1, n = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, o = /(html|body)/i.test(n[0].tagName); return { top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : o ? 0 : n.scrollTop()) * s, left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s } }, _generatePosition: function (e) { var i, s, n = this.options, o = e.pageX, a = e.pageY, r = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, l = /(html|body)/i.test(r[0].tagName); return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (e.pageX - this.offset.click.left < this.containment[0] && (o = this.containment[0] + this.offset.click.left), e.pageY - this.offset.click.top < this.containment[1] && (a = this.containment[1] + this.offset.click.top), e.pageX - this.offset.click.left > this.containment[2] && (o = this.containment[2] + this.offset.click.left), e.pageY - this.offset.click.top > this.containment[3] && (a = this.containment[3] + this.offset.click.top)), n.grid && (i = this.originalPageY + Math.round((a - this.originalPageY) / n.grid[1]) * n.grid[1], a = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - n.grid[1] : i + n.grid[1] : i, s = this.originalPageX + Math.round((o - this.originalPageX) / n.grid[0]) * n.grid[0], o = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - n.grid[0] : s + n.grid[0] : s)), { top: a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : l ? 0 : r.scrollTop()), left: o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : l ? 0 : r.scrollLeft()) } }, _rearrange: function (t, e, i, s) { i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? e.item[0] : e.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1; var n = this.counter; this._delay(function () { n === this.counter && this.refreshPositions(!s) }) }, _clear: function (t, e) { function i(t, e, i) { return function (s) { i._trigger(t, s, e._uiHash(e)) } } this.reverting = !1; var s, n = []; if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) { for (s in this._storedCSS) ("auto" === this._storedCSS[s] || "static" === this._storedCSS[s]) && (this._storedCSS[s] = ""); this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper") } else this.currentItem.show(); for (this.fromOutside && !e && n.push(function (t) { this._trigger("receive", t, this._uiHash(this.fromOutside)) }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || e || n.push(function (t) { this._trigger("update", t, this._uiHash()) }), this !== this.currentContainer && (e || (n.push(function (t) { this._trigger("remove", t, this._uiHash()) }), n.push(function (t) { return function (e) { t._trigger("receive", e, this._uiHash(this)) } }.call(this, this.currentContainer)), n.push(function (t) { return function (e) { t._trigger("update", e, this._uiHash(this)) } }.call(this, this.currentContainer)))), s = this.containers.length - 1; s >= 0; s--)e || n.push(i("deactivate", this, this.containers[s])), this.containers[s].containerCache.over && (n.push(i("out", this, this.containers[s])), this.containers[s].containerCache.over = 0); if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, e || this._trigger("beforeStop", t, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !e) { for (s = 0; n.length > s; s++)n[s].call(this, t); this._trigger("stop", t, this._uiHash()) } return this.fromOutside = !1, !this.cancelHelperRemoval }, _trigger: function () { t.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel() }, _uiHash: function (e) { var i = e || this; return { helper: i.helper, placeholder: i.placeholder || t([]), position: i.position, originalPosition: i.originalPosition, offset: i.positionAbs, item: i.currentItem, sender: e ? e.element : null } } }), t.widget("ui.accordion", {
        version: "1.12.1", options: { active: 0, animate: {}, classes: { "ui-accordion-header": "ui-corner-top", "ui-accordion-header-collapsed": "ui-corner-all", "ui-accordion-content": "ui-corner-bottom" }, collapsible: !1, event: "click", header: "> li > :first-child, > :not(li):even", heightStyle: "auto", icons: { activeHeader: "ui-icon-triangle-1-s", header: "ui-icon-triangle-1-e" }, activate: null, beforeActivate: null }, hideProps: { borderTopWidth: "hide", borderBottomWidth: "hide", paddingTop: "hide", paddingBottom: "hide", height: "hide" }, showProps: { borderTopWidth: "show", borderBottomWidth: "show", paddingTop: "show", paddingBottom: "show", height: "show" }, _create: function () { var e = this.options; this.prevShow = this.prevHide = t(), this._addClass("ui-accordion", "ui-widget ui-helper-reset"), this.element.attr("role", "tablist"), e.collapsible || e.active !== !1 && null != e.active || (e.active = 0), this._processPanels(), 0 > e.active && (e.active += this.headers.length), this._refresh() }, _getCreateEventData: function () { return { header: this.active, panel: this.active.length ? this.active.next() : t() } }, _createIcons: function () {
            var e, i, s = this.options.icons; s && (e = t("<span>"), this._addClass(e, "ui-accordion-header-icon", "ui-icon " + s.header), e.prependTo(this.headers), i = this.active.children(".ui-accordion-header-icon"), this._removeClass(i, s.header)._addClass(i, null, s.activeHeader)._addClass(this.headers, "ui-accordion-icons"))
        }, _destroyIcons: function () { this._removeClass(this.headers, "ui-accordion-icons"), this.headers.children(".ui-accordion-header-icon").remove() }, _destroy: function () { var t; this.element.removeAttr("role"), this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(), this._destroyIcons(), t = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && t.css("height", "") }, _setOption: function (t, e) { return "active" === t ? (this._activate(e), void 0) : ("event" === t && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(e)), this._super(t, e), "collapsible" !== t || e || this.options.active !== !1 || this._activate(0), "icons" === t && (this._destroyIcons(), e && this._createIcons()), void 0) }, _setOptionDisabled: function (t) { this._super(t), this.element.attr("aria-disabled", t), this._toggleClass(null, "ui-state-disabled", !!t), this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!t) }, _keydown: function (e) { if (!e.altKey && !e.ctrlKey) { var i = t.ui.keyCode, s = this.headers.length, n = this.headers.index(e.target), o = !1; switch (e.keyCode) { case i.RIGHT: case i.DOWN: o = this.headers[(n + 1) % s]; break; case i.LEFT: case i.UP: o = this.headers[(n - 1 + s) % s]; break; case i.SPACE: case i.ENTER: this._eventHandler(e); break; case i.HOME: o = this.headers[0]; break; case i.END: o = this.headers[s - 1] }o && (t(e.target).attr("tabIndex", -1), t(o).attr("tabIndex", 0), t(o).trigger("focus"), e.preventDefault()) } }, _panelKeyDown: function (e) { e.keyCode === t.ui.keyCode.UP && e.ctrlKey && t(e.currentTarget).prev().trigger("focus") }, refresh: function () { var e = this.options; this._processPanels(), e.active === !1 && e.collapsible === !0 || !this.headers.length ? (e.active = !1, this.active = t()) : e.active === !1 ? this._activate(0) : this.active.length && !t.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (e.active = !1, this.active = t()) : this._activate(Math.max(0, e.active - 1)) : e.active = this.headers.index(this.active), this._destroyIcons(), this._refresh() }, _processPanels: function () { var t = this.headers, e = this.panels; this.headers = this.element.find(this.options.header), this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default"), this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide(), this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content"), e && (this._off(t.not(this.headers)), this._off(e.not(this.panels))) }, _refresh: function () { var e, i = this.options, s = i.heightStyle, n = this.element.parent(); this.active = this._findActive(i.active), this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed"), this._addClass(this.active.next(), "ui-accordion-content-active"), this.active.next().show(), this.headers.attr("role", "tab").each(function () { var e = t(this), i = e.uniqueId().attr("id"), s = e.next(), n = s.uniqueId().attr("id"); e.attr("aria-controls", n), s.attr("aria-labelledby", i) }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 }).next().attr({ "aria-hidden": "true" }).hide(), this.active.length ? this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }).next().attr({ "aria-hidden": "false" }) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(i.event), "fill" === s ? (e = n.height(), this.element.siblings(":visible").each(function () { var i = t(this), s = i.css("position"); "absolute" !== s && "fixed" !== s && (e -= i.outerHeight(!0)) }), this.headers.each(function () { e -= t(this).outerHeight(!0) }), this.headers.next().each(function () { t(this).height(Math.max(0, e - t(this).innerHeight() + t(this).height())) }).css("overflow", "auto")) : "auto" === s && (e = 0, this.headers.next().each(function () { var i = t(this).is(":visible"); i || t(this).show(), e = Math.max(e, t(this).css("height", "").height()), i || t(this).hide() }).height(e)) }, _activate: function (e) { var i = this._findActive(e)[0]; i !== this.active[0] && (i = i || this.active[0], this._eventHandler({ target: i, currentTarget: i, preventDefault: t.noop })) }, _findActive: function (e) { return "number" == typeof e ? this.headers.eq(e) : t() }, _setupEvents: function (e) { var i = { keydown: "_keydown" }; e && t.each(e.split(" "), function (t, e) { i[e] = "_eventHandler" }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, i), this._on(this.headers.next(), { keydown: "_panelKeyDown" }), this._hoverable(this.headers), this._focusable(this.headers) }, _eventHandler: function (e) { var i, s, n = this.options, o = this.active, a = t(e.currentTarget), r = a[0] === o[0], l = r && n.collapsible, h = l ? t() : a.next(), c = o.next(), u = { oldHeader: o, oldPanel: c, newHeader: l ? t() : a, newPanel: h }; e.preventDefault(), r && !n.collapsible || this._trigger("beforeActivate", e, u) === !1 || (n.active = l ? !1 : this.headers.index(a), this.active = r ? t() : a, this._toggle(u), this._removeClass(o, "ui-accordion-header-active", "ui-state-active"), n.icons && (i = o.children(".ui-accordion-header-icon"), this._removeClass(i, null, n.icons.activeHeader)._addClass(i, null, n.icons.header)), r || (this._removeClass(a, "ui-accordion-header-collapsed")._addClass(a, "ui-accordion-header-active", "ui-state-active"), n.icons && (s = a.children(".ui-accordion-header-icon"), this._removeClass(s, null, n.icons.header)._addClass(s, null, n.icons.activeHeader)), this._addClass(a.next(), "ui-accordion-content-active"))) }, _toggle: function (e) { var i = e.newPanel, s = this.prevShow.length ? this.prevShow : e.oldPanel; this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = i, this.prevHide = s, this.options.animate ? this._animate(i, s, e) : (s.hide(), i.show(), this._toggleComplete(e)), s.attr({ "aria-hidden": "true" }), s.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }), i.length && s.length ? s.prev().attr({ tabIndex: -1, "aria-expanded": "false" }) : i.length && this.headers.filter(function () { return 0 === parseInt(t(this).attr("tabIndex"), 10) }).attr("tabIndex", -1), i.attr("aria-hidden", "false").prev().attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }) }, _animate: function (t, e, i) { var s, n, o, a = this, r = 0, l = t.css("box-sizing"), h = t.length && (!e.length || t.index() < e.index()), c = this.options.animate || {}, u = h && c.down || c, d = function () { a._toggleComplete(i) }; return "number" == typeof u && (o = u), "string" == typeof u && (n = u), n = n || u.easing || c.easing, o = o || u.duration || c.duration, e.length ? t.length ? (s = t.show().outerHeight(), e.animate(this.hideProps, { duration: o, easing: n, step: function (t, e) { e.now = Math.round(t) } }), t.hide().animate(this.showProps, { duration: o, easing: n, complete: d, step: function (t, i) { i.now = Math.round(t), "height" !== i.prop ? "content-box" === l && (r += i.now) : "content" !== a.options.heightStyle && (i.now = Math.round(s - e.outerHeight() - r), r = 0) } }), void 0) : e.animate(this.hideProps, o, n, d) : t.animate(this.showProps, o, n, d) }, _toggleComplete: function (t) { var e = t.oldPanel, i = e.prev(); this._removeClass(e, "ui-accordion-content-active"), this._removeClass(i, "ui-accordion-header-active")._addClass(i, "ui-accordion-header-collapsed"), e.length && (e.parent()[0].className = e.parent()[0].className), this._trigger("activate", null, t) }
    }), t.widget("ui.menu", { version: "1.12.1", defaultElement: "<ul>", delay: 300, options: { icons: { submenu: "ui-icon-caret-1-e" }, items: "> *", menus: "ul", position: { my: "left top", at: "right top" }, role: "menu", blur: null, focus: null, select: null }, _create: function () { this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().attr({ role: this.options.role, tabIndex: 0 }), this._addClass("ui-menu", "ui-widget ui-widget-content"), this._on({ "mousedown .ui-menu-item": function (t) { t.preventDefault() }, "click .ui-menu-item": function (e) { var i = t(e.target), s = t(t.ui.safeActiveElement(this.document[0])); !this.mouseHandled && i.not(".ui-state-disabled").length && (this.select(e), e.isPropagationStopped() || (this.mouseHandled = !0), i.has(".ui-menu").length ? this.expand(e) : !this.element.is(":focus") && s.closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer))) }, "mouseenter .ui-menu-item": function (e) { if (!this.previousFilter) { var i = t(e.target).closest(".ui-menu-item"), s = t(e.currentTarget); i[0] === s[0] && (this._removeClass(s.siblings().children(".ui-state-active"), null, "ui-state-active"), this.focus(e, s)) } }, mouseleave: "collapseAll", "mouseleave .ui-menu": "collapseAll", focus: function (t, e) { var i = this.active || this.element.find(this.options.items).eq(0); e || this.focus(t, i) }, blur: function (e) { this._delay(function () { var i = !t.contains(this.element[0], t.ui.safeActiveElement(this.document[0])); i && this.collapseAll(e) }) }, keydown: "_keydown" }), this.refresh(), this._on(this.document, { click: function (t) { this._closeOnDocumentClick(t) && this.collapseAll(t), this.mouseHandled = !1 } }) }, _destroy: function () { var e = this.element.find(".ui-menu-item").removeAttr("role aria-disabled"), i = e.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup"); this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(), i.children().each(function () { var e = t(this); e.data("ui-menu-submenu-caret") && e.remove() }) }, _keydown: function (e) { var i, s, n, o, a = !0; switch (e.keyCode) { case t.ui.keyCode.PAGE_UP: this.previousPage(e); break; case t.ui.keyCode.PAGE_DOWN: this.nextPage(e); break; case t.ui.keyCode.HOME: this._move("first", "first", e); break; case t.ui.keyCode.END: this._move("last", "last", e); break; case t.ui.keyCode.UP: this.previous(e); break; case t.ui.keyCode.DOWN: this.next(e); break; case t.ui.keyCode.LEFT: this.collapse(e); break; case t.ui.keyCode.RIGHT: this.active && !this.active.is(".ui-state-disabled") && this.expand(e); break; case t.ui.keyCode.ENTER: case t.ui.keyCode.SPACE: this._activate(e); break; case t.ui.keyCode.ESCAPE: this.collapse(e); break; default: a = !1, s = this.previousFilter || "", o = !1, n = e.keyCode >= 96 && 105 >= e.keyCode ? "" + (e.keyCode - 96) : String.fromCharCode(e.keyCode), clearTimeout(this.filterTimer), n === s ? o = !0 : n = s + n, i = this._filterMenuItems(n), i = o && -1 !== i.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : i, i.length || (n = String.fromCharCode(e.keyCode), i = this._filterMenuItems(n)), i.length ? (this.focus(e, i), this.previousFilter = n, this.filterTimer = this._delay(function () { delete this.previousFilter }, 1e3)) : delete this.previousFilter }a && e.preventDefault() }, _activate: function (t) { this.active && !this.active.is(".ui-state-disabled") && (this.active.children("[aria-haspopup='true']").length ? this.expand(t) : this.select(t)) }, refresh: function () { var e, i, s, n, o, a = this, r = this.options.icons.submenu, l = this.element.find(this.options.menus); this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length), s = l.filter(":not(.ui-menu)").hide().attr({ role: this.options.role, "aria-hidden": "true", "aria-expanded": "false" }).each(function () { var e = t(this), i = e.prev(), s = t("<span>").data("ui-menu-submenu-caret", !0); a._addClass(s, "ui-menu-icon", "ui-icon " + r), i.attr("aria-haspopup", "true").prepend(s), e.attr("aria-labelledby", i.attr("id")) }), this._addClass(s, "ui-menu", "ui-widget ui-widget-content ui-front"), e = l.add(this.element), i = e.find(this.options.items), i.not(".ui-menu-item").each(function () { var e = t(this); a._isDivider(e) && a._addClass(e, "ui-menu-divider", "ui-widget-content") }), n = i.not(".ui-menu-item, .ui-menu-divider"), o = n.children().not(".ui-menu").uniqueId().attr({ tabIndex: -1, role: this._itemRole() }), this._addClass(n, "ui-menu-item")._addClass(o, "ui-menu-item-wrapper"), i.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !t.contains(this.element[0], this.active[0]) && this.blur() }, _itemRole: function () { return { menu: "menuitem", listbox: "option" }[this.options.role] }, _setOption: function (t, e) { if ("icons" === t) { var i = this.element.find(".ui-menu-icon"); this._removeClass(i, null, this.options.icons.submenu)._addClass(i, null, e.submenu) } this._super(t, e) }, _setOptionDisabled: function (t) { this._super(t), this.element.attr("aria-disabled", t + ""), this._toggleClass(null, "ui-state-disabled", !!t) }, focus: function (t, e) { var i, s, n; this.blur(t, t && "focus" === t.type), this._scrollIntoView(e), this.active = e.first(), s = this.active.children(".ui-menu-item-wrapper"), this._addClass(s, null, "ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", s.attr("id")), n = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"), this._addClass(n, null, "ui-state-active"), t && "keydown" === t.type ? this._close() : this.timer = this._delay(function () { this._close() }, this.delay), i = e.children(".ui-menu"), i.length && t && /^mouse/.test(t.type) && this._startOpening(i), this.activeMenu = e.parent(), this._trigger("focus", t, { item: e }) }, _scrollIntoView: function (e) { var i, s, n, o, a, r; this._hasScroll() && (i = parseFloat(t.css(this.activeMenu[0], "borderTopWidth")) || 0, s = parseFloat(t.css(this.activeMenu[0], "paddingTop")) || 0, n = e.offset().top - this.activeMenu.offset().top - i - s, o = this.activeMenu.scrollTop(), a = this.activeMenu.height(), r = e.outerHeight(), 0 > n ? this.activeMenu.scrollTop(o + n) : n + r > a && this.activeMenu.scrollTop(o + n - a + r)) }, blur: function (t, e) { e || clearTimeout(this.timer), this.active && (this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active"), this._trigger("blur", t, { item: this.active }), this.active = null) }, _startOpening: function (t) { clearTimeout(this.timer), "true" === t.attr("aria-hidden") && (this.timer = this._delay(function () { this._close(), this._open(t) }, this.delay)) }, _open: function (e) { var i = t.extend({ of: this.active }, this.options.position); clearTimeout(this.timer), this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true"), e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i) }, collapseAll: function (e, i) { clearTimeout(this.timer), this.timer = this._delay(function () { var s = i ? this.element : t(e && e.target).closest(this.element.find(".ui-menu")); s.length || (s = this.element), this._close(s), this.blur(e), this._removeClass(s.find(".ui-state-active"), null, "ui-state-active"), this.activeMenu = s }, this.delay) }, _close: function (t) { t || (t = this.active ? this.active.parent() : this.element), t.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false") }, _closeOnDocumentClick: function (e) { return !t(e.target).closest(".ui-menu").length }, _isDivider: function (t) { return !/[^\-\u2014\u2013\s]/.test(t.text()) }, collapse: function (t) { var e = this.active && this.active.parent().closest(".ui-menu-item", this.element); e && e.length && (this._close(), this.focus(t, e)) }, expand: function (t) { var e = this.active && this.active.children(".ui-menu ").find(this.options.items).first(); e && e.length && (this._open(e.parent()), this._delay(function () { this.focus(t, e) })) }, next: function (t) { this._move("next", "first", t) }, previous: function (t) { this._move("prev", "last", t) }, isFirstItem: function () { return this.active && !this.active.prevAll(".ui-menu-item").length }, isLastItem: function () { return this.active && !this.active.nextAll(".ui-menu-item").length }, _move: function (t, e, i) { var s; this.active && (s = "first" === t || "last" === t ? this.active["first" === t ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[t + "All"](".ui-menu-item").eq(0)), s && s.length && this.active || (s = this.activeMenu.find(this.options.items)[e]()), this.focus(i, s) }, nextPage: function (e) { var i, s, n; return this.active ? (this.isLastItem() || (this._hasScroll() ? (s = this.active.offset().top, n = this.element.height(), this.active.nextAll(".ui-menu-item").each(function () { return i = t(this), 0 > i.offset().top - s - n }), this.focus(e, i)) : this.focus(e, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), void 0) : (this.next(e), void 0) }, previousPage: function (e) { var i, s, n; return this.active ? (this.isFirstItem() || (this._hasScroll() ? (s = this.active.offset().top, n = this.element.height(), this.active.prevAll(".ui-menu-item").each(function () { return i = t(this), i.offset().top - s + n > 0 }), this.focus(e, i)) : this.focus(e, this.activeMenu.find(this.options.items).first())), void 0) : (this.next(e), void 0) }, _hasScroll: function () { return this.element.outerHeight() < this.element.prop("scrollHeight") }, select: function (e) { this.active = this.active || t(e.target).closest(".ui-menu-item"); var i = { item: this.active }; this.active.has(".ui-menu").length || this.collapseAll(e, !0), this._trigger("select", e, i) }, _filterMenuItems: function (e) { var i = e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), s = RegExp("^" + i, "i"); return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function () { return s.test(t.trim(t(this).children(".ui-menu-item-wrapper").text())) }) } }), t.widget("ui.autocomplete", { version: "1.12.1", defaultElement: "<input>", options: { appendTo: null, autoFocus: !1, delay: 300, minLength: 1, position: { my: "left top", at: "left bottom", collision: "none" }, source: null, change: null, close: null, focus: null, open: null, response: null, search: null, select: null }, requestIndex: 0, pending: 0, _create: function () { var e, i, s, n = this.element[0].nodeName.toLowerCase(), o = "textarea" === n, a = "input" === n; this.isMultiLine = o || !a && this._isContentEditable(this.element), this.valueMethod = this.element[o || a ? "val" : "text"], this.isNewMenu = !0, this._addClass("ui-autocomplete-input"), this.element.attr("autocomplete", "off"), this._on(this.element, { keydown: function (n) { if (this.element.prop("readOnly")) return e = !0, s = !0, i = !0, void 0; e = !1, s = !1, i = !1; var o = t.ui.keyCode; switch (n.keyCode) { case o.PAGE_UP: e = !0, this._move("previousPage", n); break; case o.PAGE_DOWN: e = !0, this._move("nextPage", n); break; case o.UP: e = !0, this._keyEvent("previous", n); break; case o.DOWN: e = !0, this._keyEvent("next", n); break; case o.ENTER: this.menu.active && (e = !0, n.preventDefault(), this.menu.select(n)); break; case o.TAB: this.menu.active && this.menu.select(n); break; case o.ESCAPE: this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(n), n.preventDefault()); break; default: i = !0, this._searchTimeout(n) } }, keypress: function (s) { if (e) return e = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && s.preventDefault(), void 0; if (!i) { var n = t.ui.keyCode; switch (s.keyCode) { case n.PAGE_UP: this._move("previousPage", s); break; case n.PAGE_DOWN: this._move("nextPage", s); break; case n.UP: this._keyEvent("previous", s); break; case n.DOWN: this._keyEvent("next", s) } } }, input: function (t) { return s ? (s = !1, t.preventDefault(), void 0) : (this._searchTimeout(t), void 0) }, focus: function () { this.selectedItem = null, this.previous = this._value() }, blur: function (t) { return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), this.close(t), this._change(t), void 0) } }), this._initSource(), this.menu = t("<ul>").appendTo(this._appendTo()).menu({ role: null }).hide().menu("instance"), this._addClass(this.menu.element, "ui-autocomplete", "ui-front"), this._on(this.menu.element, { mousedown: function (e) { e.preventDefault(), this.cancelBlur = !0, this._delay(function () { delete this.cancelBlur, this.element[0] !== t.ui.safeActiveElement(this.document[0]) && this.element.trigger("focus") }) }, menufocus: function (e, i) { var s, n; return this.isNewMenu && (this.isNewMenu = !1, e.originalEvent && /^mouse/.test(e.originalEvent.type)) ? (this.menu.blur(), this.document.one("mousemove", function () { t(e.target).trigger(e.originalEvent) }), void 0) : (n = i.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", e, { item: n }) && e.originalEvent && /^key/.test(e.originalEvent.type) && this._value(n.value), s = i.item.attr("aria-label") || n.value, s && t.trim(s).length && (this.liveRegion.children().hide(), t("<div>").text(s).appendTo(this.liveRegion)), void 0) }, menuselect: function (e, i) { var s = i.item.data("ui-autocomplete-item"), n = this.previous; this.element[0] !== t.ui.safeActiveElement(this.document[0]) && (this.element.trigger("focus"), this.previous = n, this._delay(function () { this.previous = n, this.selectedItem = s })), !1 !== this._trigger("select", e, { item: s }) && this._value(s.value), this.term = this._value(), this.close(e), this.selectedItem = s } }), this.liveRegion = t("<div>") }, _destroy: function () { clearTimeout(this.searching), this.element.removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove() }, _setOption: function (t, e) { this._super(t, e), "source" === t && this._initSource(), "appendTo" === t && this.menu.element.appendTo(this._appendTo()), "disabled" === t && e && this.xhr && this.xhr.abort() }, _isEventTargetInWidget: function (e) { var i = this.menu.element[0]; return e.target === this.element[0] || e.target === i || t.contains(i, e.target) }, _closeOnClickOutside: function (t) { this._isEventTargetInWidget(t) || this.close() }, _appendTo: function () { var e = this.options.appendTo; return e && (e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)), e && e[0] || (e = this.element.closest(".ui-front, dialog")), e.length || (e = this.document[0].body), e }, _initSource: function () { var e, i, s = this; t.isArray(this.options.source) ? (e = this.options.source, this.source = function (i, s) { s(t.ui.autocomplete.filter(e, i.term)) }) : "string" == typeof this.options.source ? (i = this.options.source, this.source = function (e, n) { s.xhr && s.xhr.abort(), s.xhr = t.ajax({ url: i, data: e, dataType: "json", success: function (t) { n(t) }, error: function () { n([]) } }) }) : this.source = this.options.source }, _searchTimeout: function (t) { clearTimeout(this.searching), this.searching = this._delay(function () { var e = this.term === this._value(), i = this.menu.element.is(":visible"), s = t.altKey || t.ctrlKey || t.metaKey || t.shiftKey; (!e || e && !i && !s) && (this.selectedItem = null, this.search(null, t)) }, this.options.delay) }, search: function (t, e) { return t = null != t ? t : this._value(), this.term = this._value(), t.length < this.options.minLength ? this.close(e) : this._trigger("search", e) !== !1 ? this._search(t) : void 0 }, _search: function (t) { this.pending++ , this._addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({ term: t }, this._response()) }, _response: function () { var e = ++this.requestIndex; return t.proxy(function (t) { e === this.requestIndex && this.__response(t), this.pending-- , this.pending || this._removeClass("ui-autocomplete-loading") }, this) }, __response: function (t) { t && (t = this._normalize(t)), this._trigger("response", null, { content: t }), !this.options.disabled && t && t.length && !this.cancelSearch ? (this._suggest(t), this._trigger("open")) : this._close() }, close: function (t) { this.cancelSearch = !0, this._close(t) }, _close: function (t) { this._off(this.document, "mousedown"), this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", t)) }, _change: function (t) { this.previous !== this._value() && this._trigger("change", t, { item: this.selectedItem }) }, _normalize: function (e) { return e.length && e[0].label && e[0].value ? e : t.map(e, function (e) { return "string" == typeof e ? { label: e, value: e } : t.extend({}, e, { label: e.label || e.value, value: e.value || e.label }) }) }, _suggest: function (e) { var i = this.menu.element.empty(); this._renderMenu(i, e), this.isNewMenu = !0, this.menu.refresh(), i.show(), this._resizeMenu(), i.position(t.extend({ of: this.element }, this.options.position)), this.options.autoFocus && this.menu.next(), this._on(this.document, { mousedown: "_closeOnClickOutside" }) }, _resizeMenu: function () { var t = this.menu.element; t.outerWidth(Math.max(t.width("").outerWidth() + 1, this.element.outerWidth())) }, _renderMenu: function (e, i) { var s = this; t.each(i, function (t, i) { s._renderItemData(e, i) }) }, _renderItemData: function (t, e) { return this._renderItem(t, e).data("ui-autocomplete-item", e) }, _renderItem: function (e, i) { return t("<li>").append(t("<div>").text(i.label)).appendTo(e) }, _move: function (t, e) { return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(t) || this.menu.isLastItem() && /^next/.test(t) ? (this.isMultiLine || this._value(this.term), this.menu.blur(), void 0) : (this.menu[t](e), void 0) : (this.search(null, e), void 0) }, widget: function () { return this.menu.element }, _value: function () { return this.valueMethod.apply(this.element, arguments) }, _keyEvent: function (t, e) { (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(t, e), e.preventDefault()) }, _isContentEditable: function (t) { if (!t.length) return !1; var e = t.prop("contentEditable"); return "inherit" === e ? this._isContentEditable(t.parent()) : "true" === e } }), t.extend(t.ui.autocomplete, { escapeRegex: function (t) { return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&") }, filter: function (e, i) { var s = RegExp(t.ui.autocomplete.escapeRegex(i), "i"); return t.grep(e, function (t) { return s.test(t.label || t.value || t) }) } }), t.widget("ui.autocomplete", t.ui.autocomplete, { options: { messages: { noResults: "No search results.", results: function (t) { return t + (t > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate." } } }, __response: function (e) { var i; this._superApply(arguments), this.options.disabled || this.cancelSearch || (i = e && e.length ? this.options.messages.results(e.length) : this.options.messages.noResults, this.liveRegion.children().hide(), t("<div>").text(i).appendTo(this.liveRegion)) } }), t.ui.autocomplete; var d = /ui-corner-([a-z]){2,6}/g; t.widget("ui.controlgroup", { version: "1.12.1", defaultElement: "<div>", options: { direction: "horizontal", disabled: null, onlyVisible: !0, items: { button: "input[type=button], input[type=submit], input[type=reset], button, a", controlgroupLabel: ".ui-controlgroup-label", checkboxradio: "input[type='checkbox'], input[type='radio']", selectmenu: "select", spinner: ".ui-spinner-input" } }, _create: function () { this._enhance() }, _enhance: function () { this.element.attr("role", "toolbar"), this.refresh() }, _destroy: function () { this._callChildMethod("destroy"), this.childWidgets.removeData("ui-controlgroup-data"), this.element.removeAttr("role"), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap() }, _initWidgets: function () { var e = this, i = []; t.each(this.options.items, function (s, n) { var o, a = {}; return n ? "controlgroupLabel" === s ? (o = e.element.find(n), o.each(function () { var e = t(this); e.children(".ui-controlgroup-label-contents").length || e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>") }), e._addClass(o, null, "ui-widget ui-widget-content ui-state-default"), i = i.concat(o.get()), void 0) : (t.fn[s] && (a = e["_" + s + "Options"] ? e["_" + s + "Options"]("middle") : { classes: {} }, e.element.find(n).each(function () { var n = t(this), o = n[s]("instance"), r = t.widget.extend({}, a); if ("button" !== s || !n.parent(".ui-spinner").length) { o || (o = n[s]()[s]("instance")), o && (r.classes = e._resolveClassesValues(r.classes, o)), n[s](r); var l = n[s]("widget"); t.data(l[0], "ui-controlgroup-data", o ? o : n[s]("instance")), i.push(l[0]) } })), void 0) : void 0 }), this.childWidgets = t(t.uniqueSort(i)), this._addClass(this.childWidgets, "ui-controlgroup-item") }, _callChildMethod: function (e) { this.childWidgets.each(function () { var i = t(this), s = i.data("ui-controlgroup-data"); s && s[e] && s[e]() }) }, _updateCornerClass: function (t, e) { var i = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all", s = this._buildSimpleOptions(e, "label").classes.label; this._removeClass(t, null, i), this._addClass(t, null, s) }, _buildSimpleOptions: function (t, e) { var i = "vertical" === this.options.direction, s = { classes: {} }; return s.classes[e] = { middle: "", first: "ui-corner-" + (i ? "top" : "left"), last: "ui-corner-" + (i ? "bottom" : "right"), only: "ui-corner-all" }[t], s }, _spinnerOptions: function (t) { var e = this._buildSimpleOptions(t, "ui-spinner"); return e.classes["ui-spinner-up"] = "", e.classes["ui-spinner-down"] = "", e }, _buttonOptions: function (t) { return this._buildSimpleOptions(t, "ui-button") }, _checkboxradioOptions: function (t) { return this._buildSimpleOptions(t, "ui-checkboxradio-label") }, _selectmenuOptions: function (t) { var e = "vertical" === this.options.direction; return { width: e ? "auto" : !1, classes: { middle: { "ui-selectmenu-button-open": "", "ui-selectmenu-button-closed": "" }, first: { "ui-selectmenu-button-open": "ui-corner-" + (e ? "top" : "tl"), "ui-selectmenu-button-closed": "ui-corner-" + (e ? "top" : "left") }, last: { "ui-selectmenu-button-open": e ? "" : "ui-corner-tr", "ui-selectmenu-button-closed": "ui-corner-" + (e ? "bottom" : "right") }, only: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" } }[t] } }, _resolveClassesValues: function (e, i) { var s = {}; return t.each(e, function (n) { var o = i.options.classes[n] || ""; o = t.trim(o.replace(d, "")), s[n] = (o + " " + e[n]).replace(/\s+/g, " ") }), s }, _setOption: function (t, e) { return "direction" === t && this._removeClass("ui-controlgroup-" + this.options.direction), this._super(t, e), "disabled" === t ? (this._callChildMethod(e ? "disable" : "enable"), void 0) : (this.refresh(), void 0) }, refresh: function () { var e, i = this; this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction), "horizontal" === this.options.direction && this._addClass(null, "ui-helper-clearfix"), this._initWidgets(), e = this.childWidgets, this.options.onlyVisible && (e = e.filter(":visible")), e.length && (t.each(["first", "last"], function (t, s) { var n = e[s]().data("ui-controlgroup-data"); if (n && i["_" + n.widgetName + "Options"]) { var o = i["_" + n.widgetName + "Options"](1 === e.length ? "only" : s); o.classes = i._resolveClassesValues(o.classes, n), n.element[n.widgetName](o) } else i._updateCornerClass(e[s](), s) }), this._callChildMethod("refresh")) } }), t.widget("ui.checkboxradio", [t.ui.formResetMixin, {
        version: "1.12.1", options: { disabled: null, label: null, icon: !0, classes: { "ui-checkboxradio-label": "ui-corner-all", "ui-checkboxradio-icon": "ui-corner-all" } }, _getCreateOptions: function () { var e, i, s = this, n = this._super() || {}; return this._readType(), i = this.element.labels(), this.label = t(i[i.length - 1]), this.label.length || t.error("No label found for checkboxradio widget"), this.originalLabel = "", this.label.contents().not(this.element[0]).each(function () { s.originalLabel += 3 === this.nodeType ? t(this).text() : this.outerHTML }), this.originalLabel && (n.label = this.originalLabel), e = this.element[0].disabled, null != e && (n.disabled = e), n }, _create: function () { var t = this.element[0].checked; this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), this._setOption("disabled", this.options.disabled), this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"), this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget"), "radio" === this.type && this._addClass(this.label, "ui-checkboxradio-radio-label"), this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), this._enhance(), t && (this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active"), this.icon && this._addClass(this.icon, null, "ui-state-hover")), this._on({ change: "_toggleClasses", focus: function () { this._addClass(this.label, null, "ui-state-focus ui-visual-focus") }, blur: function () { this._removeClass(this.label, null, "ui-state-focus ui-visual-focus") } }) }, _readType: function () { var e = this.element[0].nodeName.toLowerCase(); this.type = this.element[0].type, "input" === e && /radio|checkbox/.test(this.type) || t.error("Can't create checkboxradio on element.nodeName=" + e + " and element.type=" + this.type) }, _enhance: function () { this._updateIcon(this.element[0].checked) }, widget: function () { return this.label }, _getRadioGroup: function () { var e, i = this.element[0].name, s = "input[name='" + t.ui.escapeSelector(i) + "']"; return i ? (e = this.form.length ? t(this.form[0].elements).filter(s) : t(s).filter(function () { return 0 === t(this).form().length }), e.not(this.element)) : t([]) }, _toggleClasses: function () { var e = this.element[0].checked; this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", e), this.options.icon && "checkbox" === this.type && this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", e)._toggleClass(this.icon, null, "ui-icon-blank", !e), "radio" === this.type && this._getRadioGroup().each(function () { var e = t(this).checkboxradio("instance"); e && e._removeClass(e.label, "ui-checkboxradio-checked", "ui-state-active") }) }, _destroy: function () { this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove()) }, _setOption: function (t, e) { return "label" !== t || e ? (this._super(t, e), "disabled" === t ? (this._toggleClass(this.label, null, "ui-state-disabled", e), this.element[0].disabled = e, void 0) : (this.refresh(), void 0)) : void 0 }, _updateIcon: function (e) {
            var i = "ui-icon ui-icon-background "; this.options.icon ? (this.icon || (this.icon = t("<span>"), this.iconSpace = t("<span> </span>"), this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")), "checkbox" === this.type ? (i += e ? "ui-icon-check ui-state-checked" : "ui-icon-blank", this._removeClass(this.icon, null, e ? "ui-icon-blank" : "ui-icon-check")) : i += "ui-icon-blank", this._addClass(this.icon, "ui-checkboxradio-icon", i), e || this._removeClass(this.icon, null, "ui-icon-check ui-state-checked"), this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), this.iconSpace.remove(), delete this.icon)
        }, _updateLabel: function () { var t = this.label.contents().not(this.element[0]); this.icon && (t = t.not(this.icon[0])), this.iconSpace && (t = t.not(this.iconSpace[0])), t.remove(), this.label.append(this.options.label) }, refresh: function () { var t = this.element[0].checked, e = this.element[0].disabled; this._updateIcon(t), this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", t), null !== this.options.label && this._updateLabel(), e !== this.options.disabled && this._setOptions({ disabled: e }) }
    }]), t.ui.checkboxradio, t.widget("ui.button", { version: "1.12.1", defaultElement: "<button>", options: { classes: { "ui-button": "ui-corner-all" }, disabled: null, icon: null, iconPosition: "beginning", label: null, showLabel: !0 }, _getCreateOptions: function () { var t, e = this._super() || {}; return this.isInput = this.element.is("input"), t = this.element[0].disabled, null != t && (e.disabled = t), this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (e.label = this.originalLabel), e }, _create: function () { !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1), this.hasTitle = !!this.element.attr("title"), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), this._addClass("ui-button", "ui-widget"), this._setOption("disabled", this.options.disabled), this._enhance(), this.element.is("a") && this._on({ keyup: function (e) { e.keyCode === t.ui.keyCode.SPACE && (e.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger("click")) } }) }, _enhance: function () { this.element.is("button") || this.element.attr("role", "button"), this.options.icon && (this._updateIcon("icon", this.options.icon), this._updateTooltip()) }, _updateTooltip: function () { this.title = this.element.attr("title"), this.options.showLabel || this.title || this.element.attr("title", this.options.label) }, _updateIcon: function (e, i) { var s = "iconPosition" !== e, n = s ? this.options.iconPosition : i, o = "top" === n || "bottom" === n; this.icon ? s && this._removeClass(this.icon, null, this.options.icon) : (this.icon = t("<span>"), this._addClass(this.icon, "ui-button-icon", "ui-icon"), this.options.showLabel || this._addClass("ui-button-icon-only")), s && this._addClass(this.icon, null, i), this._attachIcon(n), o ? (this._addClass(this.icon, null, "ui-widget-icon-block"), this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = t("<span> </span>"), this._addClass(this.iconSpace, "ui-button-icon-space")), this._removeClass(this.icon, null, "ui-wiget-icon-block"), this._attachIconSpace(n)) }, _destroy: function () { this.element.removeAttr("role"), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), this.hasTitle || this.element.removeAttr("title") }, _attachIconSpace: function (t) { this.icon[/^(?:end|bottom)/.test(t) ? "before" : "after"](this.iconSpace) }, _attachIcon: function (t) { this.element[/^(?:end|bottom)/.test(t) ? "append" : "prepend"](this.icon) }, _setOptions: function (t) { var e = void 0 === t.showLabel ? this.options.showLabel : t.showLabel, i = void 0 === t.icon ? this.options.icon : t.icon; e || i || (t.showLabel = !0), this._super(t) }, _setOption: function (t, e) { "icon" === t && (e ? this._updateIcon(t, e) : this.icon && (this.icon.remove(), this.iconSpace && this.iconSpace.remove())), "iconPosition" === t && this._updateIcon(t, e), "showLabel" === t && (this._toggleClass("ui-button-icon-only", null, !e), this._updateTooltip()), "label" === t && (this.isInput ? this.element.val(e) : (this.element.html(e), this.icon && (this._attachIcon(this.options.iconPosition), this._attachIconSpace(this.options.iconPosition)))), this._super(t, e), "disabled" === t && (this._toggleClass(null, "ui-state-disabled", e), this.element[0].disabled = e, e && this.element.blur()) }, refresh: function () { var t = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled"); t !== this.options.disabled && this._setOptions({ disabled: t }), this._updateTooltip() } }), t.uiBackCompat !== !1 && (t.widget("ui.button", t.ui.button, { options: { text: !0, icons: { primary: null, secondary: null } }, _create: function () { this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, this.options.iconPosition = "end"), this._super() }, _setOption: function (t, e) { return "text" === t ? (this._super("showLabel", e), void 0) : ("showLabel" === t && (this.options.text = e), "icon" === t && (this.options.icons.primary = e), "icons" === t && (e.primary ? (this._super("icon", e.primary), this._super("iconPosition", "beginning")) : e.secondary && (this._super("icon", e.secondary), this._super("iconPosition", "end"))), this._superApply(arguments), void 0) } }), t.fn.button = function (e) { return function () { return !this.length || this.length && "INPUT" !== this[0].tagName || this.length && "INPUT" === this[0].tagName && "checkbox" !== this.attr("type") && "radio" !== this.attr("type") ? e.apply(this, arguments) : (t.ui.checkboxradio || t.error("Checkboxradio widget missing"), 0 === arguments.length ? this.checkboxradio({ icon: !1 }) : this.checkboxradio.apply(this, arguments)) } }(t.fn.button), t.fn.buttonset = function () { return t.ui.controlgroup || t.error("Controlgroup widget missing"), "option" === arguments[0] && "items" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]]) : "option" === arguments[0] && "items" === arguments[1] ? this.controlgroup.apply(this, [arguments[0], "items.button"]) : ("object" == typeof arguments[0] && arguments[0].items && (arguments[0].items = { button: arguments[0].items }), this.controlgroup.apply(this, arguments)) }), t.ui.button, t.extend(t.ui, { datepicker: { version: "1.12.1" } }); var p; t.extend(s.prototype, {
        markerClassName: "hasDatepicker", maxRows: 4, _widgetDatepicker: function () { return this.dpDiv }, setDefaults: function (t) { return a(this._defaults, t || {}), this }, _attachDatepicker: function (e, i) { var s, n, o; s = e.nodeName.toLowerCase(), n = "div" === s || "span" === s, e.id || (this.uuid += 1, e.id = "dp" + this.uuid), o = this._newInst(t(e), n), o.settings = t.extend({}, i || {}), "input" === s ? this._connectDatepicker(e, o) : n && this._inlineDatepicker(e, o) }, _newInst: function (e, i) { var s = e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); return { id: s, input: e, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: i, dpDiv: i ? n(t("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv } }, _connectDatepicker: function (e, i) { var s = t(e); i.append = t([]), i.trigger = t([]), s.hasClass(this.markerClassName) || (this._attachments(s, i), s.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp), this._autoSize(i), t.data(e, "datepicker", i), i.settings.disabled && this._disableDatepicker(e)) }, _attachments: function (e, i) { var s, n, o, a = this._get(i, "appendText"), r = this._get(i, "isRTL"); i.append && i.append.remove(), a && (i.append = t("<span class='" + this._appendClass + "'>" + a + "</span>"), e[r ? "before" : "after"](i.append)), e.off("focus", this._showDatepicker), i.trigger && i.trigger.remove(), s = this._get(i, "showOn"), ("focus" === s || "both" === s) && e.on("focus", this._showDatepicker), ("button" === s || "both" === s) && (n = this._get(i, "buttonText"), o = this._get(i, "buttonImage"), i.trigger = t(this._get(i, "buttonImageOnly") ? t("<img/>").addClass(this._triggerClass).attr({ src: o, alt: n, title: n }) : t("<button type='button'></button>").addClass(this._triggerClass).html(o ? t("<img/>").attr({ src: o, alt: n, title: n }) : n)), e[r ? "before" : "after"](i.trigger), i.trigger.on("click", function () { return t.datepicker._datepickerShowing && t.datepicker._lastInput === e[0] ? t.datepicker._hideDatepicker() : t.datepicker._datepickerShowing && t.datepicker._lastInput !== e[0] ? (t.datepicker._hideDatepicker(), t.datepicker._showDatepicker(e[0])) : t.datepicker._showDatepicker(e[0]), !1 })) }, _autoSize: function (t) { if (this._get(t, "autoSize") && !t.inline) { var e, i, s, n, o = new Date(2009, 11, 20), a = this._get(t, "dateFormat"); a.match(/[DM]/) && (e = function (t) { for (i = 0, s = 0, n = 0; t.length > n; n++)t[n].length > i && (i = t[n].length, s = n); return s }, o.setMonth(e(this._get(t, a.match(/MM/) ? "monthNames" : "monthNamesShort"))), o.setDate(e(this._get(t, a.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - o.getDay())), t.input.attr("size", this._formatDate(t, o).length) } }, _inlineDatepicker: function (e, i) { var s = t(e); s.hasClass(this.markerClassName) || (s.addClass(this.markerClassName).append(i.dpDiv), t.data(e, "datepicker", i), this._setDate(i, this._getDefaultDate(i), !0), this._updateDatepicker(i), this._updateAlternate(i), i.settings.disabled && this._disableDatepicker(e), i.dpDiv.css("display", "block")) }, _dialogDatepicker: function (e, i, s, n, o) { var r, l, h, c, u, d = this._dialogInst; return d || (this.uuid += 1, r = "dp" + this.uuid, this._dialogInput = t("<input type='text' id='" + r + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.on("keydown", this._doKeyDown), t("body").append(this._dialogInput), d = this._dialogInst = this._newInst(this._dialogInput, !1), d.settings = {}, t.data(this._dialogInput[0], "datepicker", d)), a(d.settings, n || {}), i = i && i.constructor === Date ? this._formatDate(d, i) : i, this._dialogInput.val(i), this._pos = o ? o.length ? o : [o.pageX, o.pageY] : null, this._pos || (l = document.documentElement.clientWidth, h = document.documentElement.clientHeight, c = document.documentElement.scrollLeft || document.body.scrollLeft, u = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [l / 2 - 100 + c, h / 2 - 150 + u]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), d.settings.onSelect = s, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), t.blockUI && t.blockUI(this.dpDiv), t.data(this._dialogInput[0], "datepicker", d), this }, _destroyDatepicker: function (e) { var i, s = t(e), n = t.data(e, "datepicker"); s.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(), t.removeData(e, "datepicker"), "input" === i ? (n.append.remove(), n.trigger.remove(), s.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp)) : ("div" === i || "span" === i) && s.removeClass(this.markerClassName).empty(), p === n && (p = null)) }, _enableDatepicker: function (e) { var i, s, n = t(e), o = t.data(e, "datepicker"); n.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(), "input" === i ? (e.disabled = !1, o.trigger.filter("button").each(function () { this.disabled = !1 }).end().filter("img").css({ opacity: "1.0", cursor: "" })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass), s.children().removeClass("ui-state-disabled"), s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = t.map(this._disabledInputs, function (t) { return t === e ? null : t })) }, _disableDatepicker: function (e) { var i, s, n = t(e), o = t.data(e, "datepicker"); n.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(), "input" === i ? (e.disabled = !0, o.trigger.filter("button").each(function () { this.disabled = !0 }).end().filter("img").css({ opacity: "0.5", cursor: "default" })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass), s.children().addClass("ui-state-disabled"), s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = t.map(this._disabledInputs, function (t) { return t === e ? null : t }), this._disabledInputs[this._disabledInputs.length] = e) }, _isDisabledDatepicker: function (t) { if (!t) return !1; for (var e = 0; this._disabledInputs.length > e; e++)if (this._disabledInputs[e] === t) return !0; return !1 }, _getInst: function (e) { try { return t.data(e, "datepicker") } catch (i) { throw "Missing instance data for this datepicker" } }, _optionDatepicker: function (e, i, s) { var n, o, r, l, h = this._getInst(e); return 2 === arguments.length && "string" == typeof i ? "defaults" === i ? t.extend({}, t.datepicker._defaults) : h ? "all" === i ? t.extend({}, h.settings) : this._get(h, i) : null : (n = i || {}, "string" == typeof i && (n = {}, n[i] = s), h && (this._curInst === h && this._hideDatepicker(), o = this._getDateDatepicker(e, !0), r = this._getMinMaxDate(h, "min"), l = this._getMinMaxDate(h, "max"), a(h.settings, n), null !== r && void 0 !== n.dateFormat && void 0 === n.minDate && (h.settings.minDate = this._formatDate(h, r)), null !== l && void 0 !== n.dateFormat && void 0 === n.maxDate && (h.settings.maxDate = this._formatDate(h, l)), "disabled" in n && (n.disabled ? this._disableDatepicker(e) : this._enableDatepicker(e)), this._attachments(t(e), h), this._autoSize(h), this._setDate(h, o), this._updateAlternate(h), this._updateDatepicker(h)), void 0) }, _changeDatepicker: function (t, e, i) { this._optionDatepicker(t, e, i) }, _refreshDatepicker: function (t) { var e = this._getInst(t); e && this._updateDatepicker(e) }, _setDateDatepicker: function (t, e) { var i = this._getInst(t); i && (this._setDate(i, e), this._updateDatepicker(i), this._updateAlternate(i)) }, _getDateDatepicker: function (t, e) { var i = this._getInst(t); return i && !i.inline && this._setDateFromField(i, e), i ? this._getDate(i) : null }, _doKeyDown: function (e) { var i, s, n, o = t.datepicker._getInst(e.target), a = !0, r = o.dpDiv.is(".ui-datepicker-rtl"); if (o._keyEvent = !0, t.datepicker._datepickerShowing) switch (e.keyCode) { case 9: t.datepicker._hideDatepicker(), a = !1; break; case 13: return n = t("td." + t.datepicker._dayOverClass + ":not(." + t.datepicker._currentClass + ")", o.dpDiv), n[0] && t.datepicker._selectDay(e.target, o.selectedMonth, o.selectedYear, n[0]), i = t.datepicker._get(o, "onSelect"), i ? (s = t.datepicker._formatDate(o), i.apply(o.input ? o.input[0] : null, [s, o])) : t.datepicker._hideDatepicker(), !1; case 27: t.datepicker._hideDatepicker(); break; case 33: t.datepicker._adjustDate(e.target, e.ctrlKey ? -t.datepicker._get(o, "stepBigMonths") : -t.datepicker._get(o, "stepMonths"), "M"); break; case 34: t.datepicker._adjustDate(e.target, e.ctrlKey ? +t.datepicker._get(o, "stepBigMonths") : +t.datepicker._get(o, "stepMonths"), "M"); break; case 35: (e.ctrlKey || e.metaKey) && t.datepicker._clearDate(e.target), a = e.ctrlKey || e.metaKey; break; case 36: (e.ctrlKey || e.metaKey) && t.datepicker._gotoToday(e.target), a = e.ctrlKey || e.metaKey; break; case 37: (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, r ? 1 : -1, "D"), a = e.ctrlKey || e.metaKey, e.originalEvent.altKey && t.datepicker._adjustDate(e.target, e.ctrlKey ? -t.datepicker._get(o, "stepBigMonths") : -t.datepicker._get(o, "stepMonths"), "M"); break; case 38: (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, -7, "D"), a = e.ctrlKey || e.metaKey; break; case 39: (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, r ? -1 : 1, "D"), a = e.ctrlKey || e.metaKey, e.originalEvent.altKey && t.datepicker._adjustDate(e.target, e.ctrlKey ? +t.datepicker._get(o, "stepBigMonths") : +t.datepicker._get(o, "stepMonths"), "M"); break; case 40: (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, 7, "D"), a = e.ctrlKey || e.metaKey; break; default: a = !1 } else 36 === e.keyCode && e.ctrlKey ? t.datepicker._showDatepicker(this) : a = !1; a && (e.preventDefault(), e.stopPropagation()) }, _doKeyPress: function (e) { var i, s, n = t.datepicker._getInst(e.target); return t.datepicker._get(n, "constrainInput") ? (i = t.datepicker._possibleChars(t.datepicker._get(n, "dateFormat")), s = String.fromCharCode(null == e.charCode ? e.keyCode : e.charCode), e.ctrlKey || e.metaKey || " " > s || !i || i.indexOf(s) > -1) : void 0 }, _doKeyUp: function (e) { var i, s = t.datepicker._getInst(e.target); if (s.input.val() !== s.lastVal) try { i = t.datepicker.parseDate(t.datepicker._get(s, "dateFormat"), s.input ? s.input.val() : null, t.datepicker._getFormatConfig(s)), i && (t.datepicker._setDateFromField(s), t.datepicker._updateAlternate(s), t.datepicker._updateDatepicker(s)) } catch (n) { } return !0 }, _showDatepicker: function (e) { if (e = e.target || e, "input" !== e.nodeName.toLowerCase() && (e = t("input", e.parentNode)[0]), !t.datepicker._isDisabledDatepicker(e) && t.datepicker._lastInput !== e) { var s, n, o, r, l, h, c; s = t.datepicker._getInst(e), t.datepicker._curInst && t.datepicker._curInst !== s && (t.datepicker._curInst.dpDiv.stop(!0, !0), s && t.datepicker._datepickerShowing && t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])), n = t.datepicker._get(s, "beforeShow"), o = n ? n.apply(e, [e, s]) : {}, o !== !1 && (a(s.settings, o), s.lastVal = null, t.datepicker._lastInput = e, t.datepicker._setDateFromField(s), t.datepicker._inDialog && (e.value = ""), t.datepicker._pos || (t.datepicker._pos = t.datepicker._findPos(e), t.datepicker._pos[1] += e.offsetHeight), r = !1, t(e).parents().each(function () { return r |= "fixed" === t(this).css("position"), !r }), l = { left: t.datepicker._pos[0], top: t.datepicker._pos[1] }, t.datepicker._pos = null, s.dpDiv.empty(), s.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }), t.datepicker._updateDatepicker(s), l = t.datepicker._checkOffset(s, l, r), s.dpDiv.css({ position: t.datepicker._inDialog && t.blockUI ? "static" : r ? "fixed" : "absolute", display: "none", left: l.left + "px", top: l.top + "px" }), s.inline || (h = t.datepicker._get(s, "showAnim"), c = t.datepicker._get(s, "duration"), s.dpDiv.css("z-index", i(t(e)) + 1), t.datepicker._datepickerShowing = !0, t.effects && t.effects.effect[h] ? s.dpDiv.show(h, t.datepicker._get(s, "showOptions"), c) : s.dpDiv[h || "show"](h ? c : null), t.datepicker._shouldFocusInput(s) && s.input.trigger("focus"), t.datepicker._curInst = s)) } }, _updateDatepicker: function (e) { this.maxRows = 4, p = e, e.dpDiv.empty().append(this._generateHTML(e)), this._attachHandlers(e); var i, s = this._getNumberOfMonths(e), n = s[1], a = 17, r = e.dpDiv.find("." + this._dayOverClass + " a"); r.length > 0 && o.apply(r.get(0)), e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), n > 1 && e.dpDiv.addClass("ui-datepicker-multi-" + n).css("width", a * n + "em"), e.dpDiv[(1 !== s[0] || 1 !== s[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), e === t.datepicker._curInst && t.datepicker._datepickerShowing && t.datepicker._shouldFocusInput(e) && e.input.trigger("focus"), e.yearshtml && (i = e.yearshtml, setTimeout(function () { i === e.yearshtml && e.yearshtml && e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml), i = e.yearshtml = null }, 0)) }, _shouldFocusInput: function (t) { return t.input && t.input.is(":visible") && !t.input.is(":disabled") && !t.input.is(":focus") }, _checkOffset: function (e, i, s) { var n = e.dpDiv.outerWidth(), o = e.dpDiv.outerHeight(), a = e.input ? e.input.outerWidth() : 0, r = e.input ? e.input.outerHeight() : 0, l = document.documentElement.clientWidth + (s ? 0 : t(document).scrollLeft()), h = document.documentElement.clientHeight + (s ? 0 : t(document).scrollTop()); return i.left -= this._get(e, "isRTL") ? n - a : 0, i.left -= s && i.left === e.input.offset().left ? t(document).scrollLeft() : 0, i.top -= s && i.top === e.input.offset().top + r ? t(document).scrollTop() : 0, i.left -= Math.min(i.left, i.left + n > l && l > n ? Math.abs(i.left + n - l) : 0), i.top -= Math.min(i.top, i.top + o > h && h > o ? Math.abs(o + r) : 0), i }, _findPos: function (e) { for (var i, s = this._getInst(e), n = this._get(s, "isRTL"); e && ("hidden" === e.type || 1 !== e.nodeType || t.expr.filters.hidden(e));)e = e[n ? "previousSibling" : "nextSibling"]; return i = t(e).offset(), [i.left, i.top] }, _hideDatepicker: function (e) { var i, s, n, o, a = this._curInst; !a || e && a !== t.data(e, "datepicker") || this._datepickerShowing && (i = this._get(a, "showAnim"), s = this._get(a, "duration"), n = function () { t.datepicker._tidyDialog(a) }, t.effects && (t.effects.effect[i] || t.effects[i]) ? a.dpDiv.hide(i, t.datepicker._get(a, "showOptions"), s, n) : a.dpDiv["slideDown" === i ? "slideUp" : "fadeIn" === i ? "fadeOut" : "hide"](i ? s : null, n), i || n(), this._datepickerShowing = !1, o = this._get(a, "onClose"), o && o.apply(a.input ? a.input[0] : null, [a.input ? a.input.val() : "", a]), this._lastInput = null, this._inDialog && (this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }), t.blockUI && (t.unblockUI(), t("body").append(this.dpDiv))), this._inDialog = !1) }, _tidyDialog: function (t) { t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar") }, _checkExternalClick: function (e) { if (t.datepicker._curInst) { var i = t(e.target), s = t.datepicker._getInst(i[0]); (i[0].id !== t.datepicker._mainDivId && 0 === i.parents("#" + t.datepicker._mainDivId).length && !i.hasClass(t.datepicker.markerClassName) && !i.closest("." + t.datepicker._triggerClass).length && t.datepicker._datepickerShowing && (!t.datepicker._inDialog || !t.blockUI) || i.hasClass(t.datepicker.markerClassName) && t.datepicker._curInst !== s) && t.datepicker._hideDatepicker() } }, _adjustDate: function (e, i, s) { var n = t(e), o = this._getInst(n[0]); this._isDisabledDatepicker(n[0]) || (this._adjustInstDate(o, i + ("M" === s ? this._get(o, "showCurrentAtPos") : 0), s), this._updateDatepicker(o)) }, _gotoToday: function (e) { var i, s = t(e), n = this._getInst(s[0]); this._get(n, "gotoCurrent") && n.currentDay ? (n.selectedDay = n.currentDay, n.drawMonth = n.selectedMonth = n.currentMonth, n.drawYear = n.selectedYear = n.currentYear) : (i = new Date, n.selectedDay = i.getDate(), n.drawMonth = n.selectedMonth = i.getMonth(), n.drawYear = n.selectedYear = i.getFullYear()), this._notifyChange(n), this._adjustDate(s) }, _selectMonthYear: function (e, i, s) { var n = t(e), o = this._getInst(n[0]); o["selected" + ("M" === s ? "Month" : "Year")] = o["draw" + ("M" === s ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10), this._notifyChange(o), this._adjustDate(n) }, _selectDay: function (e, i, s, n) { var o, a = t(e); t(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(a[0]) || (o = this._getInst(a[0]), o.selectedDay = o.currentDay = t("a", n).html(), o.selectedMonth = o.currentMonth = i, o.selectedYear = o.currentYear = s, this._selectDate(e, this._formatDate(o, o.currentDay, o.currentMonth, o.currentYear))) }, _clearDate: function (e) { var i = t(e); this._selectDate(i, "") }, _selectDate: function (e, i) { var s, n = t(e), o = this._getInst(n[0]); i = null != i ? i : this._formatDate(o), o.input && o.input.val(i), this._updateAlternate(o), s = this._get(o, "onSelect"), s ? s.apply(o.input ? o.input[0] : null, [i, o]) : o.input && o.input.trigger("change"), o.inline ? this._updateDatepicker(o) : (this._hideDatepicker(), this._lastInput = o.input[0], "object" != typeof o.input[0] && o.input.trigger("focus"), this._lastInput = null) }, _updateAlternate: function (e) { var i, s, n, o = this._get(e, "altField"); o && (i = this._get(e, "altFormat") || this._get(e, "dateFormat"), s = this._getDate(e), n = this.formatDate(i, s, this._getFormatConfig(e)), t(o).val(n)) }, noWeekends: function (t) { var e = t.getDay(); return [e > 0 && 6 > e, ""] }, iso8601Week: function (t) { var e, i = new Date(t.getTime()); return i.setDate(i.getDate() + 4 - (i.getDay() || 7)), e = i.getTime(), i.setMonth(0), i.setDate(1), Math.floor(Math.round((e - i) / 864e5) / 7) + 1 }, parseDate: function (e, i, s) { if (null == e || null == i) throw "Invalid arguments"; if (i = "object" == typeof i ? "" + i : i + "", "" === i) return null; var n, o, a, r, l = 0, h = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff, c = "string" != typeof h ? h : (new Date).getFullYear() % 100 + parseInt(h, 10), u = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort, d = (s ? s.dayNames : null) || this._defaults.dayNames, p = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort, f = (s ? s.monthNames : null) || this._defaults.monthNames, g = -1, m = -1, _ = -1, v = -1, b = !1, y = function (t) { var i = e.length > n + 1 && e.charAt(n + 1) === t; return i && n++ , i }, w = function (t) { var e = y(t), s = "@" === t ? 14 : "!" === t ? 20 : "y" === t && e ? 4 : "o" === t ? 3 : 2, n = "y" === t ? s : 1, o = RegExp("^\\d{" + n + "," + s + "}"), a = i.substring(l).match(o); if (!a) throw "Missing number at position " + l; return l += a[0].length, parseInt(a[0], 10) }, k = function (e, s, n) { var o = -1, a = t.map(y(e) ? n : s, function (t, e) { return [[e, t]] }).sort(function (t, e) { return -(t[1].length - e[1].length) }); if (t.each(a, function (t, e) { var s = e[1]; return i.substr(l, s.length).toLowerCase() === s.toLowerCase() ? (o = e[0], l += s.length, !1) : void 0 }), -1 !== o) return o + 1; throw "Unknown name at position " + l }, x = function () { if (i.charAt(l) !== e.charAt(n)) throw "Unexpected literal at position " + l; l++ }; for (n = 0; e.length > n; n++)if (b) "'" !== e.charAt(n) || y("'") ? x() : b = !1; else switch (e.charAt(n)) { case "d": _ = w("d"); break; case "D": k("D", u, d); break; case "o": v = w("o"); break; case "m": m = w("m"); break; case "M": m = k("M", p, f); break; case "y": g = w("y"); break; case "@": r = new Date(w("@")), g = r.getFullYear(), m = r.getMonth() + 1, _ = r.getDate(); break; case "!": r = new Date((w("!") - this._ticksTo1970) / 1e4), g = r.getFullYear(), m = r.getMonth() + 1, _ = r.getDate(); break; case "'": y("'") ? x() : b = !0; break; default: x() }if (i.length > l && (a = i.substr(l), !/^\s+/.test(a))) throw "Extra/unparsed characters found in date: " + a; if (-1 === g ? g = (new Date).getFullYear() : 100 > g && (g += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (c >= g ? 0 : -100)), v > -1) for (m = 1, _ = v; ;) { if (o = this._getDaysInMonth(g, m - 1), o >= _) break; m++ , _ -= o } if (r = this._daylightSavingAdjust(new Date(g, m - 1, _)), r.getFullYear() !== g || r.getMonth() + 1 !== m || r.getDate() !== _) throw "Invalid date"; return r }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: 1e7 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)), formatDate: function (t, e, i) { if (!e) return ""; var s, n = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort, o = (i ? i.dayNames : null) || this._defaults.dayNames, a = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort, r = (i ? i.monthNames : null) || this._defaults.monthNames, l = function (e) { var i = t.length > s + 1 && t.charAt(s + 1) === e; return i && s++ , i }, h = function (t, e, i) { var s = "" + e; if (l(t)) for (; i > s.length;)s = "0" + s; return s }, c = function (t, e, i, s) { return l(t) ? s[e] : i[e] }, u = "", d = !1; if (e) for (s = 0; t.length > s; s++)if (d) "'" !== t.charAt(s) || l("'") ? u += t.charAt(s) : d = !1; else switch (t.charAt(s)) { case "d": u += h("d", e.getDate(), 2); break; case "D": u += c("D", e.getDay(), n, o); break; case "o": u += h("o", Math.round((new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() - new Date(e.getFullYear(), 0, 0).getTime()) / 864e5), 3); break; case "m": u += h("m", e.getMonth() + 1, 2); break; case "M": u += c("M", e.getMonth(), a, r); break; case "y": u += l("y") ? e.getFullYear() : (10 > e.getFullYear() % 100 ? "0" : "") + e.getFullYear() % 100; break; case "@": u += e.getTime(); break; case "!": u += 1e4 * e.getTime() + this._ticksTo1970; break; case "'": l("'") ? u += "'" : d = !0; break; default: u += t.charAt(s) }return u }, _possibleChars: function (t) { var e, i = "", s = !1, n = function (i) { var s = t.length > e + 1 && t.charAt(e + 1) === i; return s && e++ , s }; for (e = 0; t.length > e; e++)if (s) "'" !== t.charAt(e) || n("'") ? i += t.charAt(e) : s = !1; else switch (t.charAt(e)) { case "d": case "m": case "y": case "@": i += "0123456789"; break; case "D": case "M": return null; case "'": n("'") ? i += "'" : s = !0; break; default: i += t.charAt(e) }return i }, _get: function (t, e) { return void 0 !== t.settings[e] ? t.settings[e] : this._defaults[e] }, _setDateFromField: function (t, e) { if (t.input.val() !== t.lastVal) { var i = this._get(t, "dateFormat"), s = t.lastVal = t.input ? t.input.val() : null, n = this._getDefaultDate(t), o = n, a = this._getFormatConfig(t); try { o = this.parseDate(i, s, a) || n } catch (r) { s = e ? "" : s } t.selectedDay = o.getDate(), t.drawMonth = t.selectedMonth = o.getMonth(), t.drawYear = t.selectedYear = o.getFullYear(), t.currentDay = s ? o.getDate() : 0, t.currentMonth = s ? o.getMonth() : 0, t.currentYear = s ? o.getFullYear() : 0, this._adjustInstDate(t) } }, _getDefaultDate: function (t) { return this._restrictMinMax(t, this._determineDate(t, this._get(t, "defaultDate"), new Date)) }, _determineDate: function (e, i, s) { var n = function (t) { var e = new Date; return e.setDate(e.getDate() + t), e }, o = function (i) { try { return t.datepicker.parseDate(t.datepicker._get(e, "dateFormat"), i, t.datepicker._getFormatConfig(e)) } catch (s) { } for (var n = (i.toLowerCase().match(/^c/) ? t.datepicker._getDate(e) : null) || new Date, o = n.getFullYear(), a = n.getMonth(), r = n.getDate(), l = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, h = l.exec(i); h;) { switch (h[2] || "d") { case "d": case "D": r += parseInt(h[1], 10); break; case "w": case "W": r += 7 * parseInt(h[1], 10); break; case "m": case "M": a += parseInt(h[1], 10), r = Math.min(r, t.datepicker._getDaysInMonth(o, a)); break; case "y": case "Y": o += parseInt(h[1], 10), r = Math.min(r, t.datepicker._getDaysInMonth(o, a)) }h = l.exec(i) } return new Date(o, a, r) }, a = null == i || "" === i ? s : "string" == typeof i ? o(i) : "number" == typeof i ? isNaN(i) ? s : n(i) : new Date(i.getTime()); return a = a && "Invalid Date" == "" + a ? s : a, a && (a.setHours(0), a.setMinutes(0), a.setSeconds(0), a.setMilliseconds(0)), this._daylightSavingAdjust(a) }, _daylightSavingAdjust: function (t) { return t ? (t.setHours(t.getHours() > 12 ? t.getHours() + 2 : 0), t) : null }, _setDate: function (t, e, i) { var s = !e, n = t.selectedMonth, o = t.selectedYear, a = this._restrictMinMax(t, this._determineDate(t, e, new Date)); t.selectedDay = t.currentDay = a.getDate(), t.drawMonth = t.selectedMonth = t.currentMonth = a.getMonth(), t.drawYear = t.selectedYear = t.currentYear = a.getFullYear(), n === t.selectedMonth && o === t.selectedYear || i || this._notifyChange(t), this._adjustInstDate(t), t.input && t.input.val(s ? "" : this._formatDate(t)) }, _getDate: function (t) { var e = !t.currentYear || t.input && "" === t.input.val() ? null : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)); return e }, _attachHandlers: function (e) { var i = this._get(e, "stepMonths"), s = "#" + e.id.replace(/\\\\/g, "\\"); e.dpDiv.find("[data-handler]").map(function () { var e = { prev: function () { t.datepicker._adjustDate(s, -i, "M") }, next: function () { t.datepicker._adjustDate(s, +i, "M") }, hide: function () { t.datepicker._hideDatepicker() }, today: function () { t.datepicker._gotoToday(s) }, selectDay: function () { return t.datepicker._selectDay(s, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1 }, selectMonth: function () { return t.datepicker._selectMonthYear(s, this, "M"), !1 }, selectYear: function () { return t.datepicker._selectMonthYear(s, this, "Y"), !1 } }; t(this).on(this.getAttribute("data-event"), e[this.getAttribute("data-handler")]) }) }, _generateHTML: function (t) {
            var e, i, s, n, o, a, r, l, h, c, u, d, p, f, g, m, _, v, b, y, w, k, x, C, D, T, I, M, P, S, N, H, A, z, O, E, W, F, L, R = new Date, Y = this._daylightSavingAdjust(new Date(R.getFullYear(), R.getMonth(), R.getDate())), B = this._get(t, "isRTL"), j = this._get(t, "showButtonPanel"), q = this._get(t, "hideIfNoPrevNext"), K = this._get(t, "navigationAsDateFormat"), U = this._getNumberOfMonths(t), V = this._get(t, "showCurrentAtPos"), X = this._get(t, "stepMonths"), $ = 1 !== U[0] || 1 !== U[1], G = this._daylightSavingAdjust(t.currentDay ? new Date(t.currentYear, t.currentMonth, t.currentDay) : new Date(9999, 9, 9)), J = this._getMinMaxDate(t, "min"), Q = this._getMinMaxDate(t, "max"), Z = t.drawMonth - V, te = t.drawYear; if (0 > Z && (Z += 12, te--), Q) for (e = this._daylightSavingAdjust(new Date(Q.getFullYear(), Q.getMonth() - U[0] * U[1] + 1, Q.getDate())), e = J && J > e ? J : e; this._daylightSavingAdjust(new Date(te, Z, 1)) > e;)Z-- , 0 > Z && (Z = 11, te--); for (t.drawMonth = Z, t.drawYear = te, i = this._get(t, "prevText"), i = K ? this.formatDate(i, this._daylightSavingAdjust(new Date(te, Z - X, 1)), this._getFormatConfig(t)) : i, s = this._canAdjustMonth(t, -1, te, Z) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (B ? "e" : "w") + "'>" + i + "</span></a>" : q ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (B ? "e" : "w") + "'>" + i + "</span></a>", n = this._get(t, "nextText"), n = K ? this.formatDate(n, this._daylightSavingAdjust(new Date(te, Z + X, 1)), this._getFormatConfig(t)) : n, o = this._canAdjustMonth(t, 1, te, Z) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (B ? "w" : "e") + "'>" + n + "</span></a>" : q ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (B ? "w" : "e") + "'>" + n + "</span></a>", a = this._get(t, "currentText"), r = this._get(t, "gotoCurrent") && t.currentDay ? G : Y, a = K ? this.formatDate(a, r, this._getFormatConfig(t)) : a, l = t.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(t, "closeText") + "</button>", h = j ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (B ? l : "") + (this._isInRange(t, r) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + a + "</button>" : "") + (B ? "" : l) + "</div>" : "", c = parseInt(this._get(t, "firstDay"), 10), c = isNaN(c) ? 0 : c, u = this._get(t, "showWeek"), d = this._get(t, "dayNames"), p = this._get(t, "dayNamesMin"), f = this._get(t, "monthNames"), g = this._get(t, "monthNamesShort"), m = this._get(t, "beforeShowDay"), _ = this._get(t, "showOtherMonths"), v = this._get(t, "selectOtherMonths"), b = this._getDefaultDate(t), y = "", k = 0; U[0] > k; k++) {
                for (x = "", this.maxRows = 4, C = 0; U[1] > C; C++) {
                    if (D = this._daylightSavingAdjust(new Date(te, Z, t.selectedDay)), T = " ui-corner-all", I = "", $) {
                        if (I += "<div class='ui-datepicker-group", U[1] > 1) switch (C) {
                            case 0: I += " ui-datepicker-group-first", T = " ui-corner-" + (B ? "right" : "left");
                                break; case U[1] - 1: I += " ui-datepicker-group-last", T = " ui-corner-" + (B ? "left" : "right"); break; default: I += " ui-datepicker-group-middle", T = ""
                        }I += "'>"
                    } for (I += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + T + "'>" + (/all|left/.test(T) && 0 === k ? B ? o : s : "") + (/all|right/.test(T) && 0 === k ? B ? s : o : "") + this._generateMonthYearHeader(t, Z, te, J, Q, k > 0 || C > 0, f, g) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>", M = u ? "<th class='ui-datepicker-week-col'>" + this._get(t, "weekHeader") + "</th>" : "", w = 0; 7 > w; w++)P = (w + c) % 7, M += "<th scope='col'" + ((w + c + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + d[P] + "'>" + p[P] + "</span></th>"; for (I += M + "</tr></thead><tbody>", S = this._getDaysInMonth(te, Z), te === t.selectedYear && Z === t.selectedMonth && (t.selectedDay = Math.min(t.selectedDay, S)), N = (this._getFirstDayOfMonth(te, Z) - c + 7) % 7, H = Math.ceil((N + S) / 7), A = $ ? this.maxRows > H ? this.maxRows : H : H, this.maxRows = A, z = this._daylightSavingAdjust(new Date(te, Z, 1 - N)), O = 0; A > O; O++) { for (I += "<tr>", E = u ? "<td class='ui-datepicker-week-col'>" + this._get(t, "calculateWeek")(z) + "</td>" : "", w = 0; 7 > w; w++)W = m ? m.apply(t.input ? t.input[0] : null, [z]) : [!0, ""], F = z.getMonth() !== Z, L = F && !v || !W[0] || J && J > z || Q && z > Q, E += "<td class='" + ((w + c + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (F ? " ui-datepicker-other-month" : "") + (z.getTime() === D.getTime() && Z === t.selectedMonth && t._keyEvent || b.getTime() === z.getTime() && b.getTime() === D.getTime() ? " " + this._dayOverClass : "") + (L ? " " + this._unselectableClass + " ui-state-disabled" : "") + (F && !_ ? "" : " " + W[1] + (z.getTime() === G.getTime() ? " " + this._currentClass : "") + (z.getTime() === Y.getTime() ? " ui-datepicker-today" : "")) + "'" + (F && !_ || !W[2] ? "" : " title='" + W[2].replace(/'/g, "&#39;") + "'") + (L ? "" : " data-handler='selectDay' data-event='click' data-month='" + z.getMonth() + "' data-year='" + z.getFullYear() + "'") + ">" + (F && !_ ? "&#xa0;" : L ? "<span class='ui-state-default'>" + z.getDate() + "</span>" : "<a class='ui-state-default" + (z.getTime() === Y.getTime() ? " ui-state-highlight" : "") + (z.getTime() === G.getTime() ? " ui-state-active" : "") + (F ? " ui-priority-secondary" : "") + "' href='#'>" + z.getDate() + "</a>") + "</td>", z.setDate(z.getDate() + 1), z = this._daylightSavingAdjust(z); I += E + "</tr>" } Z++ , Z > 11 && (Z = 0, te++), I += "</tbody></table>" + ($ ? "</div>" + (U[0] > 0 && C === U[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), x += I
                } y += x
            } return y += h, t._keyEvent = !1, y
        }, _generateMonthYearHeader: function (t, e, i, s, n, o, a, r) { var l, h, c, u, d, p, f, g, m = this._get(t, "changeMonth"), _ = this._get(t, "changeYear"), v = this._get(t, "showMonthAfterYear"), b = "<div class='ui-datepicker-title'>", y = ""; if (o || !m) y += "<span class='ui-datepicker-month'>" + a[e] + "</span>"; else { for (l = s && s.getFullYear() === i, h = n && n.getFullYear() === i, y += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", c = 0; 12 > c; c++)(!l || c >= s.getMonth()) && (!h || n.getMonth() >= c) && (y += "<option value='" + c + "'" + (c === e ? " selected='selected'" : "") + ">" + r[c] + "</option>"); y += "</select>" } if (v || (b += y + (!o && m && _ ? "" : "&#xa0;")), !t.yearshtml) if (t.yearshtml = "", o || !_) b += "<span class='ui-datepicker-year'>" + i + "</span>"; else { for (u = this._get(t, "yearRange").split(":"), d = (new Date).getFullYear(), p = function (t) { var e = t.match(/c[+\-].*/) ? i + parseInt(t.substring(1), 10) : t.match(/[+\-].*/) ? d + parseInt(t, 10) : parseInt(t, 10); return isNaN(e) ? d : e }, f = p(u[0]), g = Math.max(f, p(u[1] || "")), f = s ? Math.max(f, s.getFullYear()) : f, g = n ? Math.min(g, n.getFullYear()) : g, t.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; g >= f; f++)t.yearshtml += "<option value='" + f + "'" + (f === i ? " selected='selected'" : "") + ">" + f + "</option>"; t.yearshtml += "</select>", b += t.yearshtml, t.yearshtml = null } return b += this._get(t, "yearSuffix"), v && (b += (!o && m && _ ? "" : "&#xa0;") + y), b += "</div>" }, _adjustInstDate: function (t, e, i) { var s = t.selectedYear + ("Y" === i ? e : 0), n = t.selectedMonth + ("M" === i ? e : 0), o = Math.min(t.selectedDay, this._getDaysInMonth(s, n)) + ("D" === i ? e : 0), a = this._restrictMinMax(t, this._daylightSavingAdjust(new Date(s, n, o))); t.selectedDay = a.getDate(), t.drawMonth = t.selectedMonth = a.getMonth(), t.drawYear = t.selectedYear = a.getFullYear(), ("M" === i || "Y" === i) && this._notifyChange(t) }, _restrictMinMax: function (t, e) { var i = this._getMinMaxDate(t, "min"), s = this._getMinMaxDate(t, "max"), n = i && i > e ? i : e; return s && n > s ? s : n }, _notifyChange: function (t) { var e = this._get(t, "onChangeMonthYear"); e && e.apply(t.input ? t.input[0] : null, [t.selectedYear, t.selectedMonth + 1, t]) }, _getNumberOfMonths: function (t) { var e = this._get(t, "numberOfMonths"); return null == e ? [1, 1] : "number" == typeof e ? [1, e] : e }, _getMinMaxDate: function (t, e) { return this._determineDate(t, this._get(t, e + "Date"), null) }, _getDaysInMonth: function (t, e) { return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate() }, _getFirstDayOfMonth: function (t, e) { return new Date(t, e, 1).getDay() }, _canAdjustMonth: function (t, e, i, s) { var n = this._getNumberOfMonths(t), o = this._daylightSavingAdjust(new Date(i, s + (0 > e ? e : n[0] * n[1]), 1)); return 0 > e && o.setDate(this._getDaysInMonth(o.getFullYear(), o.getMonth())), this._isInRange(t, o) }, _isInRange: function (t, e) { var i, s, n = this._getMinMaxDate(t, "min"), o = this._getMinMaxDate(t, "max"), a = null, r = null, l = this._get(t, "yearRange"); return l && (i = l.split(":"), s = (new Date).getFullYear(), a = parseInt(i[0], 10), r = parseInt(i[1], 10), i[0].match(/[+\-].*/) && (a += s), i[1].match(/[+\-].*/) && (r += s)), (!n || e.getTime() >= n.getTime()) && (!o || e.getTime() <= o.getTime()) && (!a || e.getFullYear() >= a) && (!r || r >= e.getFullYear()) }, _getFormatConfig: function (t) { var e = this._get(t, "shortYearCutoff"); return e = "string" != typeof e ? e : (new Date).getFullYear() % 100 + parseInt(e, 10), { shortYearCutoff: e, dayNamesShort: this._get(t, "dayNamesShort"), dayNames: this._get(t, "dayNames"), monthNamesShort: this._get(t, "monthNamesShort"), monthNames: this._get(t, "monthNames") } }, _formatDate: function (t, e, i, s) { e || (t.currentDay = t.selectedDay, t.currentMonth = t.selectedMonth, t.currentYear = t.selectedYear); var n = e ? "object" == typeof e ? e : this._daylightSavingAdjust(new Date(s, i, e)) : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)); return this.formatDate(this._get(t, "dateFormat"), n, this._getFormatConfig(t)) }
    }), t.fn.datepicker = function (e) { if (!this.length) return this; t.datepicker.initialized || (t(document).on("mousedown", t.datepicker._checkExternalClick), t.datepicker.initialized = !0), 0 === t("#" + t.datepicker._mainDivId).length && t("body").append(t.datepicker.dpDiv); var i = Array.prototype.slice.call(arguments, 1); return "string" != typeof e || "isDisabled" !== e && "getDate" !== e && "widget" !== e ? "option" === e && 2 === arguments.length && "string" == typeof arguments[1] ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i)) : this.each(function () { "string" == typeof e ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this].concat(i)) : t.datepicker._attachDatepicker(this, e) }) : t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i)) }, t.datepicker = new s, t.datepicker.initialized = !1, t.datepicker.uuid = (new Date).getTime(), t.datepicker.version = "1.12.1", t.datepicker, t.widget("ui.dialog", { version: "1.12.1", options: { appendTo: "body", autoOpen: !0, buttons: [], classes: { "ui-dialog": "ui-corner-all", "ui-dialog-titlebar": "ui-corner-all" }, closeOnEscape: !0, closeText: "Close", draggable: !0, hide: null, height: "auto", maxHeight: null, maxWidth: null, minHeight: 150, minWidth: 150, modal: !1, position: { my: "center", at: "center", of: window, collision: "fit", using: function (e) { var i = t(this).css(e).offset().top; 0 > i && t(this).css("top", e.top - i) } }, resizable: !0, show: null, title: null, width: 300, beforeClose: null, close: null, drag: null, dragStart: null, dragStop: null, focus: null, open: null, resize: null, resizeStart: null, resizeStop: null }, sizeRelatedOptions: { buttons: !0, height: !0, maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0, width: !0 }, resizableRelatedOptions: { maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0 }, _create: function () { this.originalCss = { display: this.element[0].style.display, width: this.element[0].style.width, minHeight: this.element[0].style.minHeight, maxHeight: this.element[0].style.maxHeight, height: this.element[0].style.height }, this.originalPosition = { parent: this.element.parent(), index: this.element.parent().children().index(this.element) }, this.originalTitle = this.element.attr("title"), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), this.options.disabled && (this.options.disabled = !1), this._createWrapper(), this.element.show().removeAttr("title").appendTo(this.uiDialog), this._addClass("ui-dialog-content", "ui-widget-content"), this._createTitlebar(), this._createButtonPane(), this.options.draggable && t.fn.draggable && this._makeDraggable(), this.options.resizable && t.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus() }, _init: function () { this.options.autoOpen && this.open() }, _appendTo: function () { var e = this.options.appendTo; return e && (e.jquery || e.nodeType) ? t(e) : this.document.find(e || "body").eq(0) }, _destroy: function () { var t, e = this.originalPosition; this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), this.uiDialog.remove(), this.originalTitle && this.element.attr("title", this.originalTitle), t = e.parent.children().eq(e.index), t.length && t[0] !== this.element[0] ? t.before(this.element) : e.parent.append(this.element) }, widget: function () { return this.uiDialog }, disable: t.noop, enable: t.noop, close: function (e) { var i = this; this._isOpen && this._trigger("beforeClose", e) !== !1 && (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), this.opener.filter(":focusable").trigger("focus").length || t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])), this._hide(this.uiDialog, this.options.hide, function () { i._trigger("close", e) })) }, isOpen: function () { return this._isOpen }, moveToTop: function () { this._moveToTop() }, _moveToTop: function (e, i) { var s = !1, n = this.uiDialog.siblings(".ui-front:visible").map(function () { return +t(this).css("z-index") }).get(), o = Math.max.apply(null, n); return o >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", o + 1), s = !0), s && !i && this._trigger("focus", e), s }, open: function () { var e = this; return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = t(t.ui.safeActiveElement(this.document[0])), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function () { e._focusTabbable(), e._trigger("focus") }), this._makeFocusTarget(), this._trigger("open"), void 0) }, _focusTabbable: function () { var t = this._focusedElement; t || (t = this.element.find("[autofocus]")), t.length || (t = this.element.find(":tabbable")), t.length || (t = this.uiDialogButtonPane.find(":tabbable")), t.length || (t = this.uiDialogTitlebarClose.filter(":tabbable")), t.length || (t = this.uiDialog), t.eq(0).trigger("focus") }, _keepFocus: function (e) { function i() { var e = t.ui.safeActiveElement(this.document[0]), i = this.uiDialog[0] === e || t.contains(this.uiDialog[0], e); i || this._focusTabbable() } e.preventDefault(), i.call(this), this._delay(i) }, _createWrapper: function () { this.uiDialog = t("<div>").hide().attr({ tabIndex: -1, role: "dialog" }).appendTo(this._appendTo()), this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front"), this._on(this.uiDialog, { keydown: function (e) { if (this.options.closeOnEscape && !e.isDefaultPrevented() && e.keyCode && e.keyCode === t.ui.keyCode.ESCAPE) return e.preventDefault(), this.close(e), void 0; if (e.keyCode === t.ui.keyCode.TAB && !e.isDefaultPrevented()) { var i = this.uiDialog.find(":tabbable"), s = i.filter(":first"), n = i.filter(":last"); e.target !== n[0] && e.target !== this.uiDialog[0] || e.shiftKey ? e.target !== s[0] && e.target !== this.uiDialog[0] || !e.shiftKey || (this._delay(function () { n.trigger("focus") }), e.preventDefault()) : (this._delay(function () { s.trigger("focus") }), e.preventDefault()) } }, mousedown: function (t) { this._moveToTop(t) && this._focusTabbable() } }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({ "aria-describedby": this.element.uniqueId().attr("id") }) }, _createTitlebar: function () { var e; this.uiDialogTitlebar = t("<div>"), this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix"), this._on(this.uiDialogTitlebar, { mousedown: function (e) { t(e.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.trigger("focus") } }), this.uiDialogTitlebarClose = t("<button type='button'></button>").button({ label: t("<a>").text(this.options.closeText).html(), icon: "ui-icon-closethick", showLabel: !1 }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"), this._on(this.uiDialogTitlebarClose, { click: function (t) { t.preventDefault(), this.close(t) } }), e = t("<span>").uniqueId().prependTo(this.uiDialogTitlebar), this._addClass(e, "ui-dialog-title"), this._title(e), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({ "aria-labelledby": e.attr("id") }) }, _title: function (t) { this.options.title ? t.text(this.options.title) : t.html("&#160;") }, _createButtonPane: function () { this.uiDialogButtonPane = t("<div>"), this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix"), this.uiButtonSet = t("<div>").appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, "ui-dialog-buttonset"), this._createButtons() }, _createButtons: function () { var e = this, i = this.options.buttons; return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), t.isEmptyObject(i) || t.isArray(i) && !i.length ? (this._removeClass(this.uiDialog, "ui-dialog-buttons"), void 0) : (t.each(i, function (i, s) { var n, o; s = t.isFunction(s) ? { click: s, text: i } : s, s = t.extend({ type: "button" }, s), n = s.click, o = { icon: s.icon, iconPosition: s.iconPosition, showLabel: s.showLabel, icons: s.icons, text: s.text }, delete s.click, delete s.icon, delete s.iconPosition, delete s.showLabel, delete s.icons, "boolean" == typeof s.text && delete s.text, t("<button></button>", s).button(o).appendTo(e.uiButtonSet).on("click", function () { n.apply(e.element[0], arguments) }) }), this._addClass(this.uiDialog, "ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0) }, _makeDraggable: function () { function e(t) { return { position: t.position, offset: t.offset } } var i = this, s = this.options; this.uiDialog.draggable({ cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function (s, n) { i._addClass(t(this), "ui-dialog-dragging"), i._blockFrames(), i._trigger("dragStart", s, e(n)) }, drag: function (t, s) { i._trigger("drag", t, e(s)) }, stop: function (n, o) { var a = o.offset.left - i.document.scrollLeft(), r = o.offset.top - i.document.scrollTop(); s.position = { my: "left top", at: "left" + (a >= 0 ? "+" : "") + a + " " + "top" + (r >= 0 ? "+" : "") + r, of: i.window }, i._removeClass(t(this), "ui-dialog-dragging"), i._unblockFrames(), i._trigger("dragStop", n, e(o)) } }) }, _makeResizable: function () { function e(t) { return { originalPosition: t.originalPosition, originalSize: t.originalSize, position: t.position, size: t.size } } var i = this, s = this.options, n = s.resizable, o = this.uiDialog.css("position"), a = "string" == typeof n ? n : "n,e,s,w,se,sw,ne,nw"; this.uiDialog.resizable({ cancel: ".ui-dialog-content", containment: "document", alsoResize: this.element, maxWidth: s.maxWidth, maxHeight: s.maxHeight, minWidth: s.minWidth, minHeight: this._minHeight(), handles: a, start: function (s, n) { i._addClass(t(this), "ui-dialog-resizing"), i._blockFrames(), i._trigger("resizeStart", s, e(n)) }, resize: function (t, s) { i._trigger("resize", t, e(s)) }, stop: function (n, o) { var a = i.uiDialog.offset(), r = a.left - i.document.scrollLeft(), l = a.top - i.document.scrollTop(); s.height = i.uiDialog.height(), s.width = i.uiDialog.width(), s.position = { my: "left top", at: "left" + (r >= 0 ? "+" : "") + r + " " + "top" + (l >= 0 ? "+" : "") + l, of: i.window }, i._removeClass(t(this), "ui-dialog-resizing"), i._unblockFrames(), i._trigger("resizeStop", n, e(o)) } }).css("position", o) }, _trackFocus: function () { this._on(this.widget(), { focusin: function (e) { this._makeFocusTarget(), this._focusedElement = t(e.target) } }) }, _makeFocusTarget: function () { this._untrackInstance(), this._trackingInstances().unshift(this) }, _untrackInstance: function () { var e = this._trackingInstances(), i = t.inArray(this, e); -1 !== i && e.splice(i, 1) }, _trackingInstances: function () { var t = this.document.data("ui-dialog-instances"); return t || (t = [], this.document.data("ui-dialog-instances", t)), t }, _minHeight: function () { var t = this.options; return "auto" === t.height ? t.minHeight : Math.min(t.minHeight, t.height) }, _position: function () { var t = this.uiDialog.is(":visible"); t || this.uiDialog.show(), this.uiDialog.position(this.options.position), t || this.uiDialog.hide() }, _setOptions: function (e) { var i = this, s = !1, n = {}; t.each(e, function (t, e) { i._setOption(t, e), t in i.sizeRelatedOptions && (s = !0), t in i.resizableRelatedOptions && (n[t] = e) }), s && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", n) }, _setOption: function (e, i) { var s, n, o = this.uiDialog; "disabled" !== e && (this._super(e, i), "appendTo" === e && this.uiDialog.appendTo(this._appendTo()), "buttons" === e && this._createButtons(), "closeText" === e && this.uiDialogTitlebarClose.button({ label: t("<a>").text("" + this.options.closeText).html() }), "draggable" === e && (s = o.is(":data(ui-draggable)"), s && !i && o.draggable("destroy"), !s && i && this._makeDraggable()), "position" === e && this._position(), "resizable" === e && (n = o.is(":data(ui-resizable)"), n && !i && o.resizable("destroy"), n && "string" == typeof i && o.resizable("option", "handles", i), n || i === !1 || this._makeResizable()), "title" === e && this._title(this.uiDialogTitlebar.find(".ui-dialog-title"))) }, _size: function () { var t, e, i, s = this.options; this.element.show().css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }), s.minWidth > s.width && (s.width = s.minWidth), t = this.uiDialog.css({ height: "auto", width: s.width }).outerHeight(), e = Math.max(0, s.minHeight - t), i = "number" == typeof s.maxHeight ? Math.max(0, s.maxHeight - t) : "none", "auto" === s.height ? this.element.css({ minHeight: e, maxHeight: i, height: "auto" }) : this.element.height(Math.max(0, s.height - t)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight()) }, _blockFrames: function () { this.iframeBlocks = this.document.find("iframe").map(function () { var e = t(this); return t("<div>").css({ position: "absolute", width: e.outerWidth(), height: e.outerHeight() }).appendTo(e.parent()).offset(e.offset())[0] }) }, _unblockFrames: function () { this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks) }, _allowInteraction: function (e) { return t(e.target).closest(".ui-dialog").length ? !0 : !!t(e.target).closest(".ui-datepicker").length }, _createOverlay: function () { if (this.options.modal) { var e = !0; this._delay(function () { e = !1 }), this.document.data("ui-dialog-overlays") || this._on(this.document, { focusin: function (t) { e || this._allowInteraction(t) || (t.preventDefault(), this._trackingInstances()[0]._focusTabbable()) } }), this.overlay = t("<div>").appendTo(this._appendTo()), this._addClass(this.overlay, null, "ui-widget-overlay ui-front"), this._on(this.overlay, { mousedown: "_keepFocus" }), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1) } }, _destroyOverlay: function () { if (this.options.modal && this.overlay) { var t = this.document.data("ui-dialog-overlays") - 1; t ? this.document.data("ui-dialog-overlays", t) : (this._off(this.document, "focusin"), this.document.removeData("ui-dialog-overlays")), this.overlay.remove(), this.overlay = null } } }), t.uiBackCompat !== !1 && t.widget("ui.dialog", t.ui.dialog, { options: { dialogClass: "" }, _createWrapper: function () { this._super(), this.uiDialog.addClass(this.options.dialogClass) }, _setOption: function (t, e) { "dialogClass" === t && this.uiDialog.removeClass(this.options.dialogClass).addClass(e), this._superApply(arguments) } }), t.ui.dialog, t.widget("ui.progressbar", { version: "1.12.1", options: { classes: { "ui-progressbar": "ui-corner-all", "ui-progressbar-value": "ui-corner-left", "ui-progressbar-complete": "ui-corner-right" }, max: 100, value: 0, change: null, complete: null }, min: 0, _create: function () { this.oldValue = this.options.value = this._constrainedValue(), this.element.attr({ role: "progressbar", "aria-valuemin": this.min }), this._addClass("ui-progressbar", "ui-widget ui-widget-content"), this.valueDiv = t("<div>").appendTo(this.element), this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header"), this._refreshValue() }, _destroy: function () { this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"), this.valueDiv.remove() }, value: function (t) { return void 0 === t ? this.options.value : (this.options.value = this._constrainedValue(t), this._refreshValue(), void 0) }, _constrainedValue: function (t) { return void 0 === t && (t = this.options.value), this.indeterminate = t === !1, "number" != typeof t && (t = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, t)) }, _setOptions: function (t) { var e = t.value; delete t.value, this._super(t), this.options.value = this._constrainedValue(e), this._refreshValue() }, _setOption: function (t, e) { "max" === t && (e = Math.max(this.min, e)), this._super(t, e) }, _setOptionDisabled: function (t) { this._super(t), this.element.attr("aria-disabled", t), this._toggleClass(null, "ui-state-disabled", !!t) }, _percentage: function () { return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min) }, _refreshValue: function () { var e = this.options.value, i = this._percentage(); this.valueDiv.toggle(this.indeterminate || e > this.min).width(i.toFixed(0) + "%"), this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, e === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = t("<div>").appendTo(this.valueDiv), this._addClass(this.overlayDiv, "ui-progressbar-overlay"))) : (this.element.attr({ "aria-valuemax": this.options.max, "aria-valuenow": e }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== e && (this.oldValue = e, this._trigger("change")), e === this.options.max && this._trigger("complete") } }), t.widget("ui.selectmenu", [t.ui.formResetMixin, { version: "1.12.1", defaultElement: "<select>", options: { appendTo: null, classes: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" }, disabled: null, icons: { button: "ui-icon-triangle-1-s" }, position: { my: "left top", at: "left bottom", collision: "none" }, width: !1, change: null, close: null, focus: null, open: null, select: null }, _create: function () { var e = this.element.uniqueId().attr("id"); this.ids = { element: e, button: e + "-button", menu: e + "-menu" }, this._drawButton(), this._drawMenu(), this._bindFormResetHandler(), this._rendered = !1, this.menuItems = t() }, _drawButton: function () { var e, i = this, s = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex); this.labels = this.element.labels().attr("for", this.ids.button), this._on(this.labels, { click: function (t) { this.button.focus(), t.preventDefault() } }), this.element.hide(), this.button = t("<span>", { tabindex: this.options.disabled ? -1 : 0, id: this.ids.button, role: "combobox", "aria-expanded": "false", "aria-autocomplete": "list", "aria-owns": this.ids.menu, "aria-haspopup": "true", title: this.element.attr("title") }).insertAfter(this.element), this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget"), e = t("<span>").appendTo(this.button), this._addClass(e, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button), this.buttonItem = this._renderButtonItem(s).appendTo(this.button), this.options.width !== !1 && this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function () { i._rendered || i._refreshMenu() }) }, _drawMenu: function () { var e = this; this.menu = t("<ul>", { "aria-hidden": "true", "aria-labelledby": this.ids.button, id: this.ids.menu }), this.menuWrap = t("<div>").append(this.menu), this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"), this.menuWrap.appendTo(this._appendTo()), this.menuInstance = this.menu.menu({ classes: { "ui-menu": "ui-corner-bottom" }, role: "listbox", select: function (t, i) { t.preventDefault(), e._setSelection(), e._select(i.item.data("ui-selectmenu-item"), t) }, focus: function (t, i) { var s = i.item.data("ui-selectmenu-item"); null != e.focusIndex && s.index !== e.focusIndex && (e._trigger("focus", t, { item: s }), e.isOpen || e._select(s, t)), e.focusIndex = s.index, e.button.attr("aria-activedescendant", e.menuItems.eq(s.index).attr("id")) } }).menu("instance"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function () { return !1 }, this.menuInstance._isDivider = function () { return !1 } }, refresh: function () { this._refreshMenu(), this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {})), null === this.options.width && this._resizeButton() }, _refreshMenu: function () { var t, e = this.element.find("option"); this.menu.empty(), this._parseOptions(e), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"), this._rendered = !0, e.length && (t = this._getSelectedItem(), this.menuInstance.focus(null, t), this._setAria(t.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled"))) }, open: function (t) { this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.menuItems.length && (this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", t))) }, _position: function () { this.menuWrap.position(t.extend({ of: this.button }, this.options.position)) }, close: function (t) { this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", t)) }, widget: function () { return this.button }, menuWidget: function () { return this.menu }, _renderButtonItem: function (e) { var i = t("<span>"); return this._setText(i, e.label), this._addClass(i, "ui-selectmenu-text"), i }, _renderMenu: function (e, i) { var s = this, n = ""; t.each(i, function (i, o) { var a; o.optgroup !== n && (a = t("<li>", { text: o.optgroup }), s._addClass(a, "ui-selectmenu-optgroup", "ui-menu-divider" + (o.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : "")), a.appendTo(e), n = o.optgroup), s._renderItemData(e, o) }) }, _renderItemData: function (t, e) { return this._renderItem(t, e).data("ui-selectmenu-item", e) }, _renderItem: function (e, i) { var s = t("<li>"), n = t("<div>", { title: i.element.attr("title") }); return i.disabled && this._addClass(s, null, "ui-state-disabled"), this._setText(n, i.label), s.append(n).appendTo(e) }, _setText: function (t, e) { e ? t.text(e) : t.html("&#160;") }, _move: function (t, e) { var i, s, n = ".ui-menu-item"; this.isOpen ? i = this.menuItems.eq(this.focusIndex).parent("li") : (i = this.menuItems.eq(this.element[0].selectedIndex).parent("li"), n += ":not(.ui-state-disabled)"), s = "first" === t || "last" === t ? i["first" === t ? "prevAll" : "nextAll"](n).eq(-1) : i[t + "All"](n).eq(0), s.length && this.menuInstance.focus(e, s) }, _getSelectedItem: function () { return this.menuItems.eq(this.element[0].selectedIndex).parent("li") }, _toggle: function (t) { this[this.isOpen ? "close" : "open"](t) }, _setSelection: function () { var t; this.range && (window.getSelection ? (t = window.getSelection(), t.removeAllRanges(), t.addRange(this.range)) : this.range.select(), this.button.focus()) }, _documentClick: { mousedown: function (e) { this.isOpen && (t(e.target).closest(".ui-selectmenu-menu, #" + t.ui.escapeSelector(this.ids.button)).length || this.close(e)) } }, _buttonEvents: { mousedown: function () { var t; window.getSelection ? (t = window.getSelection(), t.rangeCount && (this.range = t.getRangeAt(0))) : this.range = document.selection.createRange() }, click: function (t) { this._setSelection(), this._toggle(t) }, keydown: function (e) { var i = !0; switch (e.keyCode) { case t.ui.keyCode.TAB: case t.ui.keyCode.ESCAPE: this.close(e), i = !1; break; case t.ui.keyCode.ENTER: this.isOpen && this._selectFocusedItem(e); break; case t.ui.keyCode.UP: e.altKey ? this._toggle(e) : this._move("prev", e); break; case t.ui.keyCode.DOWN: e.altKey ? this._toggle(e) : this._move("next", e); break; case t.ui.keyCode.SPACE: this.isOpen ? this._selectFocusedItem(e) : this._toggle(e); break; case t.ui.keyCode.LEFT: this._move("prev", e); break; case t.ui.keyCode.RIGHT: this._move("next", e); break; case t.ui.keyCode.HOME: case t.ui.keyCode.PAGE_UP: this._move("first", e); break; case t.ui.keyCode.END: case t.ui.keyCode.PAGE_DOWN: this._move("last", e); break; default: this.menu.trigger(e), i = !1 }i && e.preventDefault() } }, _selectFocusedItem: function (t) { var e = this.menuItems.eq(this.focusIndex).parent("li"); e.hasClass("ui-state-disabled") || this._select(e.data("ui-selectmenu-item"), t) }, _select: function (t, e) { var i = this.element[0].selectedIndex; this.element[0].selectedIndex = t.index, this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(t)), this._setAria(t), this._trigger("select", e, { item: t }), t.index !== i && this._trigger("change", e, { item: t }), this.close(e) }, _setAria: function (t) { var e = this.menuItems.eq(t.index).attr("id"); this.button.attr({ "aria-labelledby": e, "aria-activedescendant": e }), this.menu.attr("aria-activedescendant", e) }, _setOption: function (t, e) { if ("icons" === t) { var i = this.button.find("span.ui-icon"); this._removeClass(i, null, this.options.icons.button)._addClass(i, null, e.button) } this._super(t, e), "appendTo" === t && this.menuWrap.appendTo(this._appendTo()), "width" === t && this._resizeButton() }, _setOptionDisabled: function (t) { this._super(t), this.menuInstance.option("disabled", t), this.button.attr("aria-disabled", t), this._toggleClass(this.button, null, "ui-state-disabled", t), this.element.prop("disabled", t), t ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0) }, _appendTo: function () { var e = this.options.appendTo; return e && (e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)), e && e[0] || (e = this.element.closest(".ui-front, dialog")), e.length || (e = this.document[0].body), e }, _toggleAttr: function () { this.button.attr("aria-expanded", this.isOpen), this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen), this.menu.attr("aria-hidden", !this.isOpen) }, _resizeButton: function () { var t = this.options.width; return t === !1 ? (this.button.css("width", ""), void 0) : (null === t && (t = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(t), void 0) }, _resizeMenu: function () { this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1)) }, _getCreateOptions: function () { var t = this._super(); return t.disabled = this.element.prop("disabled"), t }, _parseOptions: function (e) { var i = this, s = []; e.each(function (e, n) { s.push(i._parseOption(t(n), e)) }), this.items = s }, _parseOption: function (t, e) { var i = t.parent("optgroup"); return { element: t, index: e, value: t.val(), label: t.text(), optgroup: i.attr("label") || "", disabled: i.prop("disabled") || t.prop("disabled") } }, _destroy: function () { this._unbindFormResetHandler(), this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.labels.attr("for", this.ids.element) } }]), t.widget("ui.slider", t.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "slide", options: { animate: !1, classes: { "ui-slider": "ui-corner-all", "ui-slider-handle": "ui-corner-all", "ui-slider-range": "ui-corner-all ui-widget-header" }, distance: 0, max: 100, min: 0, orientation: "horizontal", range: !1, step: 1, value: 0, values: null, change: null, slide: null, start: null, stop: null }, numPages: 5, _create: function () { this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content"), this._refresh(), this._animateOff = !1 }, _refresh: function () { this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue() }, _createHandles: function () { var e, i, s = this.options, n = this.element.find(".ui-slider-handle"), o = "<span tabindex='0'></span>", a = []; for (i = s.values && s.values.length || 1, n.length > i && (n.slice(i).remove(), n = n.slice(0, i)), e = n.length; i > e; e++)a.push(o); this.handles = n.add(t(a.join("")).appendTo(this.element)), this._addClass(this.handles, "ui-slider-handle", "ui-state-default"), this.handle = this.handles.eq(0), this.handles.each(function (e) { t(this).data("ui-slider-handle-index", e).attr("tabIndex", 0) }) }, _createRange: function () {
            var e = this.options; e.range ? (e.range === !0 && (e.values ? e.values.length && 2 !== e.values.length ? e.values = [e.values[0], e.values[0]] : t.isArray(e.values) && (e.values = e.values.slice(0)) : e.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? (this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"), this.range.css({ left: "", bottom: "" })) : (this.range = t("<div>").appendTo(this.element), this._addClass(this.range, "ui-slider-range")), ("min" === e.range || "max" === e.range) && this._addClass(this.range, "ui-slider-range-" + e.range)) : (this.range && this.range.remove(), this.range = null)
        }, _setupEvents: function () { this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles) }, _destroy: function () { this.handles.remove(), this.range && this.range.remove(), this._mouseDestroy() }, _mouseCapture: function (e) { var i, s, n, o, a, r, l, h, c = this, u = this.options; return u.disabled ? !1 : (this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }, this.elementOffset = this.element.offset(), i = { x: e.pageX, y: e.pageY }, s = this._normValueFromMouse(i), n = this._valueMax() - this._valueMin() + 1, this.handles.each(function (e) { var i = Math.abs(s - c.values(e)); (n > i || n === i && (e === c._lastChangedValue || c.values(e) === u.min)) && (n = i, o = t(this), a = e) }), r = this._start(e, a), r === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = a, this._addClass(o, null, "ui-state-active"), o.trigger("focus"), l = o.offset(), h = !t(e.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = h ? { left: 0, top: 0 } : { left: e.pageX - l.left - o.width() / 2, top: e.pageY - l.top - o.height() / 2 - (parseInt(o.css("borderTopWidth"), 10) || 0) - (parseInt(o.css("borderBottomWidth"), 10) || 0) + (parseInt(o.css("marginTop"), 10) || 0) }, this.handles.hasClass("ui-state-hover") || this._slide(e, a, s), this._animateOff = !0, !0)) }, _mouseStart: function () { return !0 }, _mouseDrag: function (t) { var e = { x: t.pageX, y: t.pageY }, i = this._normValueFromMouse(e); return this._slide(t, this._handleIndex, i), !1 }, _mouseStop: function (t) { return this._removeClass(this.handles, null, "ui-state-active"), this._mouseSliding = !1, this._stop(t, this._handleIndex), this._change(t, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1 }, _detectOrientation: function () { this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal" }, _normValueFromMouse: function (t) { var e, i, s, n, o; return "horizontal" === this.orientation ? (e = this.elementSize.width, i = t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (e = this.elementSize.height, i = t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), s = i / e, s > 1 && (s = 1), 0 > s && (s = 0), "vertical" === this.orientation && (s = 1 - s), n = this._valueMax() - this._valueMin(), o = this._valueMin() + s * n, this._trimAlignValue(o) }, _uiHash: function (t, e, i) { var s = { handle: this.handles[t], handleIndex: t, value: void 0 !== e ? e : this.value() }; return this._hasMultipleValues() && (s.value = void 0 !== e ? e : this.values(t), s.values = i || this.values()), s }, _hasMultipleValues: function () { return this.options.values && this.options.values.length }, _start: function (t, e) { return this._trigger("start", t, this._uiHash(e)) }, _slide: function (t, e, i) { var s, n, o = this.value(), a = this.values(); this._hasMultipleValues() && (n = this.values(e ? 0 : 1), o = this.values(e), 2 === this.options.values.length && this.options.range === !0 && (i = 0 === e ? Math.min(n, i) : Math.max(n, i)), a[e] = i), i !== o && (s = this._trigger("slide", t, this._uiHash(e, i, a)), s !== !1 && (this._hasMultipleValues() ? this.values(e, i) : this.value(i))) }, _stop: function (t, e) { this._trigger("stop", t, this._uiHash(e)) }, _change: function (t, e) { this._keySliding || this._mouseSliding || (this._lastChangedValue = e, this._trigger("change", t, this._uiHash(e))) }, value: function (t) { return arguments.length ? (this.options.value = this._trimAlignValue(t), this._refreshValue(), this._change(null, 0), void 0) : this._value() }, values: function (e, i) { var s, n, o; if (arguments.length > 1) return this.options.values[e] = this._trimAlignValue(i), this._refreshValue(), this._change(null, e), void 0; if (!arguments.length) return this._values(); if (!t.isArray(arguments[0])) return this._hasMultipleValues() ? this._values(e) : this.value(); for (s = this.options.values, n = arguments[0], o = 0; s.length > o; o += 1)s[o] = this._trimAlignValue(n[o]), this._change(null, o); this._refreshValue() }, _setOption: function (e, i) { var s, n = 0; switch ("range" === e && this.options.range === !0 && ("min" === i ? (this.options.value = this._values(0), this.options.values = null) : "max" === i && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), t.isArray(this.options.values) && (n = this.options.values.length), this._super(e, i), e) { case "orientation": this._detectOrientation(), this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation), this._refreshValue(), this.options.range && this._refreshRange(i), this.handles.css("horizontal" === i ? "bottom" : "left", ""); break; case "value": this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1; break; case "values": for (this._animateOff = !0, this._refreshValue(), s = n - 1; s >= 0; s--)this._change(null, s); this._animateOff = !1; break; case "step": case "min": case "max": this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1; break; case "range": this._animateOff = !0, this._refresh(), this._animateOff = !1 } }, _setOptionDisabled: function (t) { this._super(t), this._toggleClass(null, "ui-state-disabled", !!t) }, _value: function () { var t = this.options.value; return t = this._trimAlignValue(t) }, _values: function (t) { var e, i, s; if (arguments.length) return e = this.options.values[t], e = this._trimAlignValue(e); if (this._hasMultipleValues()) { for (i = this.options.values.slice(), s = 0; i.length > s; s += 1)i[s] = this._trimAlignValue(i[s]); return i } return [] }, _trimAlignValue: function (t) { if (this._valueMin() >= t) return this._valueMin(); if (t >= this._valueMax()) return this._valueMax(); var e = this.options.step > 0 ? this.options.step : 1, i = (t - this._valueMin()) % e, s = t - i; return 2 * Math.abs(i) >= e && (s += i > 0 ? e : -e), parseFloat(s.toFixed(5)) }, _calculateNewMax: function () { var t = this.options.max, e = this._valueMin(), i = this.options.step, s = Math.round((t - e) / i) * i; t = s + e, t > this.options.max && (t -= i), this.max = parseFloat(t.toFixed(this._precision())) }, _precision: function () { var t = this._precisionOf(this.options.step); return null !== this.options.min && (t = Math.max(t, this._precisionOf(this.options.min))), t }, _precisionOf: function (t) { var e = "" + t, i = e.indexOf("."); return -1 === i ? 0 : e.length - i - 1 }, _valueMin: function () { return this.options.min }, _valueMax: function () { return this.max }, _refreshRange: function (t) { "vertical" === t && this.range.css({ width: "", left: "" }), "horizontal" === t && this.range.css({ height: "", bottom: "" }) }, _refreshValue: function () { var e, i, s, n, o, a = this.options.range, r = this.options, l = this, h = this._animateOff ? !1 : r.animate, c = {}; this._hasMultipleValues() ? this.handles.each(function (s) { i = 100 * ((l.values(s) - l._valueMin()) / (l._valueMax() - l._valueMin())), c["horizontal" === l.orientation ? "left" : "bottom"] = i + "%", t(this).stop(1, 1)[h ? "animate" : "css"](c, r.animate), l.options.range === !0 && ("horizontal" === l.orientation ? (0 === s && l.range.stop(1, 1)[h ? "animate" : "css"]({ left: i + "%" }, r.animate), 1 === s && l.range[h ? "animate" : "css"]({ width: i - e + "%" }, { queue: !1, duration: r.animate })) : (0 === s && l.range.stop(1, 1)[h ? "animate" : "css"]({ bottom: i + "%" }, r.animate), 1 === s && l.range[h ? "animate" : "css"]({ height: i - e + "%" }, { queue: !1, duration: r.animate }))), e = i }) : (s = this.value(), n = this._valueMin(), o = this._valueMax(), i = o !== n ? 100 * ((s - n) / (o - n)) : 0, c["horizontal" === this.orientation ? "left" : "bottom"] = i + "%", this.handle.stop(1, 1)[h ? "animate" : "css"](c, r.animate), "min" === a && "horizontal" === this.orientation && this.range.stop(1, 1)[h ? "animate" : "css"]({ width: i + "%" }, r.animate), "max" === a && "horizontal" === this.orientation && this.range.stop(1, 1)[h ? "animate" : "css"]({ width: 100 - i + "%" }, r.animate), "min" === a && "vertical" === this.orientation && this.range.stop(1, 1)[h ? "animate" : "css"]({ height: i + "%" }, r.animate), "max" === a && "vertical" === this.orientation && this.range.stop(1, 1)[h ? "animate" : "css"]({ height: 100 - i + "%" }, r.animate)) }, _handleEvents: { keydown: function (e) { var i, s, n, o, a = t(e.target).data("ui-slider-handle-index"); switch (e.keyCode) { case t.ui.keyCode.HOME: case t.ui.keyCode.END: case t.ui.keyCode.PAGE_UP: case t.ui.keyCode.PAGE_DOWN: case t.ui.keyCode.UP: case t.ui.keyCode.RIGHT: case t.ui.keyCode.DOWN: case t.ui.keyCode.LEFT: if (e.preventDefault(), !this._keySliding && (this._keySliding = !0, this._addClass(t(e.target), null, "ui-state-active"), i = this._start(e, a), i === !1)) return }switch (o = this.options.step, s = n = this._hasMultipleValues() ? this.values(a) : this.value(), e.keyCode) { case t.ui.keyCode.HOME: n = this._valueMin(); break; case t.ui.keyCode.END: n = this._valueMax(); break; case t.ui.keyCode.PAGE_UP: n = this._trimAlignValue(s + (this._valueMax() - this._valueMin()) / this.numPages); break; case t.ui.keyCode.PAGE_DOWN: n = this._trimAlignValue(s - (this._valueMax() - this._valueMin()) / this.numPages); break; case t.ui.keyCode.UP: case t.ui.keyCode.RIGHT: if (s === this._valueMax()) return; n = this._trimAlignValue(s + o); break; case t.ui.keyCode.DOWN: case t.ui.keyCode.LEFT: if (s === this._valueMin()) return; n = this._trimAlignValue(s - o) }this._slide(e, a, n) }, keyup: function (e) { var i = t(e.target).data("ui-slider-handle-index"); this._keySliding && (this._keySliding = !1, this._stop(e, i), this._change(e, i), this._removeClass(t(e.target), null, "ui-state-active")) } }
    }), t.widget("ui.spinner", { version: "1.12.1", defaultElement: "<input>", widgetEventPrefix: "spin", options: { classes: { "ui-spinner": "ui-corner-all", "ui-spinner-down": "ui-corner-br", "ui-spinner-up": "ui-corner-tr" }, culture: null, icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" }, incremental: !0, max: null, min: null, numberFormat: null, page: 10, step: 1, change: null, spin: null, start: null, stop: null }, _create: function () { this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, { beforeunload: function () { this.element.removeAttr("autocomplete") } }) }, _getCreateOptions: function () { var e = this._super(), i = this.element; return t.each(["min", "max", "step"], function (t, s) { var n = i.attr(s); null != n && n.length && (e[s] = n) }), e }, _events: { keydown: function (t) { this._start(t) && this._keydown(t) && t.preventDefault() }, keyup: "_stop", focus: function () { this.previous = this.element.val() }, blur: function (t) { return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", t), void 0) }, mousewheel: function (t, e) { if (e) { if (!this.spinning && !this._start(t)) return !1; this._spin((e > 0 ? 1 : -1) * this.options.step, t), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function () { this.spinning && this._stop(t) }, 100), t.preventDefault() } }, "mousedown .ui-spinner-button": function (e) { function i() { var e = this.element[0] === t.ui.safeActiveElement(this.document[0]); e || (this.element.trigger("focus"), this.previous = s, this._delay(function () { this.previous = s })) } var s; s = this.element[0] === t.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val(), e.preventDefault(), i.call(this), this.cancelBlur = !0, this._delay(function () { delete this.cancelBlur, i.call(this) }), this._start(e) !== !1 && this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e) }, "mouseup .ui-spinner-button": "_stop", "mouseenter .ui-spinner-button": function (e) { return t(e.currentTarget).hasClass("ui-state-active") ? this._start(e) === !1 ? !1 : (this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e), void 0) : void 0 }, "mouseleave .ui-spinner-button": "_stop" }, _enhance: function () { this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>") }, _draw: function () { this._enhance(), this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content"), this._addClass("ui-spinner-input"), this.element.attr("role", "spinbutton"), this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", !0).button({ classes: { "ui-button": "" } }), this._removeClass(this.buttons, "ui-corner-all"), this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"), this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down"), this.buttons.first().button({ icon: this.options.icons.up, showLabel: !1 }), this.buttons.last().button({ icon: this.options.icons.down, showLabel: !1 }), this.buttons.height() > Math.ceil(.5 * this.uiSpinner.height()) && this.uiSpinner.height() > 0 && this.uiSpinner.height(this.uiSpinner.height()) }, _keydown: function (e) { var i = this.options, s = t.ui.keyCode; switch (e.keyCode) { case s.UP: return this._repeat(null, 1, e), !0; case s.DOWN: return this._repeat(null, -1, e), !0; case s.PAGE_UP: return this._repeat(null, i.page, e), !0; case s.PAGE_DOWN: return this._repeat(null, -i.page, e), !0 }return !1 }, _start: function (t) { return this.spinning || this._trigger("start", t) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1 }, _repeat: function (t, e, i) { t = t || 500, clearTimeout(this.timer), this.timer = this._delay(function () { this._repeat(40, e, i) }, t), this._spin(e * this.options.step, i) }, _spin: function (t, e) { var i = this.value() || 0; this.counter || (this.counter = 1), i = this._adjustValue(i + t * this._increment(this.counter)), this.spinning && this._trigger("spin", e, { value: i }) === !1 || (this._value(i), this.counter++) }, _increment: function (e) { var i = this.options.incremental; return i ? t.isFunction(i) ? i(e) : Math.floor(e * e * e / 5e4 - e * e / 500 + 17 * e / 200 + 1) : 1 }, _precision: function () { var t = this._precisionOf(this.options.step); return null !== this.options.min && (t = Math.max(t, this._precisionOf(this.options.min))), t }, _precisionOf: function (t) { var e = "" + t, i = e.indexOf("."); return -1 === i ? 0 : e.length - i - 1 }, _adjustValue: function (t) { var e, i, s = this.options; return e = null !== s.min ? s.min : 0, i = t - e, i = Math.round(i / s.step) * s.step, t = e + i, t = parseFloat(t.toFixed(this._precision())), null !== s.max && t > s.max ? s.max : null !== s.min && s.min > t ? s.min : t }, _stop: function (t) { this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", t)) }, _setOption: function (t, e) { var i, s, n; return "culture" === t || "numberFormat" === t ? (i = this._parse(this.element.val()), this.options[t] = e, this.element.val(this._format(i)), void 0) : (("max" === t || "min" === t || "step" === t) && "string" == typeof e && (e = this._parse(e)), "icons" === t && (s = this.buttons.first().find(".ui-icon"), this._removeClass(s, null, this.options.icons.up), this._addClass(s, null, e.up), n = this.buttons.last().find(".ui-icon"), this._removeClass(n, null, this.options.icons.down), this._addClass(n, null, e.down)), this._super(t, e), void 0) }, _setOptionDisabled: function (t) { this._super(t), this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!t), this.element.prop("disabled", !!t), this.buttons.button(t ? "disable" : "enable") }, _setOptions: r(function (t) { this._super(t) }), _parse: function (t) { return "string" == typeof t && "" !== t && (t = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t, 10, this.options.culture) : +t), "" === t || isNaN(t) ? null : t }, _format: function (t) { return "" === t ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(t, this.options.numberFormat, this.options.culture) : t }, _refresh: function () { this.element.attr({ "aria-valuemin": this.options.min, "aria-valuemax": this.options.max, "aria-valuenow": this._parse(this.element.val()) }) }, isValid: function () { var t = this.value(); return null === t ? !1 : t === this._adjustValue(t) }, _value: function (t, e) { var i; "" !== t && (i = this._parse(t), null !== i && (e || (i = this._adjustValue(i)), t = this._format(i))), this.element.val(t), this._refresh() }, _destroy: function () { this.element.prop("disabled", !1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"), this.uiSpinner.replaceWith(this.element) }, stepUp: r(function (t) { this._stepUp(t) }), _stepUp: function (t) { this._start() && (this._spin((t || 1) * this.options.step), this._stop()) }, stepDown: r(function (t) { this._stepDown(t) }), _stepDown: function (t) { this._start() && (this._spin((t || 1) * -this.options.step), this._stop()) }, pageUp: r(function (t) { this._stepUp((t || 1) * this.options.page) }), pageDown: r(function (t) { this._stepDown((t || 1) * this.options.page) }), value: function (t) { return arguments.length ? (r(this._value).call(this, t), void 0) : this._parse(this.element.val()) }, widget: function () { return this.uiSpinner } }), t.uiBackCompat !== !1 && t.widget("ui.spinner", t.ui.spinner, { _enhance: function () { this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml()) }, _uiSpinnerHtml: function () { return "<span>" }, _buttonHtml: function () { return "<a></a><a></a>" } }), t.ui.spinner, t.widget("ui.tabs", { version: "1.12.1", delay: 300, options: { active: null, classes: { "ui-tabs": "ui-corner-all", "ui-tabs-nav": "ui-corner-all", "ui-tabs-panel": "ui-corner-bottom", "ui-tabs-tab": "ui-corner-top" }, collapsible: !1, event: "click", heightStyle: "content", hide: null, show: null, activate: null, beforeActivate: null, beforeLoad: null, load: null }, _isLocal: function () { var t = /#.*$/; return function (e) { var i, s; i = e.href.replace(t, ""), s = location.href.replace(t, ""); try { i = decodeURIComponent(i) } catch (n) { } try { s = decodeURIComponent(s) } catch (n) { } return e.hash.length > 1 && i === s } }(), _create: function () { var e = this, i = this.options; this.running = !1, this._addClass("ui-tabs", "ui-widget ui-widget-content"), this._toggleClass("ui-tabs-collapsible", null, i.collapsible), this._processTabs(), i.active = this._initialActive(), t.isArray(i.disabled) && (i.disabled = t.uniqueSort(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"), function (t) { return e.tabs.index(t) }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(i.active) : t(), this._refresh(), this.active.length && this.load(i.active) }, _initialActive: function () { var e = this.options.active, i = this.options.collapsible, s = location.hash.substring(1); return null === e && (s && this.tabs.each(function (i, n) { return t(n).attr("aria-controls") === s ? (e = i, !1) : void 0 }), null === e && (e = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === e || -1 === e) && (e = this.tabs.length ? 0 : !1)), e !== !1 && (e = this.tabs.index(this.tabs.eq(e)), -1 === e && (e = i ? !1 : 0)), !i && e === !1 && this.anchors.length && (e = 0), e }, _getCreateEventData: function () { return { tab: this.active, panel: this.active.length ? this._getPanelForTab(this.active) : t() } }, _tabKeydown: function (e) { var i = t(t.ui.safeActiveElement(this.document[0])).closest("li"), s = this.tabs.index(i), n = !0; if (!this._handlePageNav(e)) { switch (e.keyCode) { case t.ui.keyCode.RIGHT: case t.ui.keyCode.DOWN: s++; break; case t.ui.keyCode.UP: case t.ui.keyCode.LEFT: n = !1, s--; break; case t.ui.keyCode.END: s = this.anchors.length - 1; break; case t.ui.keyCode.HOME: s = 0; break; case t.ui.keyCode.SPACE: return e.preventDefault(), clearTimeout(this.activating), this._activate(s), void 0; case t.ui.keyCode.ENTER: return e.preventDefault(), clearTimeout(this.activating), this._activate(s === this.options.active ? !1 : s), void 0; default: return }e.preventDefault(), clearTimeout(this.activating), s = this._focusNextTab(s, n), e.ctrlKey || e.metaKey || (i.attr("aria-selected", "false"), this.tabs.eq(s).attr("aria-selected", "true"), this.activating = this._delay(function () { this.option("active", s) }, this.delay)) } }, _panelKeydown: function (e) { this._handlePageNav(e) || e.ctrlKey && e.keyCode === t.ui.keyCode.UP && (e.preventDefault(), this.active.trigger("focus")) }, _handlePageNav: function (e) { return e.altKey && e.keyCode === t.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : e.altKey && e.keyCode === t.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0 }, _findNextTab: function (e, i) { function s() { return e > n && (e = 0), 0 > e && (e = n), e } for (var n = this.tabs.length - 1; -1 !== t.inArray(s(), this.options.disabled);)e = i ? e + 1 : e - 1; return e }, _focusNextTab: function (t, e) { return t = this._findNextTab(t, e), this.tabs.eq(t).trigger("focus"), t }, _setOption: function (t, e) { return "active" === t ? (this._activate(e), void 0) : (this._super(t, e), "collapsible" === t && (this._toggleClass("ui-tabs-collapsible", null, e), e || this.options.active !== !1 || this._activate(0)), "event" === t && this._setupEvents(e), "heightStyle" === t && this._setupHeightStyle(e), void 0) }, _sanitizeSelector: function (t) { return t ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "" }, refresh: function () { var e = this.options, i = this.tablist.children(":has(a[href])"); e.disabled = t.map(i.filter(".ui-state-disabled"), function (t) { return i.index(t) }), this._processTabs(), e.active !== !1 && this.anchors.length ? this.active.length && !t.contains(this.tablist[0], this.active[0]) ? this.tabs.length === e.disabled.length ? (e.active = !1, this.active = t()) : this._activate(this._findNextTab(Math.max(0, e.active - 1), !1)) : e.active = this.tabs.index(this.active) : (e.active = !1, this.active = t()), this._refresh() }, _refresh: function () { this._setOptionDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({ "aria-hidden": "true" }), this.active.length ? (this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }), this._addClass(this.active, "ui-tabs-active", "ui-state-active"), this._getPanelForTab(this.active).show().attr({ "aria-hidden": "false" })) : this.tabs.eq(0).attr("tabIndex", 0) }, _processTabs: function () { var e = this, i = this.tabs, s = this.anchors, n = this.panels; this.tablist = this._getList().attr("role", "tablist"), this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header"), this.tablist.on("mousedown" + this.eventNamespace, "> li", function (e) { t(this).is(".ui-state-disabled") && e.preventDefault() }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () { t(this).closest("li").is(".ui-state-disabled") && this.blur() }), this.tabs = this.tablist.find("> li:has(a[href])").attr({ role: "tab", tabIndex: -1 }), this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"), this.anchors = this.tabs.map(function () { return t("a", this)[0] }).attr({ role: "presentation", tabIndex: -1 }), this._addClass(this.anchors, "ui-tabs-anchor"), this.panels = t(), this.anchors.each(function (i, s) { var n, o, a, r = t(s).uniqueId().attr("id"), l = t(s).closest("li"), h = l.attr("aria-controls"); e._isLocal(s) ? (n = s.hash, a = n.substring(1), o = e.element.find(e._sanitizeSelector(n))) : (a = l.attr("aria-controls") || t({}).uniqueId()[0].id, n = "#" + a, o = e.element.find(n), o.length || (o = e._createPanel(a), o.insertAfter(e.panels[i - 1] || e.tablist)), o.attr("aria-live", "polite")), o.length && (e.panels = e.panels.add(o)), h && l.data("ui-tabs-aria-controls", h), l.attr({ "aria-controls": a, "aria-labelledby": r }), o.attr("aria-labelledby", r) }), this.panels.attr("role", "tabpanel"), this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"), i && (this._off(i.not(this.tabs)), this._off(s.not(this.anchors)), this._off(n.not(this.panels))) }, _getList: function () { return this.tablist || this.element.find("ol, ul").eq(0) }, _createPanel: function (e) { return t("<div>").attr("id", e).data("ui-tabs-destroy", !0) }, _setOptionDisabled: function (e) { var i, s, n; for (t.isArray(e) && (e.length ? e.length === this.anchors.length && (e = !0) : e = !1), n = 0; s = this.tabs[n]; n++)i = t(s), e === !0 || -1 !== t.inArray(n, e) ? (i.attr("aria-disabled", "true"), this._addClass(i, null, "ui-state-disabled")) : (i.removeAttr("aria-disabled"), this._removeClass(i, null, "ui-state-disabled")); this.options.disabled = e, this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, e === !0) }, _setupEvents: function (e) { var i = {}; e && t.each(e.split(" "), function (t, e) { i[e] = "_eventHandler" }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, { click: function (t) { t.preventDefault() } }), this._on(this.anchors, i), this._on(this.tabs, { keydown: "_tabKeydown" }), this._on(this.panels, { keydown: "_panelKeydown" }), this._focusable(this.tabs), this._hoverable(this.tabs) }, _setupHeightStyle: function (e) { var i, s = this.element.parent(); "fill" === e ? (i = s.height(), i -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function () { var e = t(this), s = e.css("position"); "absolute" !== s && "fixed" !== s && (i -= e.outerHeight(!0)) }), this.element.children().not(this.panels).each(function () { i -= t(this).outerHeight(!0) }), this.panels.each(function () { t(this).height(Math.max(0, i - t(this).innerHeight() + t(this).height())) }).css("overflow", "auto")) : "auto" === e && (i = 0, this.panels.each(function () { i = Math.max(i, t(this).height("").height()) }).height(i)) }, _eventHandler: function (e) { var i = this.options, s = this.active, n = t(e.currentTarget), o = n.closest("li"), a = o[0] === s[0], r = a && i.collapsible, l = r ? t() : this._getPanelForTab(o), h = s.length ? this._getPanelForTab(s) : t(), c = { oldTab: s, oldPanel: h, newTab: r ? t() : o, newPanel: l }; e.preventDefault(), o.hasClass("ui-state-disabled") || o.hasClass("ui-tabs-loading") || this.running || a && !i.collapsible || this._trigger("beforeActivate", e, c) === !1 || (i.active = r ? !1 : this.tabs.index(o), this.active = a ? t() : o, this.xhr && this.xhr.abort(), h.length || l.length || t.error("jQuery UI Tabs: Mismatching fragment identifier."), l.length && this.load(this.tabs.index(o), e), this._toggle(e, c)) }, _toggle: function (e, i) { function s() { o.running = !1, o._trigger("activate", e, i) } function n() { o._addClass(i.newTab.closest("li"), "ui-tabs-active", "ui-state-active"), a.length && o.options.show ? o._show(a, o.options.show, s) : (a.show(), s()) } var o = this, a = i.newPanel, r = i.oldPanel; this.running = !0, r.length && this.options.hide ? this._hide(r, this.options.hide, function () { o._removeClass(i.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), n() }) : (this._removeClass(i.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), r.hide(), n()), r.attr("aria-hidden", "true"), i.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }), a.length && r.length ? i.oldTab.attr("tabIndex", -1) : a.length && this.tabs.filter(function () { return 0 === t(this).attr("tabIndex") }).attr("tabIndex", -1), a.attr("aria-hidden", "false"), i.newTab.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }) }, _activate: function (e) { var i, s = this._findActive(e); s[0] !== this.active[0] && (s.length || (s = this.active), i = s.find(".ui-tabs-anchor")[0], this._eventHandler({ target: i, currentTarget: i, preventDefault: t.noop })) }, _findActive: function (e) { return e === !1 ? t() : this.tabs.eq(e) }, _getIndex: function (e) { return "string" == typeof e && (e = this.anchors.index(this.anchors.filter("[href$='" + t.ui.escapeSelector(e) + "']"))), e }, _destroy: function () { this.xhr && this.xhr.abort(), this.tablist.removeAttr("role").off(this.eventNamespace), this.anchors.removeAttr("role tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function () { t.data(this, "ui-tabs-destroy") ? t(this).remove() : t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded") }), this.tabs.each(function () { var e = t(this), i = e.data("ui-tabs-aria-controls"); i ? e.attr("aria-controls", i).removeData("ui-tabs-aria-controls") : e.removeAttr("aria-controls") }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "") }, enable: function (e) { var i = this.options.disabled; i !== !1 && (void 0 === e ? i = !1 : (e = this._getIndex(e), i = t.isArray(i) ? t.map(i, function (t) { return t !== e ? t : null }) : t.map(this.tabs, function (t, i) { return i !== e ? i : null })), this._setOptionDisabled(i)) }, disable: function (e) { var i = this.options.disabled; if (i !== !0) { if (void 0 === e) i = !0; else { if (e = this._getIndex(e), -1 !== t.inArray(e, i)) return; i = t.isArray(i) ? t.merge([e], i).sort() : [e] } this._setOptionDisabled(i) } }, load: function (e, i) { e = this._getIndex(e); var s = this, n = this.tabs.eq(e), o = n.find(".ui-tabs-anchor"), a = this._getPanelForTab(n), r = { tab: n, panel: a }, l = function (t, e) { "abort" === e && s.panels.stop(!1, !0), s._removeClass(n, "ui-tabs-loading"), a.removeAttr("aria-busy"), t === s.xhr && delete s.xhr }; this._isLocal(o[0]) || (this.xhr = t.ajax(this._ajaxSettings(o, i, r)), this.xhr && "canceled" !== this.xhr.statusText && (this._addClass(n, "ui-tabs-loading"), a.attr("aria-busy", "true"), this.xhr.done(function (t, e, n) { setTimeout(function () { a.html(t), s._trigger("load", i, r), l(n, e) }, 1) }).fail(function (t, e) { setTimeout(function () { l(t, e) }, 1) }))) }, _ajaxSettings: function (e, i, s) { var n = this; return { url: e.attr("href").replace(/#.*$/, ""), beforeSend: function (e, o) { return n._trigger("beforeLoad", i, t.extend({ jqXHR: e, ajaxSettings: o }, s)) } } }, _getPanelForTab: function (e) { var i = t(e).attr("aria-controls"); return this.element.find(this._sanitizeSelector("#" + i)) } }), t.uiBackCompat !== !1 && t.widget("ui.tabs", t.ui.tabs, { _processTabs: function () { this._superApply(arguments), this._addClass(this.tabs, "ui-tab") } }), t.ui.tabs, t.widget("ui.tooltip", {
        version: "1.12.1", options: { classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" }, content: function () { var e = t(this).attr("title") || ""; return t("<a>").text(e).html() }, hide: !0, items: "[title]:not([disabled])", position: { my: "left top+15", at: "left bottom", collision: "flipfit flip" }, show: !0, track: !1, close: null, open: null }, _addDescribedBy: function (e, i) { var s = (e.attr("aria-describedby") || "").split(/\s+/); s.push(i), e.data("ui-tooltip-id", i).attr("aria-describedby", t.trim(s.join(" "))) }, _removeDescribedBy: function (e) { var i = e.data("ui-tooltip-id"), s = (e.attr("aria-describedby") || "").split(/\s+/), n = t.inArray(i, s); -1 !== n && s.splice(n, 1), e.removeData("ui-tooltip-id"), s = t.trim(s.join(" ")), s ? e.attr("aria-describedby", s) : e.removeAttr("aria-describedby") }, _create: function () { this._on({ mouseover: "open", focusin: "open" }), this.tooltips = {}, this.parents = {}, this.liveRegion = t("<div>"), this.disabledTitles = t([]) }, _setOption: function (e, i) { var s = this; this._super(e, i), "content" === e && t.each(this.tooltips, function (t, e) { s._updateContent(e.element) }) }, _setOptionDisabled: function (t) { this[t ? "_disable" : "_enable"]() }, _disable: function () { var e = this; t.each(this.tooltips, function (i, s) { var n = t.Event("blur"); n.target = n.currentTarget = s.element[0], e.close(n, !0) }), this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function () { var e = t(this); return e.is("[title]") ? e.data("ui-tooltip-title", e.attr("title")).removeAttr("title") : void 0 })) }, _enable: function () { this.disabledTitles.each(function () { var e = t(this); e.data("ui-tooltip-title") && e.attr("title", e.data("ui-tooltip-title")) }), this.disabledTitles = t([]) }, open: function (e) { var i = this, s = t(e ? e.target : this.element).closest(this.options.items); s.length && !s.data("ui-tooltip-id") && (s.attr("title") && s.data("ui-tooltip-title", s.attr("title")), s.data("ui-tooltip-open", !0), e && "mouseover" === e.type && s.parents().each(function () { var e, s = t(this); s.data("ui-tooltip-open") && (e = t.Event("blur"), e.target = e.currentTarget = this, i.close(e, !0)), s.attr("title") && (s.uniqueId(), i.parents[this.id] = { element: this, title: s.attr("title") }, s.attr("title", "")) }), this._registerCloseHandlers(e, s), this._updateContent(s, e)) }, _updateContent: function (t, e) { var i, s = this.options.content, n = this, o = e ? e.type : null; return "string" == typeof s || s.nodeType || s.jquery ? this._open(e, t, s) : (i = s.call(t[0], function (i) { n._delay(function () { t.data("ui-tooltip-open") && (e && (e.type = o), this._open(e, t, i)) }) }), i && this._open(e, t, i), void 0) }, _open: function (e, i, s) { function n(t) { h.of = t, a.is(":hidden") || a.position(h) } var o, a, r, l, h = t.extend({}, this.options.position); if (s) { if (o = this._find(i)) return o.tooltip.find(".ui-tooltip-content").html(s), void 0; i.is("[title]") && (e && "mouseover" === e.type ? i.attr("title", "") : i.removeAttr("title")), o = this._tooltip(i), a = o.tooltip, this._addDescribedBy(i, a.attr("id")), a.find(".ui-tooltip-content").html(s), this.liveRegion.children().hide(), l = t("<div>").html(a.find(".ui-tooltip-content").html()), l.removeAttr("name").find("[name]").removeAttr("name"), l.removeAttr("id").find("[id]").removeAttr("id"), l.appendTo(this.liveRegion), this.options.track && e && /^mouse/.test(e.type) ? (this._on(this.document, { mousemove: n }), n(e)) : a.position(t.extend({ of: i }, this.options.position)), a.hide(), this._show(a, this.options.show), this.options.track && this.options.show && this.options.show.delay && (r = this.delayedShow = setInterval(function () { a.is(":visible") && (n(h.of), clearInterval(r)) }, t.fx.interval)), this._trigger("open", e, { tooltip: a }) } }, _registerCloseHandlers: function (e, i) { var s = { keyup: function (e) { if (e.keyCode === t.ui.keyCode.ESCAPE) { var s = t.Event(e); s.currentTarget = i[0], this.close(s, !0) } } }; i[0] !== this.element[0] && (s.remove = function () { this._removeTooltip(this._find(i).tooltip) }), e && "mouseover" !== e.type || (s.mouseleave = "close"), e && "focusin" !== e.type || (s.focusout = "close"), this._on(!0, i, s) }, close: function (e) {
            var i, s = this, n = t(e ? e.currentTarget : this.element), o = this._find(n); return o ? (i = o.tooltip, o.closing || (clearInterval(this.delayedShow), n.data("ui-tooltip-title") && !n.attr("title") && n.attr("title", n.data("ui-tooltip-title")), this._removeDescribedBy(n), o.hiding = !0, i.stop(!0), this._hide(i, this.options.hide, function () { s._removeTooltip(t(this)) }), n.removeData("ui-tooltip-open"), this._off(n, "mouseleave focusout keyup"), n[0] !== this.element[0] && this._off(n, "remove"), this._off(this.document, "mousemove"), e && "mouseleave" === e.type && t.each(this.parents, function (e, i) {
                t(i.element).attr("title", i.title), delete s.parents[e]
            }), o.closing = !0, this._trigger("close", e, { tooltip: i }), o.hiding || (o.closing = !1)), void 0) : (n.removeData("ui-tooltip-open"), void 0)
        }, _tooltip: function (e) { var i = t("<div>").attr("role", "tooltip"), s = t("<div>").appendTo(i), n = i.uniqueId().attr("id"); return this._addClass(s, "ui-tooltip-content"), this._addClass(i, "ui-tooltip", "ui-widget ui-widget-content"), i.appendTo(this._appendTo(e)), this.tooltips[n] = { element: e, tooltip: i } }, _find: function (t) { var e = t.data("ui-tooltip-id"); return e ? this.tooltips[e] : null }, _removeTooltip: function (t) { t.remove(), delete this.tooltips[t.attr("id")] }, _appendTo: function (t) { var e = t.closest(".ui-front, dialog"); return e.length || (e = this.document[0].body), e }, _destroy: function () { var e = this; t.each(this.tooltips, function (i, s) { var n = t.Event("blur"), o = s.element; n.target = n.currentTarget = o[0], e.close(n, !0), t("#" + i).remove(), o.data("ui-tooltip-title") && (o.attr("title") || o.attr("title", o.data("ui-tooltip-title")), o.removeData("ui-tooltip-title")) }), this.liveRegion.remove() }
    }), t.uiBackCompat !== !1 && t.widget("ui.tooltip", t.ui.tooltip, { options: { tooltipClass: null }, _tooltip: function () { var t = this._superApply(arguments); return this.options.tooltipClass && t.tooltip.addClass(this.options.tooltipClass), t } }), t.ui.tooltip; var f = "ui-effects-", g = "ui-effects-style", m = "ui-effects-animated", _ = t; t.effects = { effect: {} }, function (t, e) { function i(t, e, i) { var s = u[e.type] || {}; return null == t ? i || !e.def ? null : e.def : (t = s.floor ? ~~t : parseFloat(t), isNaN(t) ? e.def : s.mod ? (t + s.mod) % s.mod : 0 > t ? 0 : t > s.max ? s.max : t) } function s(i) { var s = h(), n = s._rgba = []; return i = i.toLowerCase(), f(l, function (t, o) { var a, r = o.re.exec(i), l = r && o.parse(r), h = o.space || "rgba"; return l ? (a = s[h](l), s[c[h].cache] = a[c[h].cache], n = s._rgba = a._rgba, !1) : e }), n.length ? ("0,0,0,0" === n.join() && t.extend(n, o.transparent), s) : o[i] } function n(t, e, i) { return i = (i + 1) % 1, 1 > 6 * i ? t + 6 * (e - t) * i : 1 > 2 * i ? e : 2 > 3 * i ? t + 6 * (e - t) * (2 / 3 - i) : t } var o, a = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", r = /^([\-+])=\s*(\d+\.?\d*)/, l = [{ re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (t) { return [t[1], t[2], t[3], t[4]] } }, { re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (t) { return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]] } }, { re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (t) { return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)] } }, { re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (t) { return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)] } }, { re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space: "hsla", parse: function (t) { return [t[1], t[2] / 100, t[3] / 100, t[4]] } }], h = t.Color = function (e, i, s, n) { return new t.Color.fn.parse(e, i, s, n) }, c = { rgba: { props: { red: { idx: 0, type: "byte" }, green: { idx: 1, type: "byte" }, blue: { idx: 2, type: "byte" } } }, hsla: { props: { hue: { idx: 0, type: "degrees" }, saturation: { idx: 1, type: "percent" }, lightness: { idx: 2, type: "percent" } } } }, u = { "byte": { floor: !0, max: 255 }, percent: { max: 1 }, degrees: { mod: 360, floor: !0 } }, d = h.support = {}, p = t("<p>")[0], f = t.each; p.style.cssText = "background-color:rgba(1,1,1,.5)", d.rgba = p.style.backgroundColor.indexOf("rgba") > -1, f(c, function (t, e) { e.cache = "_" + t, e.props.alpha = { idx: 3, type: "percent", def: 1 } }), h.fn = t.extend(h.prototype, { parse: function (n, a, r, l) { if (n === e) return this._rgba = [null, null, null, null], this; (n.jquery || n.nodeType) && (n = t(n).css(a), a = e); var u = this, d = t.type(n), p = this._rgba = []; return a !== e && (n = [n, a, r, l], d = "array"), "string" === d ? this.parse(s(n) || o._default) : "array" === d ? (f(c.rgba.props, function (t, e) { p[e.idx] = i(n[e.idx], e) }), this) : "object" === d ? (n instanceof h ? f(c, function (t, e) { n[e.cache] && (u[e.cache] = n[e.cache].slice()) }) : f(c, function (e, s) { var o = s.cache; f(s.props, function (t, e) { if (!u[o] && s.to) { if ("alpha" === t || null == n[t]) return; u[o] = s.to(u._rgba) } u[o][e.idx] = i(n[t], e, !0) }), u[o] && 0 > t.inArray(null, u[o].slice(0, 3)) && (u[o][3] = 1, s.from && (u._rgba = s.from(u[o]))) }), this) : e }, is: function (t) { var i = h(t), s = !0, n = this; return f(c, function (t, o) { var a, r = i[o.cache]; return r && (a = n[o.cache] || o.to && o.to(n._rgba) || [], f(o.props, function (t, i) { return null != r[i.idx] ? s = r[i.idx] === a[i.idx] : e })), s }), s }, _space: function () { var t = [], e = this; return f(c, function (i, s) { e[s.cache] && t.push(i) }), t.pop() }, transition: function (t, e) { var s = h(t), n = s._space(), o = c[n], a = 0 === this.alpha() ? h("transparent") : this, r = a[o.cache] || o.to(a._rgba), l = r.slice(); return s = s[o.cache], f(o.props, function (t, n) { var o = n.idx, a = r[o], h = s[o], c = u[n.type] || {}; null !== h && (null === a ? l[o] = h : (c.mod && (h - a > c.mod / 2 ? a += c.mod : a - h > c.mod / 2 && (a -= c.mod)), l[o] = i((h - a) * e + a, n))) }), this[n](l) }, blend: function (e) { if (1 === this._rgba[3]) return this; var i = this._rgba.slice(), s = i.pop(), n = h(e)._rgba; return h(t.map(i, function (t, e) { return (1 - s) * n[e] + s * t })) }, toRgbaString: function () { var e = "rgba(", i = t.map(this._rgba, function (t, e) { return null == t ? e > 2 ? 1 : 0 : t }); return 1 === i[3] && (i.pop(), e = "rgb("), e + i.join() + ")" }, toHslaString: function () { var e = "hsla(", i = t.map(this.hsla(), function (t, e) { return null == t && (t = e > 2 ? 1 : 0), e && 3 > e && (t = Math.round(100 * t) + "%"), t }); return 1 === i[3] && (i.pop(), e = "hsl("), e + i.join() + ")" }, toHexString: function (e) { var i = this._rgba.slice(), s = i.pop(); return e && i.push(~~(255 * s)), "#" + t.map(i, function (t) { return t = (t || 0).toString(16), 1 === t.length ? "0" + t : t }).join("") }, toString: function () { return 0 === this._rgba[3] ? "transparent" : this.toRgbaString() } }), h.fn.parse.prototype = h.fn, c.hsla.to = function (t) { if (null == t[0] || null == t[1] || null == t[2]) return [null, null, null, t[3]]; var e, i, s = t[0] / 255, n = t[1] / 255, o = t[2] / 255, a = t[3], r = Math.max(s, n, o), l = Math.min(s, n, o), h = r - l, c = r + l, u = .5 * c; return e = l === r ? 0 : s === r ? 60 * (n - o) / h + 360 : n === r ? 60 * (o - s) / h + 120 : 60 * (s - n) / h + 240, i = 0 === h ? 0 : .5 >= u ? h / c : h / (2 - c), [Math.round(e) % 360, i, u, null == a ? 1 : a] }, c.hsla.from = function (t) { if (null == t[0] || null == t[1] || null == t[2]) return [null, null, null, t[3]]; var e = t[0] / 360, i = t[1], s = t[2], o = t[3], a = .5 >= s ? s * (1 + i) : s + i - s * i, r = 2 * s - a; return [Math.round(255 * n(r, a, e + 1 / 3)), Math.round(255 * n(r, a, e)), Math.round(255 * n(r, a, e - 1 / 3)), o] }, f(c, function (s, n) { var o = n.props, a = n.cache, l = n.to, c = n.from; h.fn[s] = function (s) { if (l && !this[a] && (this[a] = l(this._rgba)), s === e) return this[a].slice(); var n, r = t.type(s), u = "array" === r || "object" === r ? s : arguments, d = this[a].slice(); return f(o, function (t, e) { var s = u["object" === r ? t : e.idx]; null == s && (s = d[e.idx]), d[e.idx] = i(s, e) }), c ? (n = h(c(d)), n[a] = d, n) : h(d) }, f(o, function (e, i) { h.fn[e] || (h.fn[e] = function (n) { var o, a = t.type(n), l = "alpha" === e ? this._hsla ? "hsla" : "rgba" : s, h = this[l](), c = h[i.idx]; return "undefined" === a ? c : ("function" === a && (n = n.call(this, c), a = t.type(n)), null == n && i.empty ? this : ("string" === a && (o = r.exec(n), o && (n = c + parseFloat(o[2]) * ("+" === o[1] ? 1 : -1))), h[i.idx] = n, this[l](h))) }) }) }), h.hook = function (e) { var i = e.split(" "); f(i, function (e, i) { t.cssHooks[i] = { set: function (e, n) { var o, a, r = ""; if ("transparent" !== n && ("string" !== t.type(n) || (o = s(n)))) { if (n = h(o || n), !d.rgba && 1 !== n._rgba[3]) { for (a = "backgroundColor" === i ? e.parentNode : e; ("" === r || "transparent" === r) && a && a.style;)try { r = t.css(a, "backgroundColor"), a = a.parentNode } catch (l) { } n = n.blend(r && "transparent" !== r ? r : "_default") } n = n.toRgbaString() } try { e.style[i] = n } catch (l) { } } }, t.fx.step[i] = function (e) { e.colorInit || (e.start = h(e.elem, i), e.end = h(e.end), e.colorInit = !0), t.cssHooks[i].set(e.elem, e.start.transition(e.end, e.pos)) } }) }, h.hook(a), t.cssHooks.borderColor = { expand: function (t) { var e = {}; return f(["Top", "Right", "Bottom", "Left"], function (i, s) { e["border" + s + "Color"] = t }), e } }, o = t.Color.names = { aqua: "#00ffff", black: "#000000", blue: "#0000ff", fuchsia: "#ff00ff", gray: "#808080", green: "#008000", lime: "#00ff00", maroon: "#800000", navy: "#000080", olive: "#808000", purple: "#800080", red: "#ff0000", silver: "#c0c0c0", teal: "#008080", white: "#ffffff", yellow: "#ffff00", transparent: [null, null, null, 0], _default: "#ffffff" } }(_), function () { function e(e) { var i, s, n = e.ownerDocument.defaultView ? e.ownerDocument.defaultView.getComputedStyle(e, null) : e.currentStyle, o = {}; if (n && n.length && n[0] && n[n[0]]) for (s = n.length; s--;)i = n[s], "string" == typeof n[i] && (o[t.camelCase(i)] = n[i]); else for (i in n) "string" == typeof n[i] && (o[i] = n[i]); return o } function i(e, i) { var s, o, a = {}; for (s in i) o = i[s], e[s] !== o && (n[s] || (t.fx.step[s] || !isNaN(parseFloat(o))) && (a[s] = o)); return a } var s = ["add", "remove", "toggle"], n = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 }; t.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (e, i) { t.fx.step[i] = function (t) { ("none" !== t.end && !t.setAttr || 1 === t.pos && !t.setAttr) && (_.style(t.elem, i, t.end), t.setAttr = !0) } }), t.fn.addBack || (t.fn.addBack = function (t) { return this.add(null == t ? this.prevObject : this.prevObject.filter(t)) }), t.effects.animateClass = function (n, o, a, r) { var l = t.speed(o, a, r); return this.queue(function () { var o, a = t(this), r = a.attr("class") || "", h = l.children ? a.find("*").addBack() : a; h = h.map(function () { var i = t(this); return { el: i, start: e(this) } }), o = function () { t.each(s, function (t, e) { n[e] && a[e + "Class"](n[e]) }) }, o(), h = h.map(function () { return this.end = e(this.el[0]), this.diff = i(this.start, this.end), this }), a.attr("class", r), h = h.map(function () { var e = this, i = t.Deferred(), s = t.extend({}, l, { queue: !1, complete: function () { i.resolve(e) } }); return this.el.animate(this.diff, s), i.promise() }), t.when.apply(t, h.get()).done(function () { o(), t.each(arguments, function () { var e = this.el; t.each(this.diff, function (t) { e.css(t, "") }) }), l.complete.call(a[0]) }) }) }, t.fn.extend({ addClass: function (e) { return function (i, s, n, o) { return s ? t.effects.animateClass.call(this, { add: i }, s, n, o) : e.apply(this, arguments) } }(t.fn.addClass), removeClass: function (e) { return function (i, s, n, o) { return arguments.length > 1 ? t.effects.animateClass.call(this, { remove: i }, s, n, o) : e.apply(this, arguments) } }(t.fn.removeClass), toggleClass: function (e) { return function (i, s, n, o, a) { return "boolean" == typeof s || void 0 === s ? n ? t.effects.animateClass.call(this, s ? { add: i } : { remove: i }, n, o, a) : e.apply(this, arguments) : t.effects.animateClass.call(this, { toggle: i }, s, n, o) } }(t.fn.toggleClass), switchClass: function (e, i, s, n, o) { return t.effects.animateClass.call(this, { add: i, remove: e }, s, n, o) } }) }(), function () { function e(e, i, s, n) { return t.isPlainObject(e) && (i = e, e = e.effect), e = { effect: e }, null == i && (i = {}), t.isFunction(i) && (n = i, s = null, i = {}), ("number" == typeof i || t.fx.speeds[i]) && (n = s, s = i, i = {}), t.isFunction(s) && (n = s, s = null), i && t.extend(e, i), s = s || i.duration, e.duration = t.fx.off ? 0 : "number" == typeof s ? s : s in t.fx.speeds ? t.fx.speeds[s] : t.fx.speeds._default, e.complete = n || i.complete, e } function i(e) { return !e || "number" == typeof e || t.fx.speeds[e] ? !0 : "string" != typeof e || t.effects.effect[e] ? t.isFunction(e) ? !0 : "object" != typeof e || e.effect ? !1 : !0 : !0 } function s(t, e) { var i = e.outerWidth(), s = e.outerHeight(), n = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/, o = n.exec(t) || ["", 0, i, s, 0]; return { top: parseFloat(o[1]) || 0, right: "auto" === o[2] ? i : parseFloat(o[2]), bottom: "auto" === o[3] ? s : parseFloat(o[3]), left: parseFloat(o[4]) || 0 } } t.expr && t.expr.filters && t.expr.filters.animated && (t.expr.filters.animated = function (e) { return function (i) { return !!t(i).data(m) || e(i) } }(t.expr.filters.animated)), t.uiBackCompat !== !1 && t.extend(t.effects, { save: function (t, e) { for (var i = 0, s = e.length; s > i; i++)null !== e[i] && t.data(f + e[i], t[0].style[e[i]]) }, restore: function (t, e) { for (var i, s = 0, n = e.length; n > s; s++)null !== e[s] && (i = t.data(f + e[s]), t.css(e[s], i)) }, setMode: function (t, e) { return "toggle" === e && (e = t.is(":hidden") ? "show" : "hide"), e }, createWrapper: function (e) { if (e.parent().is(".ui-effects-wrapper")) return e.parent(); var i = { width: e.outerWidth(!0), height: e.outerHeight(!0), "float": e.css("float") }, s = t("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), n = { width: e.width(), height: e.height() }, o = document.activeElement; try { o.id } catch (a) { o = document.body } return e.wrap(s), (e[0] === o || t.contains(e[0], o)) && t(o).trigger("focus"), s = e.parent(), "static" === e.css("position") ? (s.css({ position: "relative" }), e.css({ position: "relative" })) : (t.extend(i, { position: e.css("position"), zIndex: e.css("z-index") }), t.each(["top", "left", "bottom", "right"], function (t, s) { i[s] = e.css(s), isNaN(parseInt(i[s], 10)) && (i[s] = "auto") }), e.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })), e.css(n), s.css(i).show() }, removeWrapper: function (e) { var i = document.activeElement; return e.parent().is(".ui-effects-wrapper") && (e.parent().replaceWith(e), (e[0] === i || t.contains(e[0], i)) && t(i).trigger("focus")), e } }), t.extend(t.effects, { version: "1.12.1", define: function (e, i, s) { return s || (s = i, i = "effect"), t.effects.effect[e] = s, t.effects.effect[e].mode = i, s }, scaledDimensions: function (t, e, i) { if (0 === e) return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 }; var s = "horizontal" !== i ? (e || 100) / 100 : 1, n = "vertical" !== i ? (e || 100) / 100 : 1; return { height: t.height() * n, width: t.width() * s, outerHeight: t.outerHeight() * n, outerWidth: t.outerWidth() * s } }, clipToBox: function (t) { return { width: t.clip.right - t.clip.left, height: t.clip.bottom - t.clip.top, left: t.clip.left, top: t.clip.top } }, unshift: function (t, e, i) { var s = t.queue(); e > 1 && s.splice.apply(s, [1, 0].concat(s.splice(e, i))), t.dequeue() }, saveStyle: function (t) { t.data(g, t[0].style.cssText) }, restoreStyle: function (t) { t[0].style.cssText = t.data(g) || "", t.removeData(g) }, mode: function (t, e) { var i = t.is(":hidden"); return "toggle" === e && (e = i ? "show" : "hide"), (i ? "hide" === e : "show" === e) && (e = "none"), e }, getBaseline: function (t, e) { var i, s; switch (t[0]) { case "top": i = 0; break; case "middle": i = .5; break; case "bottom": i = 1; break; default: i = t[0] / e.height }switch (t[1]) { case "left": s = 0; break; case "center": s = .5; break; case "right": s = 1; break; default: s = t[1] / e.width }return { x: s, y: i } }, createPlaceholder: function (e) { var i, s = e.css("position"), n = e.position(); return e.css({ marginTop: e.css("marginTop"), marginBottom: e.css("marginBottom"), marginLeft: e.css("marginLeft"), marginRight: e.css("marginRight") }).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()), /^(static|relative)/.test(s) && (s = "absolute", i = t("<" + e[0].nodeName + ">").insertAfter(e).css({ display: /^(inline|ruby)/.test(e.css("display")) ? "inline-block" : "block", visibility: "hidden", marginTop: e.css("marginTop"), marginBottom: e.css("marginBottom"), marginLeft: e.css("marginLeft"), marginRight: e.css("marginRight"), "float": e.css("float") }).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"), e.data(f + "placeholder", i)), e.css({ position: s, left: n.left, top: n.top }), i }, removePlaceholder: function (t) { var e = f + "placeholder", i = t.data(e); i && (i.remove(), t.removeData(e)) }, cleanUp: function (e) { t.effects.restoreStyle(e), t.effects.removePlaceholder(e) }, setTransition: function (e, i, s, n) { return n = n || {}, t.each(i, function (t, i) { var o = e.cssUnit(i); o[0] > 0 && (n[i] = o[0] * s + o[1]) }), n } }), t.fn.extend({ effect: function () { function i(e) { function i() { r.removeData(m), t.effects.cleanUp(r), "hide" === s.mode && r.hide(), a() } function a() { t.isFunction(l) && l.call(r[0]), t.isFunction(e) && e() } var r = t(this); s.mode = c.shift(), t.uiBackCompat === !1 || o ? "none" === s.mode ? (r[h](), a()) : n.call(r[0], s, i) : (r.is(":hidden") ? "hide" === h : "show" === h) ? (r[h](), a()) : n.call(r[0], s, a) } var s = e.apply(this, arguments), n = t.effects.effect[s.effect], o = n.mode, a = s.queue, r = a || "fx", l = s.complete, h = s.mode, c = [], u = function (e) { var i = t(this), s = t.effects.mode(i, h) || o; i.data(m, !0), c.push(s), o && ("show" === s || s === o && "hide" === s) && i.show(), o && "none" === s || t.effects.saveStyle(i), t.isFunction(e) && e() }; return t.fx.off || !n ? h ? this[h](s.duration, l) : this.each(function () { l && l.call(this) }) : a === !1 ? this.each(u).each(i) : this.queue(r, u).queue(r, i) }, show: function (t) { return function (s) { if (i(s)) return t.apply(this, arguments); var n = e.apply(this, arguments); return n.mode = "show", this.effect.call(this, n) } }(t.fn.show), hide: function (t) { return function (s) { if (i(s)) return t.apply(this, arguments); var n = e.apply(this, arguments); return n.mode = "hide", this.effect.call(this, n) } }(t.fn.hide), toggle: function (t) { return function (s) { if (i(s) || "boolean" == typeof s) return t.apply(this, arguments); var n = e.apply(this, arguments); return n.mode = "toggle", this.effect.call(this, n) } }(t.fn.toggle), cssUnit: function (e) { var i = this.css(e), s = []; return t.each(["em", "px", "%", "pt"], function (t, e) { i.indexOf(e) > 0 && (s = [parseFloat(i), e]) }), s }, cssClip: function (t) { return t ? this.css("clip", "rect(" + t.top + "px " + t.right + "px " + t.bottom + "px " + t.left + "px)") : s(this.css("clip"), this) }, transfer: function (e, i) { var s = t(this), n = t(e.to), o = "fixed" === n.css("position"), a = t("body"), r = o ? a.scrollTop() : 0, l = o ? a.scrollLeft() : 0, h = n.offset(), c = { top: h.top - r, left: h.left - l, height: n.innerHeight(), width: n.innerWidth() }, u = s.offset(), d = t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({ top: u.top - r, left: u.left - l, height: s.innerHeight(), width: s.innerWidth(), position: o ? "fixed" : "absolute" }).animate(c, e.duration, e.easing, function () { d.remove(), t.isFunction(i) && i() }) } }), t.fx.step.clip = function (e) { e.clipInit || (e.start = t(e.elem).cssClip(), "string" == typeof e.end && (e.end = s(e.end, e.elem)), e.clipInit = !0), t(e.elem).cssClip({ top: e.pos * (e.end.top - e.start.top) + e.start.top, right: e.pos * (e.end.right - e.start.right) + e.start.right, bottom: e.pos * (e.end.bottom - e.start.bottom) + e.start.bottom, left: e.pos * (e.end.left - e.start.left) + e.start.left }) } }(), function () { var e = {}; t.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (t, i) { e[i] = function (e) { return Math.pow(e, t + 2) } }), t.extend(e, { Sine: function (t) { return 1 - Math.cos(t * Math.PI / 2) }, Circ: function (t) { return 1 - Math.sqrt(1 - t * t) }, Elastic: function (t) { return 0 === t || 1 === t ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin((80 * (t - 1) - 7.5) * Math.PI / 15) }, Back: function (t) { return t * t * (3 * t - 2) }, Bounce: function (t) { for (var e, i = 4; ((e = Math.pow(2, --i)) - 1) / 11 > t;); return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2) } }), t.each(e, function (e, i) { t.easing["easeIn" + e] = i, t.easing["easeOut" + e] = function (t) { return 1 - i(1 - t) }, t.easing["easeInOut" + e] = function (t) { return .5 > t ? i(2 * t) / 2 : 1 - i(-2 * t + 2) / 2 } }) }(); var v = t.effects; t.effects.define("blind", "hide", function (e, i) { var s = { up: ["bottom", "top"], vertical: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], horizontal: ["right", "left"], right: ["left", "right"] }, n = t(this), o = e.direction || "up", a = n.cssClip(), r = { clip: t.extend({}, a) }, l = t.effects.createPlaceholder(n); r.clip[s[o][0]] = r.clip[s[o][1]], "show" === e.mode && (n.cssClip(r.clip), l && l.css(t.effects.clipToBox(r)), r.clip = a), l && l.animate(t.effects.clipToBox(r), e.duration, e.easing), n.animate(r, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }), t.effects.define("bounce", function (e, i) { var s, n, o, a = t(this), r = e.mode, l = "hide" === r, h = "show" === r, c = e.direction || "up", u = e.distance, d = e.times || 5, p = 2 * d + (h || l ? 1 : 0), f = e.duration / p, g = e.easing, m = "up" === c || "down" === c ? "top" : "left", _ = "up" === c || "left" === c, v = 0, b = a.queue().length; for (t.effects.createPlaceholder(a), o = a.css(m), u || (u = a["top" === m ? "outerHeight" : "outerWidth"]() / 3), h && (n = { opacity: 1 }, n[m] = o, a.css("opacity", 0).css(m, _ ? 2 * -u : 2 * u).animate(n, f, g)), l && (u /= Math.pow(2, d - 1)), n = {}, n[m] = o; d > v; v++)s = {}, s[m] = (_ ? "-=" : "+=") + u, a.animate(s, f, g).animate(n, f, g), u = l ? 2 * u : u / 2; l && (s = { opacity: 0 }, s[m] = (_ ? "-=" : "+=") + u, a.animate(s, f, g)), a.queue(i), t.effects.unshift(a, b, p + 1) }), t.effects.define("clip", "hide", function (e, i) { var s, n = {}, o = t(this), a = e.direction || "vertical", r = "both" === a, l = r || "horizontal" === a, h = r || "vertical" === a; s = o.cssClip(), n.clip = { top: h ? (s.bottom - s.top) / 2 : s.top, right: l ? (s.right - s.left) / 2 : s.right, bottom: h ? (s.bottom - s.top) / 2 : s.bottom, left: l ? (s.right - s.left) / 2 : s.left }, t.effects.createPlaceholder(o), "show" === e.mode && (o.cssClip(n.clip), n.clip = s), o.animate(n, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }), t.effects.define("drop", "hide", function (e, i) { var s, n = t(this), o = e.mode, a = "show" === o, r = e.direction || "left", l = "up" === r || "down" === r ? "top" : "left", h = "up" === r || "left" === r ? "-=" : "+=", c = "+=" === h ? "-=" : "+=", u = { opacity: 0 }; t.effects.createPlaceholder(n), s = e.distance || n["top" === l ? "outerHeight" : "outerWidth"](!0) / 2, u[l] = h + s, a && (n.css(u), u[l] = c + s, u.opacity = 1), n.animate(u, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }), t.effects.define("explode", "hide", function (e, i) { function s() { b.push(this), b.length === u * d && n() } function n() { p.css({ visibility: "visible" }), t(b).remove(), i() } var o, a, r, l, h, c, u = e.pieces ? Math.round(Math.sqrt(e.pieces)) : 3, d = u, p = t(this), f = e.mode, g = "show" === f, m = p.show().css("visibility", "hidden").offset(), _ = Math.ceil(p.outerWidth() / d), v = Math.ceil(p.outerHeight() / u), b = []; for (o = 0; u > o; o++)for (l = m.top + o * v, c = o - (u - 1) / 2, a = 0; d > a; a++)r = m.left + a * _, h = a - (d - 1) / 2, p.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -a * _, top: -o * v }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: _, height: v, left: r + (g ? h * _ : 0), top: l + (g ? c * v : 0), opacity: g ? 0 : 1 }).animate({ left: r + (g ? 0 : h * _), top: l + (g ? 0 : c * v), opacity: g ? 1 : 0 }, e.duration || 500, e.easing, s) }), t.effects.define("fade", "toggle", function (e, i) { var s = "show" === e.mode; t(this).css("opacity", s ? 0 : 1).animate({ opacity: s ? 1 : 0 }, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }), t.effects.define("fold", "hide", function (e, i) { var s = t(this), n = e.mode, o = "show" === n, a = "hide" === n, r = e.size || 15, l = /([0-9]+)%/.exec(r), h = !!e.horizFirst, c = h ? ["right", "bottom"] : ["bottom", "right"], u = e.duration / 2, d = t.effects.createPlaceholder(s), p = s.cssClip(), f = { clip: t.extend({}, p) }, g = { clip: t.extend({}, p) }, m = [p[c[0]], p[c[1]]], _ = s.queue().length; l && (r = parseInt(l[1], 10) / 100 * m[a ? 0 : 1]), f.clip[c[0]] = r, g.clip[c[0]] = r, g.clip[c[1]] = 0, o && (s.cssClip(g.clip), d && d.css(t.effects.clipToBox(g)), g.clip = p), s.queue(function (i) { d && d.animate(t.effects.clipToBox(f), u, e.easing).animate(t.effects.clipToBox(g), u, e.easing), i() }).animate(f, u, e.easing).animate(g, u, e.easing).queue(i), t.effects.unshift(s, _, 4) }), t.effects.define("highlight", "show", function (e, i) { var s = t(this), n = { backgroundColor: s.css("backgroundColor") }; "hide" === e.mode && (n.opacity = 0), t.effects.saveStyle(s), s.css({ backgroundImage: "none", backgroundColor: e.color || "#ffff99" }).animate(n, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }), t.effects.define("size", function (e, i) { var s, n, o, a = t(this), r = ["fontSize"], l = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], h = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], c = e.mode, u = "effect" !== c, d = e.scale || "both", p = e.origin || ["middle", "center"], f = a.css("position"), g = a.position(), m = t.effects.scaledDimensions(a), _ = e.from || m, v = e.to || t.effects.scaledDimensions(a, 0); t.effects.createPlaceholder(a), "show" === c && (o = _, _ = v, v = o), n = { from: { y: _.height / m.height, x: _.width / m.width }, to: { y: v.height / m.height, x: v.width / m.width } }, ("box" === d || "both" === d) && (n.from.y !== n.to.y && (_ = t.effects.setTransition(a, l, n.from.y, _), v = t.effects.setTransition(a, l, n.to.y, v)), n.from.x !== n.to.x && (_ = t.effects.setTransition(a, h, n.from.x, _), v = t.effects.setTransition(a, h, n.to.x, v))), ("content" === d || "both" === d) && n.from.y !== n.to.y && (_ = t.effects.setTransition(a, r, n.from.y, _), v = t.effects.setTransition(a, r, n.to.y, v)), p && (s = t.effects.getBaseline(p, m), _.top = (m.outerHeight - _.outerHeight) * s.y + g.top, _.left = (m.outerWidth - _.outerWidth) * s.x + g.left, v.top = (m.outerHeight - v.outerHeight) * s.y + g.top, v.left = (m.outerWidth - v.outerWidth) * s.x + g.left), a.css(_), ("content" === d || "both" === d) && (l = l.concat(["marginTop", "marginBottom"]).concat(r), h = h.concat(["marginLeft", "marginRight"]), a.find("*[width]").each(function () { var i = t(this), s = t.effects.scaledDimensions(i), o = { height: s.height * n.from.y, width: s.width * n.from.x, outerHeight: s.outerHeight * n.from.y, outerWidth: s.outerWidth * n.from.x }, a = { height: s.height * n.to.y, width: s.width * n.to.x, outerHeight: s.height * n.to.y, outerWidth: s.width * n.to.x }; n.from.y !== n.to.y && (o = t.effects.setTransition(i, l, n.from.y, o), a = t.effects.setTransition(i, l, n.to.y, a)), n.from.x !== n.to.x && (o = t.effects.setTransition(i, h, n.from.x, o), a = t.effects.setTransition(i, h, n.to.x, a)), u && t.effects.saveStyle(i), i.css(o), i.animate(a, e.duration, e.easing, function () { u && t.effects.restoreStyle(i) }) })), a.animate(v, { queue: !1, duration: e.duration, easing: e.easing, complete: function () { var e = a.offset(); 0 === v.opacity && a.css("opacity", _.opacity), u || (a.css("position", "static" === f ? "relative" : f).offset(e), t.effects.saveStyle(a)), i() } }) }), t.effects.define("scale", function (e, i) { var s = t(this), n = e.mode, o = parseInt(e.percent, 10) || (0 === parseInt(e.percent, 10) ? 0 : "effect" !== n ? 0 : 100), a = t.extend(!0, { from: t.effects.scaledDimensions(s), to: t.effects.scaledDimensions(s, o, e.direction || "both"), origin: e.origin || ["middle", "center"] }, e); e.fade && (a.from.opacity = 1, a.to.opacity = 0), t.effects.effect.size.call(this, a, i) }), t.effects.define("puff", "hide", function (e, i) { var s = t.extend(!0, {}, e, { fade: !0, percent: parseInt(e.percent, 10) || 150 }); t.effects.effect.scale.call(this, s, i) }), t.effects.define("pulsate", "show", function (e, i) { var s = t(this), n = e.mode, o = "show" === n, a = "hide" === n, r = o || a, l = 2 * (e.times || 5) + (r ? 1 : 0), h = e.duration / l, c = 0, u = 1, d = s.queue().length; for ((o || !s.is(":visible")) && (s.css("opacity", 0).show(), c = 1); l > u; u++)s.animate({ opacity: c }, h, e.easing), c = 1 - c; s.animate({ opacity: c }, h, e.easing), s.queue(i), t.effects.unshift(s, d, l + 1) }), t.effects.define("shake", function (e, i) { var s = 1, n = t(this), o = e.direction || "left", a = e.distance || 20, r = e.times || 3, l = 2 * r + 1, h = Math.round(e.duration / l), c = "up" === o || "down" === o ? "top" : "left", u = "up" === o || "left" === o, d = {}, p = {}, f = {}, g = n.queue().length; for (t.effects.createPlaceholder(n), d[c] = (u ? "-=" : "+=") + a, p[c] = (u ? "+=" : "-=") + 2 * a, f[c] = (u ? "-=" : "+=") + 2 * a, n.animate(d, h, e.easing); r > s; s++)n.animate(p, h, e.easing).animate(f, h, e.easing); n.animate(p, h, e.easing).animate(d, h / 2, e.easing).queue(i), t.effects.unshift(n, g, l + 1) }), t.effects.define("slide", "show", function (e, i) { var s, n, o = t(this), a = { up: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], right: ["left", "right"] }, r = e.mode, l = e.direction || "left", h = "up" === l || "down" === l ? "top" : "left", c = "up" === l || "left" === l, u = e.distance || o["top" === h ? "outerHeight" : "outerWidth"](!0), d = {}; t.effects.createPlaceholder(o), s = o.cssClip(), n = o.position()[h], d[h] = (c ? -1 : 1) * u + n, d.clip = o.cssClip(), d.clip[a[l][1]] = d.clip[a[l][0]], "show" === r && (o.cssClip(d.clip), o.css(h, d[h]), d.clip = s, d[h] = n), o.animate(d, { queue: !1, duration: e.duration, easing: e.easing, complete: i }) }); var v; t.uiBackCompat !== !1 && (v = t.effects.define("transfer", function (e, i) { t(this).transfer(e, i) }))
});


//CUSTOM JQUERY BELOW

// jQuery outside events - v1.1 - 3/16/2010 http://benalman.com/projects/jquery-outside-events-plugin/ Copyright (c) 2010 "Cowboy" Ben Alman Dual licensed under the MIT and GPL licenses. http://benalman.com/about/license/
(function ($, c, b) { $.map("click dblclick mousemove mousedown mouseup mouseover mouseout change select submit keydown keypress keyup".split(" "), function (d) { a(d) }); a("focusin", "focus" + b); a("focusout", "blur" + b); $.addOutsideEvent = a; function a(g, e) { e = e || g + b; var d = $(), h = g + "." + e + "-special-event"; $.event.special[e] = { setup: function () { d = d.add(this); if (d.length === 1) { $(c).on(h, f) } }, teardown: function () { d = d.not(this); if (d.length === 0) { $(c).off(h) } }, add: function (i) { var j = i.handler; i.handler = function (l, k) { l.target = k; j.apply(this, arguments) } } }; function f(i) { $(d).each(function () { var j = $(this); if (this !== i.target && !j.has(i.target).length) { j.triggerHandler(e, [i.target]) } }) } } })(jQuery, document, "outside");

// jQuery resize event - v1.1 - 3/14/2010 http://benalman.com/projects/jquery-resize-plugin/ Copyrightg (c) 2010 "Cowboy" Ben Alman Dual licensed under the MIT and GPL licenses. (Minified)   - http://github.com/cowboy/jquery-resize/raw/master/jquery.ba-resize.min.js (1.0kb) http://benalman.com/about/license/
(function ($, h, c) { var a = $([]), e = $.resize = $.extend($.resize, {}), i, k = "setTimeout", j = "resize", d = j + "-special-event", b = "delay", f = "throttleWindow"; e[b] = 250; e[f] = true; $.event.special[j] = { setup: function () { if (!e[f] && this[k]) { return false } var l = $(this); a = a.add(l); $.data(this, d, { w: l.width(), h: l.height() }); if (a.length === 1) { g() } }, teardown: function () { if (!e[f] && this[k]) { return false } var l = $(this); a = a.not(l); l.removeData(d); if (!a.length) { clearTimeout(i) } }, add: function (l) { if (!e[f] && this[k]) { return false } var n; function m(s, o, p) { var q = $(this), r = $.data(this, d); r.w = o !== c ? o : q.width(); r.h = p !== c ? p : q.height(); n.apply(this, arguments) } if ($.isFunction(l)) { n = l; return m } else { n = l.handler; l.handler = m } } }; function g() { i = h[k](function () { a.each(function () { var n = $(this), m = n.width(), l = n.height(), o = $.data(this, d); if (m !== o.w || l !== o.h) { n.trigger(j, [o.w = m, o.h = l]) } }); g() }, e[b]) } })(jQuery, this);

// Cookie plugin - Copyright (c) 2006 Klaus Hartl (stilbuero.de) - Dual licensed under the MIT and GPL licenses:http://www.opensource.org/licenses/mit-license.php http://www.gnu.org/licenses/gpl.html @author Klaus Hartl/klaus.hartl@stilbuero.de
jQuery.cookie = function (name, value, options) { if (typeof value != "undefined") { options = options || {}; if (value === null) { value = ""; options.expires = -1 } var expires = ""; if (options.expires && (typeof options.expires == "number" || options.expires.toUTCString)) { var date; if (typeof options.expires == "number") { date = new Date(); date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000)) } else { date = options.expires } expires = "; expires=" + date.toUTCString() } var path = options.path ? "; path=" + (options.path) : ""; var domain = options.domain ? "; domain=" + (options.domain) : ""; var secure = options.secure ? "; secure" : ""; document.cookie = [name, "=", encodeURIComponent(value), expires, path, domain, secure].join("") } else { var cookieValue = null; if (document.cookie && document.cookie != "") { var cookies = document.cookie.split(";"); for (var i = 0; i < cookies.length; i++) { var cookie = jQuery.trim(cookies[i]); if (cookie.substring(0, name.length + 1) == (name + "=")) { cookieValue = decodeURIComponent(cookie.substring(name.length + 1)); break } } } return cookieValue } };
jQuery.fn.cleanWhitespace = function () {
    this.contents().filter(
        function () { return (this.nodeType == 3 && !/\S/.test(this.nodeValue)); })
        .remove();
    return this;
}

// #1553
jQuery.fn.mvCleanAllInlineEvents = function () {
    return this.each(function () {
        var elemAttributes = $.map(this.attributes, function (it) {
            return it.name;
        });
        var jQueryElem = $(this);
        $.each(elemAttributes, function (i, it) {
            if (it.toLowerCase().startsWith("on") ||
                it.toLowerCase().startsWith("href") ||
                it.toLowerCase().startsWith("src")) { jQueryElem.removeAttr(it) }
        });
    });
}

// jQuery Validation Plugin v1.13.1 http://jqueryvalidation.org/ Copyright (c) 2014 Jörn Zaefferer Released under the MIT license
!function (t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery)
}(function (t) {

    t.extend(t.fn, {

        validate: function (e) {
            if (this.length) { var i = t.data(this[0], "validator"); return i || (this.attr("novalidate", "novalidate"), i = new t.validator(e, this[0]), t.data(this[0], "validator", i), i.settings.onsubmit && (this.validateDelegate(":submit", "click", function (e) { i.settings.submitHandler && (i.submitButton = e.target), t(e.target).hasClass("cancel") && (i.cancelSubmit = !0), void 0 !== t(e.target).attr("formnovalidate") && (i.cancelSubmit = !0) }), this.on('submit', function (e) { function s() { var s, r; return !i.settings.submitHandler || (i.submitButton && (s = t("<input type='hidden'/>").attr("name", i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)), r = i.settings.submitHandler.call(i, i.currentForm, e), i.submitButton && s.remove(), void 0 !== r && r) } return i.settings.debug && e.preventDefault(), i.cancelSubmit ? (i.cancelSubmit = !1, s()) : i.form() ? i.pendingRequest ? (i.formSubmitted = !0, !1) : s() : (i.focusInvalid(), !1) })), i) } e && e.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing.")
        },

        valid: function () {
            var e, i;
            return t(this[0]).is("form") ? e = this.validate().form() : (e = !0, i = t(this[0].form).validate(), this.each(function () { e = i.element(this) && e })), e
        },

        removeAttrs: function (e) {
            var i = {}, s = this; return t.each(e.split(/\s/), function (t, e) { i[e] = s.attr(e), s.removeAttr(e) }), i
        },

        rules: function (e, i) {
            var s, r, n, a, o, u, l = this[0]; if (e) switch (s = t.data(l.form, "validator").settings, r = s.rules, n = t.validator.staticRules(l), e) { case "add": t.extend(n, t.validator.normalizeRule(i)), delete n.messages, r[l.name] = n, i.messages && (s.messages[l.name] = t.extend(s.messages[l.name], i.messages)); break; case "remove": return i ? (u = {}, t.each(i.split(/\s/), function (e, i) { u[i] = n[i], delete n[i], "required" === i && t(l).removeAttr("aria-required") }), u) : (delete r[l.name], n) } return (a = t.validator.normalizeRules(t.extend({}, t.validator.classRules(l), t.validator.attributeRules(l), t.validator.dataRules(l), t.validator.staticRules(l)), l)).required && (o = a.required, delete a.required, a = t.extend({ required: o }, a), t(l).attr("aria-required", "true")), a.remote && (o = a.remote, delete a.remote, a = t.extend(a, { remote: o })), a
        }

    }),

        t.extend(t.expr.pseudos, {

            blank: function (e) {
                return !t.trim("" + t(e).val())
            },

            filled: function (e) {
                return !!t.trim("" + t(e).val())
            },

            unchecked: function (e) {
                return !t(e).prop("checked")
            }

        }),

        t.validator = function (e, i) {
            this.settings = t.extend(!0, {}, t.validator.defaults, e), this.currentForm = i, this.init()
        },

        t.validator.format = function (e, i) {
            return 1 === arguments.length ? function () { var i = t.makeArray(arguments); return i.unshift(e), t.validator.format.apply(this, i) } : (arguments.length > 2 && i.constructor !== Array && (i = t.makeArray(arguments).slice(1)), i.constructor !== Array && (i = [i]), t.each(i, function (t, i) { e = e.replace(new RegExp("\\{" + t + "\\}", "g"), function () { return i }) }), e)
        },

        t.extend(t.validator, {
            defaults: {
                messages: {},
                groups: {},
                rules: {},
                errorClass: "error",
                validClass: "valid",
                errorElement: "label",
                focusCleanup: !1,
                focusInvalid: !0,
                errorContainer: t([]),
                errorLabelContainer: t([]),
                onsubmit: !0,
                ignore: ":hidden",
                ignoreTitle: !1,
                onfocusin: function (t) {
                    this.lastActive = t, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, t, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(t)))
                },
                onfocusout: function (t) {
                    this.checkable(t) || !(t.name in this.submitted) && this.optional(t) || this.element(t)
                },
                onkeyup: function (t, e) {
                    9 === e.which && "" === this.elementValue(t) || (t.name in this.submitted || t === this.lastElement) && this.element(t)
                },
                onclick: function (t) {
                    t.name in this.submitted ? this.element(t) : t.parentNode.name in this.submitted && this.element(t.parentNode)
                },
                highlight: function (e, i, s) {
                    "radio" === e.type ? this.findByName(e.name).addClass(i).removeClass(s) : t(e).addClass(i).removeClass(s)
                },
                unhighlight: function (e, i, s) {
                    "radio" === e.type ? this.findByName(e.name).removeClass(i).addClass(s) : t(e).removeClass(i).addClass(s)
                }
            },
            setDefaults: function (e) {
                t.extend(t.validator.defaults, e)
            },
            messages: {
                required: "This field is required.",
                remote: "Please fix this field.",
                email: "Please enter a valid email address.",
                url: "Please enter a valid URL.",
                date: "Please enter a valid date.",
                dateISO: "Please enter a valid date ( ISO ).",
                number: "Please enter a valid number.",
                digits: "Please enter only digits.",
                creditcard: "Please enter a valid credit card number.",
                equalTo: "Please enter the same value again.",
                maxlength: t.validator.format("Please enter no more than {0} characters."),
                minlength: t.validator.format("Please enter at least {0} characters."),
                rangelength: t.validator.format("Please enter a value between {0} and {1} characters long."),
                range: t.validator.format("Please enter a value between {0} and {1}."),
                max: t.validator.format("Please enter a value less than or equal to {0}."),
                min: t.validator.format("Please enter a value greater than or equal to {0}.")
            }, autoCreateRanges: !1,
            prototype: {
                init: function () {
                    function e(e) { var i = t.data(this[0].form, "validator"), s = "on" + e.type.replace(/^validate/, ""), r = i.settings; r[s] && !this.is(r.ignore) && r[s].call(i, this[0], e) } this.labelContainer = t(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || t(this.currentForm), this.containers = t(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset(); var i, s = this.groups = {}; t.each(this.settings.groups, function (e, i) { "string" == typeof i && (i = i.split(/\s/)), t.each(i, function (t, i) { s[i] = e }) }), i = this.settings.rules, t.each(i, function (e, s) { i[e] = t.validator.normalizeRule(s) }), t(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']", "focusin focusout keyup", e).validateDelegate("select, option, [type='radio'], [type='checkbox']", "click", e), this.settings.invalidHandler && t(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler), t(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true")
                },
                form: function () {
                    return this.checkForm(), t.extend(this.submitted, this.errorMap), this.invalid = t.extend({}, this.errorMap), this.valid() || t(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid()
                },
                checkForm: function () {
                    this.prepareForm(); for (var t = 0, e = this.currentElements = this.elements(); e[t]; t++) this.check(e[t]); return this.valid()
                },
                element: function (e) {
                    var i = this.clean(e), s = this.validationTargetFor(i), r = !0; return this.lastElement = s, void 0 === s ? delete this.invalid[i.name] : (this.prepareElement(s), this.currentElements = t(s), (r = !1 !== this.check(s)) ? delete this.invalid[s.name] : this.invalid[s.name] = !0), t(e).attr("aria-invalid", !r), this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), r
                },
                showErrors: function (e) {
                    if (e) { t.extend(this.errorMap, e), this.errorList = []; for (var i in e) this.errorList.push({ message: e[i], element: this.findByName(i)[0] }); this.successList = t.grep(this.successList, function (t) { return !(t.name in e) }) } this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
                },
                resetForm: function () {
                    t.fn.resetForm && t(this.currentForm).resetForm(), this.submitted = {}, this.lastElement = null, this.prepareForm(), this.hideErrors(), this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid")
                },
                numberOfInvalids: function () {
                    return this.objectLength(this.invalid)
                },
                objectLength: function (t) {
                    var e, i = 0; for (e in t) i++; return i
                },
                hideErrors: function () {
                    this.hideThese(this.toHide)
                },
                hideThese: function (t) {
                    t.not(this.containers).text(""), this.addWrapper(t).hide()
                },
                valid: function () {
                    return 0 === this.length()
                },
                size: function () {
                    return this.errorList.length
                },
                length: function () {
                    return this.errorList.length
                },
                focusInvalid: function () {
                    if (this.settings.focusInvalid) try { t(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").trigger('focus').trigger("focusin") } catch (t) { }
                },
                findLastActive: function () {
                    var e = this.lastActive; return e && 1 === t.grep(this.errorList, function (t) { return t.element.name === e.name }).length && e
                },
                elements: function () {
                    var e = this, i = {}; return t(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled], [readonly]").not(this.settings.ignore).filter(function () { return !this.name && e.settings.debug && window.console && console.error("%o has no name assigned", this), !(this.name in i || !e.objectLength(t(this).rules())) && (i[this.name] = !0, !0) })
                },
                clean: function (e) {
                    return t(e)[0]
                },
                errors: function () {
                    var e = this.settings.errorClass.split(" ").join("."); return t(this.settings.errorElement + "." + e, this.errorContext)
                },
                reset: function () {
                    this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = t([]), this.toHide = t([]), this.currentElements = t([])
                },
                prepareForm: function () {
                    this.reset(), this.toHide = this.errors().add(this.containers)
                },
                prepareElement: function (t) {
                    this.reset(), this.toHide = this.errorsFor(t)
                },
                elementValue: function (e) {
                    var i, s = t(e), r = e.type; return "radio" === r || "checkbox" === r ? t("input[name='" + e.name + "']:checked").val() : "number" === r && void 0 !== e.validity ? !e.validity.badInput && s.val() : (i = s.val(), "string" == typeof i ? i.replace(/\r/g, "") : i)
                },
                check: function (e) {
                    e = this.validationTargetFor(this.clean(e)); var i, s, r, n = t(e).rules(), a = t.map(n, function (t, e) { return e }).length, o = !1, u = this.elementValue(e); for (s in n) { r = { method: s, parameters: n[s] }; try { if ("dependency-mismatch" === (i = t.validator.methods[s].call(this, u, e, r.parameters)) && 1 === a) { o = !0; continue } if (o = !1, "pending" === i) return void (this.toHide = this.toHide.not(this.errorsFor(e))); if (!i) return this.formatAndAdd(e, r), !1 } catch (t) { throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + e.id + ", check the '" + r.method + "' method.", t), t } } if (!o) return this.objectLength(n) && this.successList.push(e), !0
                },
                customDataMessage: function (e, i) {
                    return t(e).data("msg" + i.charAt(0).toUpperCase() + i.substring(1).toLowerCase()) || t(e).data("msg")
                },
                customMessage: function (t, e) {
                    var i = this.settings.messages[t]; return i && (i.constructor === String ? i : i[e])
                },
                findDefined: function () {
                    for (var t = 0; t < arguments.length; t++) if (void 0 !== arguments[t]) return arguments[t]
                },
                defaultMessage: function (e, i) {
                    return this.findDefined(this.customMessage(e.name, i), this.customDataMessage(e, i), !this.settings.ignoreTitle && e.title || void 0, t.validator.messages[i], "<strong>Warning: No message defined for " + e.name + "</strong>")
                },
                formatAndAdd: function (e, i) {
                    var s = this.defaultMessage(e, i.method), r = /\$?\{(\d+)\}/g; "function" == typeof s ? s = s.call(this, i.parameters, e) : r.test(s) && (s = t.validator.format(s.replace(r, "{$1}"), i.parameters)), this.errorList.push({ message: s, element: e, method: i.method }), this.errorMap[e.name] = s, this.submitted[e.name] = s
                },
                addWrapper: function (t) {
                    return this.settings.wrapper && (t = t.add(t.parent(this.settings.wrapper))), t
                },
                defaultShowErrors: function () {
                    var t, e, i; for (t = 0; this.errorList[t]; t++) i = this.errorList[t], this.settings.highlight && this.settings.highlight.call(this, i.element, this.settings.errorClass, this.settings.validClass), this.showLabel(i.element, i.message); if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (t = 0; this.successList[t]; t++) this.showLabel(this.successList[t]); if (this.settings.unhighlight) for (t = 0, e = this.validElements(); e[t]; t++) this.settings.unhighlight.call(this, e[t], this.settings.errorClass, this.settings.validClass); this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show()
                },
                validElements: function () {
                    return this.currentElements.not(this.invalidElements())
                },
                invalidElements: function () {
                    return t(this.errorList).map(function () { return this.element })
                },
                showLabel: function (e, i) {
                    var s, r, n, a = this.errorsFor(e), o = this.idOrName(e), u = t(e).attr("aria-describedby"); a.length ? (a.removeClass(this.settings.validClass).addClass(this.settings.errorClass), a.html(i)) : (s = a = t("<" + this.settings.errorElement + ">").attr("id", o + "-error").addClass(this.settings.errorClass).html(i || ""), this.settings.wrapper && (s = a.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(s) : this.settings.errorPlacement ? this.settings.errorPlacement(s, t(e)) : s.insertAfter(e), a.is("label") ? a.attr("for", o) : 0 === a.parents("label[for='" + o + "']").length && (n = a.attr("id").replace(/(:|\.|\[|\])/g, "\\$1"), u ? u.match(new RegExp("\\b" + n + "\\b")) || (u += " " + n) : u = n, t(e).attr("aria-describedby", u), (r = this.groups[e.name]) && t.each(this.groups, function (e, i) { i === r && t("[name='" + e + "']", this.currentForm).attr("aria-describedby", a.attr("id")) }))), !i && this.settings.success && (a.text(""), "string" == typeof this.settings.success ? a.addClass(this.settings.success) : this.settings.success(a, e)), this.toShow = this.toShow.add(a)
                },
                errorsFor: function (e) {
                    var i = this.idOrName(e), s = t(e).attr("aria-describedby"), r = "label[for='" + i + "'], label[for='" + i + "'] *"; return s && (r = r + ", #" + s.replace(/\s+/g, ", #")), this.errors().filter(r)
                },
                idOrName: function (t) {
                    return this.groups[t.name] || (this.checkable(t) ? t.name : t.id || t.name)
                },
                validationTargetFor: function (e) {
                    return this.checkable(e) && (e = this.findByName(e.name)), t(e).not(this.settings.ignore)[0]
                },
                checkable: function (t) {
                    return /radio|checkbox/i.test(t.type)
                },
                findByName: function (e) {
                    return t(this.currentForm).find("[name='" + e + "']")
                },
                getLength: function (e, i) {
                    switch (i.nodeName.toLowerCase()) { case "select": return t("option:selected", i).length; case "input": if (this.checkable(i)) return this.findByName(i.name).filter(":checked").length } return e.length
                },
                depend: function (t, e) {
                    return !this.dependTypes[typeof t] || this.dependTypes[typeof t](t, e)
                },
                dependTypes: {
                    boolean: function (t) {
                        return t
                    },
                    string: function (e, i) {
                        return !!t(e, i.form).length
                    },
                    function: function (t, e) { return t(e) }
                },
                optional: function (e) {
                    var i = this.elementValue(e); return !t.validator.methods.required.call(this, i, e) && "dependency-mismatch"
                },
                startRequest: function (t) {
                    this.pending[t.name] || (this.pendingRequest++ , this.pending[t.name] = !0)
                },
                stopRequest: function (e, i) {
                    --this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[e.name], i && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (t(this.currentForm).trigger('submit'), this.formSubmitted = !1) : !i && 0 === this.pendingRequest && this.formSubmitted && (t(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
                },
                previousValue: function (e) {
                    return t.data(e, "previousValue") || t.data(e, "previousValue", { old: null, valid: !0, message: this.defaultMessage(e, "remote") })
                }
            },
            classRuleSettings: {
                required: { required: !0 },
                email: { email: !0 },
                url: { url: !0 },
                date: { date: !0 },
                dateISO: { dateISO: !0 },
                number: { number: !0 },
                digits: { digits: !0 },
                creditcard: { creditcard: !0 }
            },
            addClassRules: function (e, i) {
                e.constructor === String ? this.classRuleSettings[e] = i : t.extend(this.classRuleSettings, e)
            },
            classRules: function (e) {
                var i = {}, s = t(e).attr("class"); return s && t.each(s.split(" "), function () { this in t.validator.classRuleSettings && t.extend(i, t.validator.classRuleSettings[this]) }), i
            },
            attributeRules: function (e) {
                var i, s, r = {}, n = t(e), a = e.getAttribute("type"); for (i in t.validator.methods) "required" === i ? ("" === (s = e.getAttribute(i)) && (s = !0), s = !!s) : s = n.attr(i), /min|max/.test(i) && (null === a || /number|range|text/.test(a)) && (s = Number(s)), s || 0 === s ? r[i] = s : a === i && "range" !== a && (r[i] = !0); return r.maxlength && /-1|2147483647|524288/.test(r.maxlength) && delete r.maxlength, r
            },
            dataRules: function (e) {
                var i, s, r = {}, n = t(e); for (i in t.validator.methods) void 0 !== (s = n.data("rule" + i.charAt(0).toUpperCase() + i.substring(1).toLowerCase())) && (r[i] = s); return r
            },
            staticRules: function (e) {
                var i = {}, s = t.data(e.form, "validator"); return s.settings.rules && (i = t.validator.normalizeRule(s.settings.rules[e.name]) || {}), i
            },
            normalizeRules: function (e, i) {
                return t.each(e, function (s, r) { if (!1 !== r) { if (r.param || r.depends) { var n = !0; switch (typeof r.depends) { case "string": n = !!t(r.depends, i.form).length; break; case "function": n = r.depends.call(i, i) } n ? e[s] = void 0 === r.param || r.param : delete e[s] } } else delete e[s] }), t.each(e, function (s, r) { e[s] = t.isFunction(r) ? r(i) : r }), t.each(["minlength", "maxlength"], function () { e[this] && (e[this] = Number(e[this])) }), t.each(["rangelength", "range"], function () { var i; e[this] && (t.isArray(e[this]) ? e[this] = [Number(e[this][0]), Number(e[this][1])] : "string" == typeof e[this] && (i = e[this].replace(/[\[\]]/g, "").split(/[\s,]+/), e[this] = [Number(i[0]), Number(i[1])])) }), t.validator.autoCreateRanges && (null != e.min && null != e.max && (e.range = [e.min, e.max], delete e.min, delete e.max), null != e.minlength && null != e.maxlength && (e.rangelength = [e.minlength, e.maxlength], delete e.minlength, delete e.maxlength)), e
            },
            normalizeRule: function (e) {
                if ("string" == typeof e) { var i = {}; t.each(e.split(/\s/), function () { i[this] = !0 }), e = i } return e
            },
            addMethod: function (e, i, s) {
                t.validator.methods[e] = i, t.validator.messages[e] = void 0 !== s ? s : t.validator.messages[e], i.length < 3 && t.validator.addClassRules(e, t.validator.normalizeRule(e))
            },
            methods: {
                required: function (e, i, s) { if (!this.depend(s, i)) return "dependency-mismatch"; if ("select" === i.nodeName.toLowerCase()) { var r = t(i).val(); return r && r.length > 0 } return this.checkable(i) ? this.getLength(e, i) > 0 : t.trim(e).length > 0 }, email: function (t, e) { return this.optional(e) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t) }, url: function (t, e) { return this.optional(e) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t) }, date: function (t, e) { return this.optional(e) || !/Invalid|NaN/.test(new Date(t).toString()) }, dateISO: function (t, e) { return this.optional(e) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t) }, number: function (t, e) { return this.optional(e) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t) }, digits: function (t, e) { return this.optional(e) || /^\d+$/.test(t) }, creditcard: function (t, e) { if (this.optional(e)) return "dependency-mismatch"; if (/[^0-9 \-]+/.test(t)) return !1; var i, s, r = 0, n = 0, a = !1; if ((t = t.replace(/\D/g, "")).length < 13 || t.length > 19) return !1; for (i = t.length - 1; i >= 0; i--) s = t.charAt(i), n = parseInt(s, 10), a && (n *= 2) > 9 && (n -= 9), r += n, a = !a; return r % 10 == 0 }, minlength: function (e, i, s) { var r = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || r >= s }, maxlength: function (e, i, s) { var r = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || r <= s }, rangelength: function (e, i, s) { var r = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || r >= s[0] && r <= s[1] }, min: function (t, e, i) { return this.optional(e) || t >= i }, max: function (t, e, i) { return this.optional(e) || t <= i }, range: function (t, e, i) { return this.optional(e) || t >= i[0] && t <= i[1] }, equalTo: function (e, i, s) { var r = t(s); return this.settings.onfocusout && r.off(".validate-equalTo").on("blur.validate-equalTo", function () { t(i).valid() }), e === r.val() }, remote: function (e, i, s) { if (this.optional(i)) return "dependency-mismatch"; var r, n, a = this.previousValue(i); return this.settings.messages[i.name] || (this.settings.messages[i.name] = {}), a.originalMessage = this.settings.messages[i.name].remote, this.settings.messages[i.name].remote = a.message, s = "string" == typeof s && { url: s } || s, a.old === e ? a.valid : (a.old = e, r = this, this.startRequest(i), n = {}, n[i.name] = e, t.ajax(t.extend(!0, { url: s, mode: "abort", port: "validate" + i.name, dataType: "json", data: n, context: r.currentForm, success: function (s) { var n, o, u, l = !0 === s || "true" === s; r.settings.messages[i.name].remote = a.originalMessage, l ? (u = r.formSubmitted, r.prepareElement(i), r.formSubmitted = u, r.successList.push(i), delete r.invalid[i.name], r.showErrors()) : (n = {}, o = s || r.defaultMessage(i, "remote"), n[i.name] = a.message = t.isFunction(o) ? o(e) : o, r.invalid[i.name] = !0, r.showErrors(n)), a.valid = l, r.stopRequest(i, l) } }, s)), "pending") }
            }
        }),

        t.format = function () {
            throw "$.format has been deprecated. Please use $.validator.format instead."
        };

    var e, i = {};
    t.ajaxPrefilter ? t.ajaxPrefilter(function (t, e, s) { var r = t.port; "abort" === t.mode && (i[r] && i[r].abort(), i[r] = s) }) : (e = t.ajax, t.ajax = function (s) { var r = ("mode" in s ? s : t.ajaxSettings).mode, n = ("port" in s ? s : t.ajaxSettings).port; return "abort" === r ? (i[n] && i[n].abort(), i[n] = e.apply(this, arguments), i[n]) : e.apply(this, arguments) }), t.extend(t.fn, { validateDelegate: function (e, i, s) { return this.on(i, function (i) { var r = t(i.target); if (r.is(e)) return s.apply(r, arguments) }) } })

});

!function (t) { "function" == typeof define && define.amd ? define(["jquery", "./jquery.validate"], t) : t(jQuery) }(function (t) { !function () { function e(t) { return t.replace(/<.[^<>]*?>/g, " ").replace(/&nbsp;|&#160;/gi, " ").replace(/[.(),;:!?%#$'\"_+=\/\-“”’]*/g, "") } t.validator.addMethod("maxWords", function (t, a, d) { return this.optional(a) || e(t).match(/\b\w+\b/g).length <= d }, t.validator.format("Please enter {0} words or less.")), t.validator.addMethod("minWords", function (t, a, d) { return this.optional(a) || e(t).match(/\b\w+\b/g).length >= d }, t.validator.format("Please enter at least {0} words.")), t.validator.addMethod("rangeWords", function (t, a, d) { var i = e(t), n = /\b\w+\b/g; return this.optional(a) || i.match(n).length >= d[0] && i.match(n).length <= d[1] }, t.validator.format("Please enter between {0} and {1} words.")) }(), t.validator.addMethod("accept", function (e, a, d) { var i, n = "string" == typeof d ? d.replace(/\s/g, "").replace(/,/g, "|") : "image/*", r = this.optional(a); if (r) return r; if ("file" === t(a).attr("type") && (n = n.replace(/\*/g, ".*"), a.files && a.files.length)) for (i = 0; i < a.files.length; i++)if (!a.files[i].type.match(new RegExp(".?(" + n + ")$", "i"))) return !1; return !0 }, t.validator.format("Please enter a value with a valid mimetype.")), t.validator.addMethod("alphanumeric", function (t, e) { return this.optional(e) || /^\w+$/i.test(t) }, "Letters, numbers, and underscores only please"), t.validator.addMethod("bankaccountNL", function (t, e) { if (this.optional(e)) return !0; if (!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(t)) return !1; var a, d = t.replace(/ /g, ""), i = 0, n = d.length; for (a = 0; a < n; a++)i += (n - a) * d.substring(a, a + 1); return i % 11 == 0 }, "Please specify a valid bank account number"), t.validator.addMethod("bankorgiroaccountNL", function (e, a) { return this.optional(a) || t.validator.methods.bankaccountNL.call(this, e, a) || t.validator.methods.giroaccountNL.call(this, e, a) }, "Please specify a valid bank or giro account number"), t.validator.addMethod("bic", function (t, e) { return this.optional(e) || /^([A-Z]{6}[A-Z2-9][A-NP-Z1-2])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test(t) }, "Please specify a valid BIC code"), t.validator.addMethod("cifES", function (t) { "use strict"; var e, a, d, i, n, r, o = []; if (!(t = t.toUpperCase()).match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)")) return !1; for (d = 0; d < 9; d++)o[d] = parseInt(t.charAt(d), 10); for (a = o[2] + o[4] + o[6], i = 1; i < 8; i += 2)r = (n = (2 * o[i]).toString()).charAt(1), a += parseInt(n.charAt(0), 10) + ("" === r ? 0 : parseInt(r, 10)); return !!/^[ABCDEFGHJNPQRSUVW]{1}/.test(t) && (a += "", e = 10 - parseInt(a.charAt(a.length - 1), 10), t += e, o[8].toString() === String.fromCharCode(64 + e) || o[8].toString() === t.charAt(t.length - 1)) }, "Please specify a valid CIF number."), t.validator.addMethod("creditcardtypes", function (t, e, a) { if (/[^0-9\-]+/.test(t)) return !1; t = t.replace(/\D/g, ""); var d = 0; return a.mastercard && (d |= 1), a.visa && (d |= 2), a.amex && (d |= 4), a.dinersclub && (d |= 8), a.enroute && (d |= 16), a.discover && (d |= 32), a.jcb && (d |= 64), a.unknown && (d |= 128), a.all && (d = 255), 1 & d && /^(5[12345])/.test(t) ? 16 === t.length : 2 & d && /^(4)/.test(t) ? 16 === t.length : 4 & d && /^(3[47])/.test(t) ? 15 === t.length : 8 & d && /^(3(0[012345]|[68]))/.test(t) ? 14 === t.length : 16 & d && /^(2(014|149))/.test(t) ? 15 === t.length : 32 & d && /^(6011)/.test(t) ? 16 === t.length : 64 & d && /^(3)/.test(t) ? 16 === t.length : 64 & d && /^(2131|1800)/.test(t) ? 15 === t.length : !!(128 & d) }, "Please enter a valid credit card number."), t.validator.addMethod("currency", function (t, e, a) { var d, i = "string" == typeof a, n = i ? a : a[0], r = !!i || a[1]; return n = n.replace(/,/g, ""), n = r ? n + "]" : n + "]?", d = "^[" + n + "([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$", d = new RegExp(d), this.optional(e) || d.test(t) }, "Please specify a valid currency"), t.validator.addMethod("dateFA", function (t, e) { return this.optional(e) || /^[1-4]\d{3}\/((0?[1-6]\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\/(30|([1-2][0-9])|(0?[1-9]))))$/.test(t) }, "Please enter a correct date"), t.validator.addMethod("dateITA", function (t, e) { var a, d, i, n, r, o = !1; return /^\d{1,2}\/\d{1,2}\/\d{4}$/.test(t) ? (a = t.split("/"), d = parseInt(a[0], 10), i = parseInt(a[1], 10), n = parseInt(a[2], 10), o = (r = new Date(n, i - 1, d, 12, 0, 0, 0)).getUTCFullYear() === n && r.getUTCMonth() === i - 1 && r.getUTCDate() === d) : o = !1, this.optional(e) || o }, "Please enter a correct date"), t.validator.addMethod("dateNL", function (t, e) { return this.optional(e) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(t) }, "Please enter a correct date"), t.validator.addMethod("extension", function (t, e, a) { return a = "string" == typeof a ? a.replace(/,/g, "|") : "png|jpe?g|gif", this.optional(e) || t.match(new RegExp(".(" + a + ")$", "i")) }, t.validator.format("Please enter a value with a valid extension.")), t.validator.addMethod("giroaccountNL", function (t, e) { return this.optional(e) || /^[0-9]{1,7}$/.test(t) }, "Please specify a valid giro account number"), t.validator.addMethod("iban", function (t, e) { if (this.optional(e)) return !0; var a, d, i, n, r, o, s, l = t.replace(/ /g, "").toUpperCase(), u = "", c = !0, A = ""; if (!/^([a-zA-Z0-9]{4} ){2,8}[a-zA-Z0-9]{1,4}|[a-zA-Z0-9]{12,34}$/.test(l)) return !1; if (a = l.substring(0, 2), r = { AL: "\\d{8}[\\dA-Z]{16}", AD: "\\d{8}[\\dA-Z]{12}", AT: "\\d{16}", AZ: "[\\dA-Z]{4}\\d{20}", BE: "\\d{12}", BH: "[A-Z]{4}[\\dA-Z]{14}", BA: "\\d{16}", BR: "\\d{23}[A-Z][\\dA-Z]", BG: "[A-Z]{4}\\d{6}[\\dA-Z]{8}", CR: "\\d{17}", HR: "\\d{17}", CY: "\\d{8}[\\dA-Z]{16}", CZ: "\\d{20}", DK: "\\d{14}", DO: "[A-Z]{4}\\d{20}", EE: "\\d{16}", FO: "\\d{14}", FI: "\\d{14}", FR: "\\d{10}[\\dA-Z]{11}\\d{2}", GE: "[\\dA-Z]{2}\\d{16}", DE: "\\d{18}", GI: "[A-Z]{4}[\\dA-Z]{15}", GR: "\\d{7}[\\dA-Z]{16}", GL: "\\d{14}", GT: "[\\dA-Z]{4}[\\dA-Z]{20}", HU: "\\d{24}", IS: "\\d{22}", IE: "[\\dA-Z]{4}\\d{14}", IL: "\\d{19}", IT: "[A-Z]\\d{10}[\\dA-Z]{12}", KZ: "\\d{3}[\\dA-Z]{13}", KW: "[A-Z]{4}[\\dA-Z]{22}", LV: "[A-Z]{4}[\\dA-Z]{13}", LB: "\\d{4}[\\dA-Z]{20}", LI: "\\d{5}[\\dA-Z]{12}", LT: "\\d{16}", LU: "\\d{3}[\\dA-Z]{13}", MK: "\\d{3}[\\dA-Z]{10}\\d{2}", MT: "[A-Z]{4}\\d{5}[\\dA-Z]{18}", MR: "\\d{23}", MU: "[A-Z]{4}\\d{19}[A-Z]{3}", MC: "\\d{10}[\\dA-Z]{11}\\d{2}", MD: "[\\dA-Z]{2}\\d{18}", ME: "\\d{18}", NL: "[A-Z]{4}\\d{10}", NO: "\\d{11}", PK: "[\\dA-Z]{4}\\d{16}", PS: "[\\dA-Z]{4}\\d{21}", PL: "\\d{24}", PT: "\\d{21}", RO: "[A-Z]{4}[\\dA-Z]{16}", SM: "[A-Z]\\d{10}[\\dA-Z]{12}", SA: "\\d{2}[\\dA-Z]{18}", RS: "\\d{18}", SK: "\\d{20}", SI: "\\d{15}", ES: "\\d{20}", SE: "\\d{20}", CH: "\\d{5}[\\dA-Z]{12}", TN: "\\d{20}", TR: "\\d{5}[\\dA-Z]{17}", AE: "\\d{3}\\d{16}", GB: "[A-Z]{4}\\d{14}", VG: "[\\dA-Z]{4}\\d{16}" }, void 0 !== (n = r[a]) && !new RegExp("^[A-Z]{2}\\d{2}" + n + "$", "").test(l)) return !1; for (d = l.substring(4, l.length) + l.substring(0, 4), o = 0; o < d.length; o++)"0" !== (i = d.charAt(o)) && (c = !1), c || (u += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(i)); for (s = 0; s < u.length; s++)A = ("" + A + u.charAt(s)) % 97; return 1 === A }, "Please specify a valid IBAN"), t.validator.addMethod("integer", function (t, e) { return this.optional(e) || /^-?\d+$/.test(t) }, "A positive or negative non-decimal number please"), t.validator.addMethod("ipv4", function (t, e) { return this.optional(e) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(t) }, "Please enter a valid IP v4 address."), t.validator.addMethod("ipv6", function (t, e) { return this.optional(e) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(t) }, "Please enter a valid IP v6 address."), t.validator.addMethod("lettersonly", function (t, e) { return this.optional(e) || /^[a-z]+$/i.test(t) }, "Letters only please"), t.validator.addMethod("letterswithbasicpunc", function (t, e) { return this.optional(e) || /^[a-z\-.,()'"\s]+$/i.test(t) }, "Letters or punctuation only please"), t.validator.addMethod("mobileNL", function (t, e) { return this.optional(e) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(t) }, "Please specify a valid mobile number"), t.validator.addMethod("mobileUK", function (t, e) { return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[1345789]\d{2}|624)\s?\d{3}\s?\d{3})$/) }, "Please specify a valid mobile number"), t.validator.addMethod("nieES", function (t) { "use strict"; return !!(t = t.toUpperCase()).match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)") && (/^[T]{1}/.test(t) ? t[8] === /^[T]{1}[A-Z0-9]{8}$/.test(t) : !!/^[XYZ]{1}/.test(t) && t[8] === "TRWAGMYFPDXBNJZSQVHLCKE".charAt(t.replace("X", "0").replace("Y", "1").replace("Z", "2").substring(0, 8) % 23)) }, "Please specify a valid NIE number."), t.validator.addMethod("nifES", function (t) { "use strict"; return !!(t = t.toUpperCase()).match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)") && (/^[0-9]{8}[A-Z]{1}$/.test(t) ? "TRWAGMYFPDXBNJZSQVHLCKE".charAt(t.substring(8, 0) % 23) === t.charAt(8) : !!/^[KLM]{1}/.test(t) && t[8] === String.fromCharCode(64)) }, "Please specify a valid NIF number."), t.validator.addMethod("nowhitespace", function (t, e) { return this.optional(e) || /^\S+$/i.test(t) }, "No white space please"), t.validator.addMethod("pattern", function (t, e, a) { return !!this.optional(e) || ("string" == typeof a && (a = new RegExp("^(?:" + a + ")$")), a.test(t)) }, "Invalid format."), t.validator.addMethod("phoneNL", function (t, e) { return this.optional(e) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(t) }, "Please specify a valid phone number."), t.validator.addMethod("phoneUK", function (t, e) { return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/) }, "Please specify a valid phone number"), t.validator.addMethod("phoneUS", function (t, e) { return t = t.replace(/\s+/g, ""), this.optional(e) || t.length > 9 && t.match(/^(\+?1-?)?(\([2-9]([02-9]\d|1[02-9])\)|[2-9]([02-9]\d|1[02-9]))-?[2-9]([02-9]\d|1[02-9])-?\d{4}$/) }, "Please specify a valid phone number"), t.validator.addMethod("phonesUK", function (t, e) { return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[1345789]\d{8}|624\d{6})))$/) }, "Please specify a valid uk phone number"), t.validator.addMethod("postalCodeCA", function (t, e) { return this.optional(e) || /^[ABCEGHJKLMNPRSTVXY]\d[A-Z] \d[A-Z]\d$/.test(t) }, "Please specify a valid postal code"), t.validator.addMethod("postalcodeBR", function (t, e) { return this.optional(e) || /^\d{2}.\d{3}-\d{3}?$|^\d{5}-?\d{3}?$/.test(t) }, "Informe um CEP válido."), t.validator.addMethod("postalcodeIT", function (t, e) { return this.optional(e) || /^\d{5}$/.test(t) }, "Please specify a valid postal code"), t.validator.addMethod("postalcodeNL", function (t, e) { return this.optional(e) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(t) }, "Please specify a valid postal code"), t.validator.addMethod("postcodeUK", function (t, e) { return this.optional(e) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(t) }, "Please specify a valid UK postcode"), t.validator.addMethod("require_from_group", function (e, a, d) { var i = t(d[1], a.form), n = i.eq(0), r = n.data("valid_req_grp") ? n.data("valid_req_grp") : t.extend({}, this), o = i.filter(function () { return r.elementValue(this) }).length >= d[0]; return n.data("valid_req_grp", r), t(a).data("being_validated") || (i.data("being_validated", !0), i.each(function () { r.element(this) }), i.data("being_validated", !1)), o }, t.validator.format("Please fill at least {0} of these fields.")), t.validator.addMethod("skip_or_fill_minimum", function (e, a, d) { var i = t(d[1], a.form), n = i.eq(0), r = n.data("valid_skip") ? n.data("valid_skip") : t.extend({}, this), o = i.filter(function () { return r.elementValue(this) }).length, s = 0 === o || o >= d[0]; return n.data("valid_skip", r), t(a).data("being_validated") || (i.data("being_validated", !0), i.each(function () { r.element(this) }), i.data("being_validated", !1)), s }, t.validator.format("Please either skip these fields or fill at least {0} of them.")), jQuery.validator.addMethod("stateUS", function (t, e, a) { var d, i = void 0 === a, n = !i && void 0 !== a.caseSensitive && a.caseSensitive, r = !i && void 0 !== a.includeTerritories && a.includeTerritories, o = !i && void 0 !== a.includeMilitary && a.includeMilitary; return d = r || o ? r && o ? "^(A[AEKLPRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : r ? "^(A[KLRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : "^(A[AEKLPRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$" : "^(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$", d = n ? new RegExp(d) : new RegExp(d, "i"), this.optional(e) || d.test(t) }, "Please specify a valid state"), t.validator.addMethod("strippedminlength", function (e, a, d) { return t(e).text().length >= d }, t.validator.format("Please enter at least {0} characters")), t.validator.addMethod("time", function (t, e) { return this.optional(e) || /^([01]\d|2[0-3])(:[0-5]\d){1,2}$/.test(t) }, "Please enter a valid time, between 00:00 and 23:59"), t.validator.addMethod("time12h", function (t, e) { return this.optional(e) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(t) }, "Please enter a valid time in 12-hour am/pm format"), t.validator.addMethod("url2", function (t, e) { return this.optional(e) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t) }, t.validator.messages.url), t.validator.addMethod("vinUS", function (t) { if (17 !== t.length) return !1; var e, a, d, i, n, r, o = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], s = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9], l = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2], u = 0; for (e = 0; e < 17; e++) { if (i = l[e], d = t.slice(e, e + 1), 8 === e && (r = d), isNaN(d)) { for (a = 0; a < o.length; a++)if (d.toUpperCase() === o[a]) { d = s[a], d *= i, isNaN(r) && 8 === a && (r = o[a]); break } } else d *= i; u += d } return 10 === (n = u % 11) && (n = "X"), n === r }, "The specified vehicle identification number (VIN) is invalid."), t.validator.addMethod("zipcodeUS", function (t, e) { return this.optional(e) || /^\d{5}(-\d{4})?$/.test(t) }, "The specified US ZIP Code is invalid"), t.validator.addMethod("ziprange", function (t, e) { return this.optional(e) || /^90[2-5]\d\{2\}-\d{4}$/.test(t) }, "Your ZIP-code must be in the range 902xx-xxxx to 905xx-xxxx") });

var desktop = false;
var tablet = false;
var mobile = false;

if (window.innerWidth < 384) { mobile = true; tablet = false; desktop = false; }
else if (window.innerWidth < 576) { tablet = true; mobile = false; desktop = false; }
else { desktop = true; mobile = false; tablet = false; }

//Table autocomplete
function isDivHeightVisible(d) {

    var e = $(window).scrollTop(),

        t = e + $(window).height(),

        a = $(d).offset().top,

        i = a + $(d).height();

    return i >= e && a <= t && i <= t && a >= e

}

function isDivWidthVisible(d) {

    var e = $(window).scrollLeft(),

        t = e + $(window).width(),

        a = $(d).offset().left,

        i = a + $(d).width();

    return i >= e && a <= t && i <= t && a >= e

}

!function (d) {

    "use strict";

    d.fn.tautocomplete = function (e, t) {

        function a(e) {

            if (u.ddTextbox.is(":focus")) {

                null == h.ajax.success || "" == h.ajax.success || void 0 === h.ajax.success ? r(e) : d.isFunction(h.ajax.success) && r(h.ajax.success.call(this, e));
            }

            u.ddTextbox.removeClass("LoadingTextbox");

        }

        function i() {

            var d = u.ddTable.find("tbody").find(".selected");

            u.ddTextbox.data("id", d.find("td").eq(0).text());

            var e = d.find("td").eq(1).text();

            e && (u.ddTextbox.data("text", e), u.ddTextbox.val(e)), l(), o()

        }

        function o() {

            d.isFunction(h.onchange) && h.onchange.call(this)
        }

        function n() {

            d.isFunction(h.onshifttabkey) && h.onshifttabkey.call(this)
        }

        function s() {

            d.isFunction(h.onkeyupdown) && h.onkeyupdown.call(this)
        }

        function l() {

            u.ddTable.find(".selected").removeClass("selected"), u.ddDiv.hide(), u.ddTable.hide(), u.ddTextbox.removeClass("inputfocus"), u.ddDiv.removeClass("highlight"), u.ddDiv.css("border", "none"), u.ddTableCaption.hide()
        }

        function c() {

            var d = u.ddTextbox.outerHeight() + 2 + "px 0 0 0",

                e = "0px 0px " + u.ddTextbox.outerHeight() + 2 + "px 0px";

            u.ddDiv.css("top", "0px");

            u.ddDiv.css("margin", d);

            u.ddDiv.css("border", "2px solid #00437D");

            u.ddDiv.css("left", "0px");

            u.ddDiv.addClass("highlight");

            u.ddTable.css("margin", "0");

            u.ddTextbox.addClass("inputfocus");

            u.ddDiv.show();

            u.ddTable.show();

            u.ddTable.height() > u.ddDiv.height() ? u.ddDiv.css("width", u.ddTable.width() + 20 + "px") : u.ddDiv.css("width", u.ddTable.width() + 0 + "px")

            if (!isDivHeightVisible(u.ddDiv)) {

                var t = 0;

                t = u.ddTable.height() > u.ddDiv.height() ? u.ddTextbox.height() * 3.5 : u.ddTextbox.height() * 3.5;

                u.ddDiv.css("top", -1 * (u.ddDiv.height() + u.ddTextbox.height() + t) + "px");

                u.ddTable.css("margin", e);

                isDivHeightVisible(u.ddDiv) || (u.ddDiv.css("top", "0px"), u.ddTable.css("margin", "0"))

            }

            if ($(window).width() < windowMobileProperties.windowWidthForMobile) { u.ddDiv.css("left", -(u.ddDiv.offset().left - windowMobileProperties.padding / 2) + "px") };

            if (!isDivWidthVisible(u.ddDiv) && $(window).width() > windowMobileProperties.windowWidthForMobile) { u.ddDiv.css("left", "-" + (u.ddTable.width() - u.ddTextbox.width() - 20) + "px") };

        }

        function r(d) {

            try {

                u.ddTable.find("tbody").find("tr").remove();
                var e = 0,

                    t = 0,

                    a = null;

                if (null != d)
                    for (e = 0; e < d.length; e++)
                        if (!(e >= 50)) {
                            var i = d[e];
                            a = "", t = 0;
                            for (var o in i) t <= D && (a = a + "<td>" + i[o] + "</td>", t++);
                            u.ddTable.append("<tr>" + a + "</tr>")
                        }

                0 == e && u.ddTableCaption.show(), u.ddTable.find("td:nth-child(1)").hide(), c();

            } catch (d) {

                alert("Error: " + d)

            }

        }

        var windowMobileProperties = { windowWidthForMobile: 400, padding: 20 },

            x, h = d.extend({
                maxwidth: $(window).width() < windowMobileProperties.windowWidthForMobile ? ($(window).width() - windowMobileProperties.padding) + 'px' : $(window).width() / 1.5 + 'px',
                width: $(window).width() < windowMobileProperties.windowWidthForMobile ? $(window).width() + 'px' : $(window).width() / 2 + 'px',
                columns: [],
                onchange: null,
                onkeyupdown: null,
                onshifttabkey: null,
                norecord: "No Records Found",
                dataproperty: null,
                regex: "^[a-zA-Z0-9\b]+$",
                data: null,
                theme: "default",
                delay: 500,
                ajax: null
            }, e);

        [
            ["default", "adropdown"],
            ["classic", "aclassic"],
            ["white", "awhite"]
        ].filter(function (d, e) {
            d[0] != h.theme || (h.theme = d[1])
        });

        var u = {
            ddDiv: d("<div>", {
                style: "width:" + h.width + ";max-width:" + h.maxwidth + ";overflow-x: auto;",
                class: h.theme
            }),
            ddTable: d("<table></tbody></table>", {
                style: "width:" + h.width + ";max-width:" + h.maxwidth
            }),
            ddTableCaption: d("<caption>" + h.norecord + "</caption>"),
            ddTextbox: this
        },

            f = {
                UP: 38,
                DOWN: 40,
                ENTER: 13,
                TAB: 9
            },

            b = {
                columnNA: "Error: Columns Not Defined",
                dataNA: "Error: Data Not Available"
            },

            T = {
                id: function () {
                    return u.ddTextbox.data("id")
                },
                text: function () {
                    return u.ddTextbox.data("text")
                },
                highlightedText: function () {
                    return x
                },
                hideDropDown: function () {
                    l()
                },
                searchdata: function () {
                    return u.ddTextbox.val()
                },
                isNull: function () {
                    return "" == u.ddTextbox.data("id")
                }
            },

            p = function () {
                var d = 0;
                return function (e, t) {
                    clearTimeout(d), d = setTimeout(e, t)
                }
            }(),

            v = !1;

        this.is(":focus") && (v = !0);

        var D = h.columns.length;

        if (this.wrap("<div class='acontainer InlBlock'></div>"), this.after(u.ddTextbox), u.ddTextbox.attr("autocomplete", "off"), u.ddTextbox.css("width", this.width + "px"), u.ddTextbox.css("font-size", this.css("font-size")), null != h.dataproperty)
            for (var g in h.dataproperty) u.ddTextbox.attr("data-" + g, h.dataproperty[g]);

        this.after(u.ddDiv), u.ddDiv.append(u.ddTable), u.ddTable.attr("cellspacing", "0"), u.ddTable.append(u.ddTableCaption);

        for (var w = "<thead><tr>", y = 0; y <= D - 1; y++) w = w + "<th>" + h.columns[y] + "</th>";

        w += "</thead></tr><tbody>", u.ddTable.append(w);

        var m = "",

            C = "";

        if ("" != this.val() && void 0 !== this.val()) {

            var k = this.val().split("#$#");

            m = k[0], C = k[0]

        }

        return u.ddTextbox.attr("data-id", m), u.ddTextbox.attr("data-text", C), u.ddTextbox.val(C), v && u.ddTextbox.trigger('focus'), document, u.ddTextbox.off('keyup.autocomplete').on('keyup.autocomplete', function (e) {
            (e.keyCode < 46 || e.keyCode > 90) && 8 != e.keyCode ? e.preventDefault() : p(function () {
                if ("" != u.ddTextbox.val()) {
                    if (u.ddTableCaption.hide(), u.ddTextbox.addClass("LoadingTextbox"), null != h.ajax) {
                        var e = null;
                        e = d.isFunction(h.ajax.data) ? h.ajax.data.call(this) : t, d.ajax({
                            type: h.ajax.type || "GET",
                            dataType: "json",
                            contentType: h.ajax.contentType || "application/json; charset=utf-8",
                            data: e || null,
                            url: h.ajax.url,
                            success: a,
                            processData: !1,
                            error: function (d, e, t) {
                                u.ddTextbox.removeClass("LoadingTextbox"), alert("Error: " + d.status || " - " || t)
                            }
                        })
                    } else if (d.isFunction(h.data)) {
                        var t = h.data.call(this);
                        r(t)
                    }
                } else l()
            }, h.delay)
        }),
            u.ddTextbox.off('keydown.autocomplete').on('keydown.autocomplete', function (d) {
                var e = u.ddTable.find("tbody");
                var t = e.find(".selected");
                d.keyCode == f.ENTER ? (d.preventDefault(), i()) : d.keyCode == f.TAB ? i() : d.keyCode == f.UP ? (u.ddTable.find(".selected").removeClass("selected"), 0 == t.prev().length ? e.find("tr:last").addClass("selected") : t.prev().addClass("selected")) : d.keyCode == f.DOWN && (e.find(".selected").removeClass("selected"), 0 == t.next().length ? e.find("tr:first").addClass("selected") : (u.ddTable.find(".selected").removeClass("selected"), t.next().addClass("selected"))), d.keyCode != f.UP && d.keyCode != f.DOWN || (x = u.ddTable.find("tr.selected > td:nth-child(2)").text(), s()), d.shiftKey && d.keyCode == f.TAB && (n(), d.preventDefault())
            }).off('focusout.autocomplete').on('focusout.autocomplete', function () {
                if (l(), d(this).val() != d(this).data("text")) {
                    "" == d(this).data("text") && !1, d(this).data("text", ""), d(this).data("id", "")
                }
            }),
            u.ddTable.off("mousedown").on("mousedown", "tr", function () {
                u.ddTable.find(".selected").removeClass("selected");
                d(this).addClass("selected"), i()
            }),
            T
    }
}(jQuery);

/**
 * Basic Color Picker
 * Copyright (c) 2018 Alex Bobkov <lilalex85@gmail.com>
 * Licensed under MIT
 * @author Alexandr Bobkov
 * @version 0.2.1
 */

(function ($) {

    var templates = {
        picker: $('<div class="bcPicker-picker"></div>'),
        palette: $('<div class="bcPicker-palette"></div>'),
        color: $('<div class="bcPicker-color"></div>')
    };

    $.fn.bcPicker = function (options) {

        return this.each(function () {
            var elem = $(this),
                colorSet = $.extend({}, $.fn.bcPicker.defaults, options),
                defaultColor = $.fn.bcPicker.toHex((elem.val().length > 0) ? elem.val() : colorSet.defaultColor),
                picker = templates.picker.clone(),
                palette = templates.palette.clone(),
                color;

            // add position relative to root element
            elem.css('position', 'relative');

            // append picker
            elem.append(picker);
            picker.css('background-color', defaultColor);

            // append palette
            elem.append(palette);

            // assembly color palette
            $.each(colorSet.colors, function (i) {
                color = templates.color.clone();
                color.css('background-color', $.fn.bcPicker.toHex(colorSet.colors[i]));
                palette.append(color);
            });

        });
    }

    $.extend(true, $.fn.bcPicker, {

        toggleColorPalette: function (elem) {
            elem.next().toggle('fast');
        },

        pickColor: function (elem, elemToApplyColorTo) {

            var pickedColor = elem.css('background-color');

            elemToApplyColorTo.css('background-color', pickedColor);

            return $.fn.bcPicker.toHex(pickedColor);

        },

        toHex: function (color) {
            // check if color is standard hex value
            if (color.match(/[0-9A-F]{6}|[0-9A-F]{3}$/i)) {
                return (color.charAt(0) === "#") ? color : ("#" + color);
                // check if color is RGB value -> convert to hex
            } else if (color.match(/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/)) {
                var c = ([parseInt(RegExp.$1, 10), parseInt(RegExp.$2, 10), parseInt(RegExp.$3, 10)]),
                    pad = function (str) {
                        if (str.length < 2) {
                            for (var i = 0, len = 2 - str.length; i < len; i++) {
                                str = '0' + str;
                            }
                        }
                        return str;
                    };
                if (c.length === 3) {
                    var r = pad(c[0].toString(16)),
                        g = pad(c[1].toString(16)),
                        b = pad(c[2].toString(16));
                    return '#' + r + g + b;
                }

            } else {

                return false;

            }

        }

    });


    $.fn.bcPicker.defaults = {

        defaultColor: "000000",

        colors: [
            '000000', '993300', '333300', '000080', '333399', '333333',
            '800000', 'FF6600', '808000', '008000', '008080', '0000FF',
            '666699', '808080', 'FF0000', 'FF9900', '99CC00', '339966',
            '33CCCC', '3366FF', '800080', '999999', 'FF00FF', 'FFCC00',
            'FFFF00', '00FF00', '00FFFF', '00CCFF', '993366', 'C0C0C0',
            'FF99CC', 'FFCC99', 'FFFF99', 'CCFFFF', '99CCFF', 'FFFFFF'
        ],

        // extend default set
        addColors: [],
    };

})(jQuery);


//END OF CUSTOM JQUERY PLUGINS


// Ajax uploader

var qq = qq || {}; qq.extend = function (e, t) { for (var n in t) e[n] = t[n] }, qq.indexOf = function (e, t, n) { if (e.indexOf) return e.indexOf(t, n); n = n || 0; var o = e.length; for (0 > n && (n += o); o > n; n++) if (n in e && e[n] === t) return n; return -1 }, qq.getUniqueId = function () { var e = 0; return function () { return e++ } }(), qq.attach = function (e, t, n) { e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent && e.attachEvent("on" + t, n) }, qq.detach = function (e, t, n) { e.removeEventListener ? e.removeEventListener(t, n, !1) : e.attachEvent && e.detachEvent("on" + t, n) }, qq.preventDefault = function (e) { e.preventDefault ? e.preventDefault() : e.returnValue = !1 }, qq.insertBefore = function (e, t) { t.parentNode.insertBefore(e, t) }, qq.remove = function (e) { e.parentNode.removeChild(e) }, qq.contains = function (e, t) { return e == t ? !0 : e.contains ? e.contains(t) : !!(8 & t.compareDocumentPosition(e)) }, qq.toElement = function () { var e = document.createElement("div"); return function (t) { e.innerHTML = t; var n = e.firstChild; return e.removeChild(n), n } }(), qq.css = function (e, t) { null != t.opacity && "string" != typeof e.style.opacity && "undefined" != typeof e.filters && (t.filter = "alpha(opacity=" + Math.round(100 * t.opacity) + ")"), qq.extend(e.style, t) }, qq.hasClass = function (e, t) { var n = new RegExp("(^| )" + t + "( |$)"); return n.test(e.className) }, qq.addClass = function (e, t) { qq.hasClass(e, t) || (e.className += " " + t) }, qq.removeClass = function (e, t) { var n = new RegExp("(^| )" + t + "( |$)"); e.className = e.className.replace(n, " ").replace(/^\s+|\s+$/g, "") }, qq.setText = function (e, t) { e.innerText = t, e.textContent = t }, qq.children = function (e) { for (var t = [], n = e.firstChild; n;) 1 == n.nodeType && t.push(n), n = n.nextSibling; return t }, qq.getByClass = function (e, t) { if (e.querySelectorAll) return e.querySelectorAll("." + t); for (var n = [], o = e.getElementsByTagName("*"), i = o.length, s = 0; i > s; s++) qq.hasClass(o[s], t) && n.push(o[s]); return n }, qq.obj2url = function (e, t, n) { var o = [], i = "&", s = function (e, n) { var i = t ? /\[\]$/.test(t) ? t : t + "[" + n + "]" : n; "undefined" != i && "undefined" != n && o.push("object" == typeof e ? qq.obj2url(e, i, !0) : "[object Function]" === Object.prototype.toString.call(e) ? encodeURIComponent(i) + "=" + encodeURIComponent(e()) : encodeURIComponent(i) + "=" + encodeURIComponent(e)) }; if (!n && t) i = /\?/.test(t) ? /\?$/.test(t) ? "" : "&" : "?", o.push(t), o.push(qq.obj2url(e)); else if ("[object Array]" === Object.prototype.toString.call(e) && "undefined" != typeof e) for (var a = 0, r = e.length; r > a; ++a) s(e[a], a); else if ("undefined" != typeof e && null !== e && "object" == typeof e) for (var a in e) s(e[a], a); else o.push(encodeURIComponent(t) + "=" + encodeURIComponent(e)); return o.join(i).replace(/^&/, "").replace(/%20/g, "+") }; var qq = qq || {}; qq.FileUploaderBasic = function (e) { this._options = { debug: !1, action: "/server/upload", params: {}, button: null, multiple: !0, maxConnections: 3, allowedExtensions: [], sizeLimit: 0, minSizeLimit: 0, onSubmit: function (e, t) { }, onProgress: function (e, t, n, o) { }, onComplete: function (e, t, n) { }, onCancel: function (e, t) { }, messages: { typeError: "{file} has invalid extension. Only {extensions} are allowed.", sizeError: "{file} is too large, maximum file size is {sizeLimit}.", minSizeError: "{file} is too small, minimum file size is {minSizeLimit}.", emptyError: "{file} is empty, please select files again without it.", onLeave: "The files are being uploaded, if you leave now the upload will be cancelled." }, showMessage: function (e) { alert(e) } }, qq.extend(this._options, e), this._filesInProgress = 0, this._handler = this._createUploadHandler(), this._options.button && (this._button = this._createUploadButton(this._options.button)), this._preventLeaveInProgress() }, qq.FileUploaderBasic.prototype = { setParams: function (e) { this._options.params = e }, getInProgress: function () { return this._filesInProgress }, _createUploadButton: function (e) { var t = this; return new qq.UploadButton({ element: e, multiple: this._options.multiple && qq.UploadHandlerXhr.isSupported(), onChange: function (e) { t._onInputChange(e) } }) }, _createUploadHandler: function () { var e, t = this; e = qq.UploadHandlerXhr.isSupported() ? "UploadHandlerXhr" : "UploadHandlerForm"; var n = new qq[e]({ debug: this._options.debug, action: this._options.action, maxConnections: this._options.maxConnections, onProgress: function (e, n, o, i) { t._onProgress(e, n, o, i), t._options.onProgress(e, n, o, i) }, onComplete: function (e, n, o) { t._onComplete(e, n, o), t._options.onComplete(e, n, o) }, onCancel: function (e, n) { t._onCancel(e, n), t._options.onCancel(e, n) } }); return n }, _preventLeaveInProgress: function () { var e = this; qq.attach(window, "beforeunload", function (t) { if (e._filesInProgress) { var t = t || window.event; return t.returnValue = e._options.messages.onLeave, e._options.messages.onLeave } }) }, _onSubmit: function (e, t) { this._filesInProgress++ }, _onProgress: function (e, t, n, o) { }, _onComplete: function (e, t, n) { this._filesInProgress-- , n.error && this._options.showMessage(n.error) }, _onCancel: function (e, t) { this._filesInProgress-- }, _onInputChange: function (e) { this._handler instanceof qq.UploadHandlerXhr ? this._uploadFileList(e.files) : this._validateFile(e) && this._uploadFile(e), this._button.reset() }, _uploadFileList: function (e) { for (var t = 0; t < e.length; t++) if (!this._validateFile(e[t])) return; for (var t = 0; t < e.length; t++) this._uploadFile(e[t]) }, _uploadFile: function (e) { var t = this._handler.add(e), n = this._handler.getName(t); this._options.onSubmit(t, n) !== !1 && (this._onSubmit(t, n), this._handler.upload(t, this._options.params)) }, _validateFile: function (e) { var t, n; return e.value ? t = e.value.replace(/.*(\/|\\)/, "") : (t = null != e.fileName ? e.fileName : e.name, n = null != e.fileSize ? e.fileSize : e.size), this._isAllowedExtension(t) ? 0 === n ? (this._error("emptyError", t), !1) : n && this._options.sizeLimit && n > this._options.sizeLimit ? (this._error("sizeError", t), !1) : n && n < this._options.minSizeLimit ? (this._error("minSizeError", t), !1) : !0 : (this._error("typeError", t), !1) }, _error: function (e, t) { function n(e, t) { o = o.replace(e, t) } var o = this._options.messages[e]; n("{file}", this._formatFileName(t)), n("{extensions}", this._options.allowedExtensions.join(", ")), n("{sizeLimit}", this._formatSize(this._options.sizeLimit)), n("{minSizeLimit}", this._formatSize(this._options.minSizeLimit)), this._options.showMessage(o) }, _formatFileName: function (e) { return e.length > 33 && (e = e.slice(0, 19) + "..." + e.slice(-13)), e }, _isAllowedExtension: function (e) { var t = -1 !== e.indexOf(".") ? e.replace(/.*[.]/, "").toLowerCase() : "", n = this._options.allowedExtensions; if (!n.length) return !0; for (var o = 0; o < n.length; o++) if (n[o].toLowerCase() == t) return !0; return !1 }, _formatSize: function (e) { var t = -1; do e /= 1024, t++; while (e > 99); return Math.max(e, .1).toFixed(1) + ["kB", "MB", "GB", "TB", "PB", "EB"][t] } }, qq.FileUploader = function (e) { qq.FileUploaderBasic.apply(this, arguments), qq.extend(this._options, { element: null, listElement: null, template: '<div class="qq-uploader"><div class="qq-upload-drop-area"><span>Drop files here to upload</span></div><div class="qq-upload-button">Upload a file</div><ul class="qq-upload-list"></ul></div>', fileTemplate: '<li><span class="qq-upload-file"></span><span class="qq-upload-spinner"></span><span class="qq-upload-size"></span><a class="qq-upload-cancel" href="#">Cancel</a><span class="qq-upload-failed-text">Failed</span></li>', classes: { button: "qq-upload-button", drop: "qq-upload-drop-area", dropActive: "qq-upload-drop-area-active", list: "qq-upload-list", file: "qq-upload-file", spinner: "qq-upload-spinner", size: "qq-upload-size", cancel: "qq-upload-cancel", success: "qq-upload-success", fail: "qq-upload-fail" } }), qq.extend(this._options, e), this._element = this._options.element, this._element.innerHTML = this._options.template, this._listElement = this._options.listElement || this._find(this._element, "list"), this._classes = this._options.classes, this._button = this._createUploadButton(this._find(this._element, "button")), this._bindCancelEvent(), this._setupDragDrop() }, qq.extend(qq.FileUploader.prototype, qq.FileUploaderBasic.prototype), qq.extend(qq.FileUploader.prototype, { _find: function (e, t) { var n = qq.getByClass(e, this._options.classes[t])[0]; if (!n) throw new Error("element not found " + t); return n }, _setupDragDrop: function () { var e = this, t = this._find(this._element, "drop"), n = new qq.UploadDropZone({ element: t, onEnter: function (n) { qq.addClass(t, e._classes.dropActive), n.stopPropagation() }, onLeave: function (e) { e.stopPropagation() }, onLeaveNotDescendants: function (n) { qq.removeClass(t, e._classes.dropActive) }, onDrop: function (n) { t.style.display = "none", qq.removeClass(t, e._classes.dropActive), e._uploadFileList(n.dataTransfer.files) } }); t.style.display = "none", qq.attach(document, "dragenter", function (e) { n._isValidFileDrag(e) && (t.style.display = "block") }), qq.attach(document, "dragleave", function (e) { if (n._isValidFileDrag(e)) { var o = document.elementFromPoint(e.clientX, e.clientY); o && "HTML" != o.nodeName || (t.style.display = "none") } }) }, _onSubmit: function (e, t) { qq.FileUploaderBasic.prototype._onSubmit.apply(this, arguments), this._addToList(e, t) }, _onProgress: function (e, t, n, o) { qq.FileUploaderBasic.prototype._onProgress.apply(this, arguments); var i = this._getItemByFileId(e), s = this._find(i, "size"); s.style.display = "inline"; var a; a = n != o ? Math.round(n / o * 100) + "% from " + this._formatSize(o) : this._formatSize(o), qq.setText(s, a) }, _onComplete: function (e, t, n) { qq.FileUploaderBasic.prototype._onComplete.apply(this, arguments); var o = this._getItemByFileId(e); qq.remove(this._find(o, "cancel")), qq.remove(this._find(o, "spinner")), n.success ? qq.addClass(o, this._classes.success) : qq.addClass(o, this._classes.fail) }, _addToList: function (e, t) { var n = qq.toElement(this._options.fileTemplate); n.qqFileId = e; var o = this._find(n, "file"); qq.setText(o, this._formatFileName(t)), this._find(n, "size").style.display = "none", this._listElement.appendChild(n) }, _getItemByFileId: function (e) { for (var t = this._listElement.firstChild; t;) { if (t.qqFileId == e) return t; t = t.nextSibling } }, _bindCancelEvent: function () { var e = this, t = this._listElement; qq.attach(t, "click", function (t) { t = t || window.event; var n = t.target || t.srcElement; if (qq.hasClass(n, e._classes.cancel)) { qq.preventDefault(t); var o = n.parentNode; e._handler.cancel(o.qqFileId), qq.remove(o) } }) } }), qq.UploadDropZone = function (e) { this._options = { element: null, onEnter: function (e) { }, onLeave: function (e) { }, onLeaveNotDescendants: function (e) { }, onDrop: function (e) { } }, qq.extend(this._options, e), this._element = this._options.element, this._disableDropOutside(), this._attachEvents() }, qq.UploadDropZone.prototype = { _disableDropOutside: function (e) { qq.UploadDropZone.dropOutsideDisabled || (qq.attach(document, "dragover", function (e) { e.dataTransfer && (e.dataTransfer.dropEffect = "none", e.preventDefault()) }), qq.UploadDropZone.dropOutsideDisabled = !0) }, _attachEvents: function () { var e = this; qq.attach(e._element, "dragover", function (t) { if (e._isValidFileDrag(t)) { var n = t.dataTransfer.effectAllowed; "move" == n || "linkMove" == n ? t.dataTransfer.dropEffect = "move" : t.dataTransfer.dropEffect = "copy", t.stopPropagation(), t.preventDefault() } }), qq.attach(e._element, "dragenter", function (t) { e._isValidFileDrag(t) && e._options.onEnter(t) }), qq.attach(e._element, "dragleave", function (t) { if (e._isValidFileDrag(t)) { e._options.onLeave(t); var n = document.elementFromPoint(t.clientX, t.clientY); qq.contains(this, n) || e._options.onLeaveNotDescendants(t) } }), qq.attach(e._element, "drop", function (t) { e._isValidFileDrag(t) && (t.preventDefault(), e._options.onDrop(t)) }) }, _isValidFileDrag: function (e) { var t = e.dataTransfer, n = navigator.userAgent.indexOf("AppleWebKit") > -1; return t && "none" != t.effectAllowed && (t.files || !n && t.types.contains && t.types.contains("Files")) } }, qq.UploadButton = function (e) { this._options = { element: null, multiple: !1, name: "file", onChange: function (e) { }, hoverClass: "qq-upload-button-hover", focusClass: "qq-upload-button-focus" }, qq.extend(this._options, e), this._element = this._options.element, qq.css(this._element, { position: "relative", overflow: "hidden", direction: "ltr" }), this._input = this._createInput() }, qq.UploadButton.prototype = { getInput: function () { return this._input }, reset: function () { this._input.parentNode && qq.remove(this._input), qq.removeClass(this._element, this._options.focusClass), this._input = this._createInput() }, _createInput: function () { var e = document.createElement("input"); this._options.multiple && e.setAttribute("multiple", "multiple"), e.setAttribute("type", "file"), e.setAttribute("name", this._options.name), qq.css(e, { position: "absolute", right: 0, top: 0, fontFamily: "Arial", fontSize: "118px", margin: 0, padding: 0, cursor: "pointer", opacity: 0 }), this._element.appendChild(e); var t = this; return qq.attach(e, "change", function () { t._options.onChange(e) }), qq.attach(e, "mouseover", function () { qq.addClass(t._element, t._options.hoverClass) }), qq.attach(e, "mouseout", function () { qq.removeClass(t._element, t._options.hoverClass) }), qq.attach(e, "focus", function () { qq.addClass(t._element, t._options.focusClass) }), qq.attach(e, "blur", function () { qq.removeClass(t._element, t._options.focusClass) }), window.attachEvent && e.setAttribute("tabIndex", "-1"), e } }, qq.UploadHandlerAbstract = function (e) { this._options = { debug: !1, action: "/upload.php", maxConnections: 999, onProgress: function (e, t, n, o) { }, onComplete: function (e, t, n) { }, onCancel: function (e, t) { } }, qq.extend(this._options, e), this._queue = [], this._params = [] }, qq.UploadHandlerAbstract.prototype = { log: function (e) { this._options.debug && window.console && console.log("[uploader] " + e) }, add: function (e) { }, upload: function (e, t) { var n = this._queue.push(e), o = {}; qq.extend(o, t), this._params[e] = o, n <= this._options.maxConnections && this._upload(e, this._params[e]) }, cancel: function (e) { this._cancel(e), this._dequeue(e) }, cancelAll: function () { for (var e = 0; e < this._queue.length; e++) this._cancel(this._queue[e]); this._queue = [] }, getName: function (e) { }, getSize: function (e) { }, getQueue: function () { return this._queue }, _upload: function (e) { }, _cancel: function (e) { }, _dequeue: function (e) { var t = qq.indexOf(this._queue, e); this._queue.splice(t, 1); var n = this._options.maxConnections; if (this._queue.length >= n && n > t) { var o = this._queue[n - 1]; this._upload(o, this._params[o]) } } }, qq.UploadHandlerForm = function (e) { qq.UploadHandlerAbstract.apply(this, arguments), this._inputs = {} }, qq.extend(qq.UploadHandlerForm.prototype, qq.UploadHandlerAbstract.prototype), qq.extend(qq.UploadHandlerForm.prototype, { add: function (e) { e.setAttribute("name", "qqfile"); var t = "qq-upload-handler-iframe" + qq.getUniqueId(); return this._inputs[t] = e, e.parentNode && qq.remove(e), t }, getName: function (e) { return this._inputs[e].value.replace(/.*(\/|\\)/, "") }, _cancel: function (e) { this._options.onCancel(e, this.getName(e)), delete this._inputs[e]; var t = document.getElementById(e); t && (t.setAttribute("src", "javascript:false;"), qq.remove(t)) }, _upload: function (e, t) { var n = this._inputs[e]; if (!n) throw new Error("file with passed id was not added, or already uploaded or cancelled"); var o = this.getName(e), i = this._createIframe(e), s = this._createForm(i, t); s.appendChild(n); var a = this; return this._attachLoadEvent(i, function () { a.log("iframe loaded"); var t = a._getIframeContentJSON(i); a._options.onComplete(e, o, t), a._dequeue(e), delete a._inputs[e], setTimeout(function () { qq.remove(i) }, 1) }), s.trigger('submit'), qq.remove(s), e }, _attachLoadEvent: function (e, t) { qq.attach(e, "load", function () { e.parentNode && (e.contentDocument && e.contentDocument.body && "false" == e.contentDocument.body.innerHTML || t()) }) }, _getIframeContentJSON: function (iframe) { var doc = iframe.contentDocument ? iframe.contentDocument : iframe.contentWindow.document, response; this.log("converting iframe's innerHTML to JSON"), this.log("innerHTML = " + doc.body.innerHTML); try { response = eval("(" + doc.body.innerHTML + ")") } catch (err) { response = {} } return response }, _createIframe: function (e) { var t = qq.toElement('<iframe src="javascript:false;" name="' + e + '" />'); return t.setAttribute("id", e), t.style.display = "none", document.body.appendChild(t), t }, _createForm: function (e, t) { var n = qq.toElement('<form method="post" enctype="multipart/form-data"></form>'), o = qq.obj2url(t, this._options.action); return n.setAttribute("action", o), n.setAttribute("target", e.name), n.style.display = "none", document.body.appendChild(n), n } }), qq.UploadHandlerXhr = function (e) { qq.UploadHandlerAbstract.apply(this, arguments), this._files = [], this._xhrs = [], this._loaded = [] }, qq.UploadHandlerXhr.isSupported = function () { var e = document.createElement("input"); return e.type = "file", "multiple" in e && "undefined" != typeof File && "undefined" != typeof (new XMLHttpRequest).upload }, qq.extend(qq.UploadHandlerXhr.prototype, qq.UploadHandlerAbstract.prototype), qq.extend(qq.UploadHandlerXhr.prototype, { add: function (e) { if (!(e instanceof File)) throw new Error("Passed obj in not a File (in qq.UploadHandlerXhr)"); return this._files.push(e) - 1 }, getName: function (e) { var t = this._files[e]; return null != t.fileName ? t.fileName : t.name }, getSize: function (e) { var t = this._files[e]; return null != t.fileSize ? t.fileSize : t.size }, getLoaded: function (e) { return this._loaded[e] || 0 }, _upload: function (e, t) { var n = this._files[e], o = this.getName(e); this.getSize(e); this._loaded[e] = 0; var i = this._xhrs[e] = new XMLHttpRequest, s = this; i.upload.onprogress = function (t) { t.lengthComputable && (s._loaded[e] = t.loaded, s._options.onProgress(e, o, t.loaded, t.total)) }, i.onreadystatechange = function () { 4 == i.readyState && s._onComplete(e, i) }, t = t || {}, t.qqfile = o; var a = qq.obj2url(t, this._options.action); i.open("POST", a, !0), i.setRequestHeader("X-Requested-With", "XMLHttpRequest"), i.setRequestHeader("X-File-Name", encodeURIComponent(o)), i.setRequestHeader("Content-Type", "application/octet-stream"), i.send(n) }, _onComplete: function (id, xhr) { if (this._files[id]) { var name = this.getName(id), size = this.getSize(id); if (this._options.onProgress(id, name, size, size), 200 == xhr.status) { this.log("xhr - server response received"), this.log("responseText = " + xhr.responseText); var response; try { response = eval("(" + xhr.responseText + ")") } catch (err) { response = {} } this._options.onComplete(id, name, response) } else this._options.onComplete(id, name, {}); this._files[id] = null, this._xhrs[id] = null, this._dequeue(id) } }, _cancel: function (e) { this._options.onCancel(e, this.getName(e)), this._files[e] = null, this._xhrs[e] && (this._xhrs[e].abort(), this._xhrs[e] = null) } });


// CallService
var megaventory = {

    fixURL: function (url) {
        return window.location.protocol + "//" + document.domain + "/inventory/WebServices/MegaventoryWebServices.asmx/" + url
    },

    callService: function (serviceName, params, endcall, method) {
        if (typeof (serviceName) == "undefined") { return } if (typeof (params) == "undefined") { return } if (typeof (endcall) == "undefined") { return } method = typeof (method) != "undefined" ? method : "POST"; var fullURL = megaventory.fixURL(serviceName); $.post(fullURL, params, function (xml) { var bi; try { bi = $("string", xml).text() } catch (e) { try { bi = $("boolean", xml).text() } catch (e) { console.error(e) } } endcall(bi) })
    }

};

function gup(name, textToLookFor) { name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]"); var regexS = "[\\?&]" + name + "=([^&#]*)"; var regex = new RegExp(regexS); var results; if (textToLookFor) { results = regex.exec(textToLookFor); } else { results = regex.exec(window.location.href); } if (results == null) { return ""; } else { return results[1]; } }

function show_it() { var NumInputs = arguments.length; for (var i = 0; i < NumInputs; i++) { $('#' + arguments[i]).show(); } }

function hide_it() { var NumInputs = arguments.length; for (var i = 0; i < NumInputs; i++) { $('#' + arguments[i]).hide(); } }

function toggle_it(itemID) { if (document.getElementById(itemID).style.display == 'none') { show_it(itemID); } else { hide_it(itemID); } }

function Opac() { var ver = getInternetExplorerVersion(); var NumInputs = arguments.length; if (NumInputs % 2 == 0) { for (var i = 0; i < NumInputs; i = i + 2) { if (ver > -1) { if (ver < 9) { document.getElementById(arguments[i]).style.filter = "alpha(opacity=" + arguments[i + 1] * 100 + ")"; } else { document.getElementById(arguments[i]).style.opacity = arguments[i + 1]; } } else { document.getElementById(arguments[i]).style.opacity = arguments[i + 1]; } } } else { return false; } }

function toggle_it_twice(Div1, Div2) {

    /* Used in Modal Confirmation dialogs */
    toggle_it(Div1); toggle_it(Div2);
    if (document.getElementById('AlertDiv') != null) {
        if (document.getElementById('AlertDiv').style.display == 'none') {
            if (document.getElementById('ctl00_CH1_btn_DontConfirm') != null) { ctl00_CH1_btn_DontConfirm.Focus(); }
        }
    }
}
// END SHOW AND HIDE

//DISABLING ENTER KEY FROM SUBMITTING FORMS
function stopRKey(evt) {
    var evt = (evt) ? evt : ((event) ? event : null);
    var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
    if ((evt.keyCode == 13) && (node.type == "text" || node.type == "password")) { return false; }
}
document.onkeypress = stopRKey;
//END DISABLING ENTER KEY FROM SUBMITTING FORMS

//DISABLING BACKSPACE KEY FROM NAVIGATING BACK
$(document).off("keydown").on("keydown", function (e) {
    var t = !1;
    if (8 === e.keyCode) {
        var a = e.srcElement || e.target;
        "INPUT" === a.tagName.toUpperCase() && ("TEXT" === a.type.toUpperCase() || "PASSWORD" === a.type.toUpperCase() || "FILE" === a.type.toUpperCase() || "EMAIL" === a.type.toUpperCase() || "SEARCH" === a.type.toUpperCase() || "DATE" === a.type.toUpperCase()) || "TEXTAREA" === a.tagName.toUpperCase() ? t = a.readOnly || a.disabled : ("SPAN" === a.tagName.toUpperCase() || "DIV" === a.tagName.toUpperCase()) ? (t = !0, void 0 != a.className && (t = !(-1 != a.className.indexOf("contenteditable")))) : t = !0
    } t && e.preventDefault()
});

//CHECK BROWSER
function getInternetExplorerVersion() { var rv = -1; if (navigator.appName == 'Microsoft Internet Explorer') { var ua = navigator.userAgent; var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})"); if (re.exec(ua) != null) { rv = parseFloat(RegExp.$1); } } return rv; } // Returns the version of Internet Explorer or a -1

//CHANGE CASE
function changeCase(TxtBox) { var ToBeChanged = TxtBox.value; TxtBox.value = ToBeChanged.toUpperCase(); }

//CHECK NUMERIC (this also prevents negative numbers)
function IsNumeric(sText) { var ValidChars = "0123456789.,"; var IsNumber = true; var Char; for (i = 0; i < sText.length && IsNumber == true; i++) { Char = sText.charAt(i); if ((ValidChars.indexOf(Char) == -1)) { IsNumber = false } } var sTextNoComma = sText.replace(/,/g, ""); var sTextNoDot = sText.replace(/\./g, ""); if (((sText.length - sTextNoComma.length) > 1) || ((sText.length - sTextNoDot.length) > 1)) { IsNumber = false } if ((sText.indexOf(",") > -1) && (sText.indexOf(".") > -1)) { IsNumber = false } return IsNumber };

//CHECK NUMERIC (this accepts negative numbers)
function isNumber(n) { n = n.replace(/,/, "."); return !isNaN(parseFloat(n)) && isFinite(n); }

function HasSpecialCharacters(sText) { var SpecialChars = "#@!%^&*()~`'.,"; var ContainsSpCh = false; var Char; for (i = 0; i < sText.length && ContainsSpCh == false; i++) { Char = sText.charAt(i); if ((SpecialChars.indexOf(Char) != -1)) { ContainsSpCh = true } } return ContainsSpCh };

//Display element relative to another
function ShowRel(RelID, showID) { $('#' + showID).show().position({ my: 'left center', at: 'right+25 center-17', of: $('#' + RelID), collision: 'fit' }) };

// The following object handles the NullText and Loading Image Class change for ASP.Net TextBox which is extended by the StyledAutoCompleteExtender. Add 'state' data to the COntrol using JQuery: State = -1: Functionality disabled, State = 0: NullText, State = 1: Some valid text
var AutoCompleteTxtObj = function (id, nT) {
    var that = this;
    this.JQTxtBoxID = "#" + id;
    this.NullText = nT;
    $(this.JQTxtBoxID).on('focus', function (e) {
        if ($(this).data('state') === -1) {
            $(this).trigger('blur'); return
        }
        var cV = $(this).val();
        if (that.NullText && that.NullText != '' && cV == that.NullText) {
            $(this).css('color', 'black'); $(this).val(""); $(this).data('state', 0)
        }
    });
    $(this.JQTxtBoxID).on('blur', function (e) {
        if ($(this).data('state') === -1) {
            return
        }
        var cV = $(this).val();
        $(this).data('state', 1);
        if (that.NullText && that.NullText !== '' && cV === '') {
            $(this).data('state', 0);
            $(this).css('color', '#AAA');
            $(this).val(that.NullText)
        }
    });
    $(this.JQTxtBoxID).trigger('blur')
};
AutoCompleteTxtObj.prototype = {
    JQTxtBoxID: "",
    NullText: "",
    ShLoadingImgWS: function () {
        $(this.JQTxtBoxID).addClass('LoadingTextbox')
    },
    HideLoadingImgWS: function () {
        $(this.JQTxtBoxID).removeClass('LoadingTextbox')
    }
};

// Following Obj provides Init, LostFocus, GotFocus event handlers for DevExpress ComboBox to simulate the NullText behaviour
var DevExComboBoxNT = { OnLostFocus: function (s, e, nullText) { if (s.GetValue() != null && String(s.GetValue()) != '' && String(s.GetValue()) != nullText) { return } var input = s.GetInputElement(); input.style.color = '#999'; input.value = nullText }, OnGotFocus: function (s, e, nullText) { var input = s.GetInputElement(); if (input.value == nullText) { input.value = ''; input.style.color = 'black' } }, OnInit: function (s, e, nullText) { this.OnLostFocus(s, e, nullText) } };

/* Adding the trim functionality to the String object */
String.trim = function (s) { var l = 0; var r = s.length - 1; while (l < s.length && s[l] == " ") { l++ } while (r > l && s[r] == " ") { r -= 1 } return s.substring(l, r + 1) };

// Document Choices object, should match with the one defined in Tools. 
// DocumentStages should match with the server side definition of Document Stages as defined in BusinessProcesses.DocumentsRelated
var DocumentChoices = {
    Dummy: 0,
    GoodsOutbound: 10,
    GoodsOutboundAndSalesInvoice: 20,
    GoodsInbound: 30,
    GoodsInboundAndPurchaseInvoice: 40,
    GoodsTransfer: 50,
    SalesOrder: 60,
    PurchaseOrder: 70,
    SalesQuote: 80,
    WorkOrder: 90,
    AllButOrders: 100,
    AllOrders: 110,
    GoodsReturnFromClient: 120,
    SalesInvoice: 130,
    GoodsReturnToSupplier: 140,
    PurchaseInvoice: 150,
    AllTransactions: 160,
    FinishedGoodsReceipt: 170,
    AllInventoryAdjustments: 180,
    InventoryAdjustmentsMinus: 190,
    InventoryAdjustmentsPlus: 200,
    AllDocuments: 210,
    AllPurchaseDocuments: 220,
    AllSalesDocuments: 230,
    GoodsReturnFromClientNoCredit: 240,
    GoodsReturnFromClientWithCredit: 250,
    GoodsReturnToSupplierNoCredit: 260,
    GoodsReturnToSupplierWithCredit: 270,
    InventoryTake: 290,
    HandlingInvoice: 300
},

    MenuDocumentChoices = {
        GoodsOutbound: "GoodsOutbound",
        SalesInvoice: "GoodsOutbound",
        GoodsInbound: "GoodsInbound",
        PurchaseInvoice: "GoodsInbound",
        GoodsTransfer: "GoodsTransfer",
        SalesOrder: "SalesOrder",
        PurchaseOrder: "PurchaseOrder",
        SalesQuote: "SalesQuote",
        WorkOrder: "WorkOrder",
        GoodsReturnFromClient: "GoodsReturnFromClient",
        GoodsReturnFromClientWithCredit: "GoodsReturnFromClient",
        GoodsReturnFromClientNoCredit: "GoodsReturnFromClient",
        GoodsReturnToSupplier: "GoodsReturnToSupplier",
        GoodsReturnToSupplierWithCredit: "GoodsReturnToSupplier",
        GoodsReturnToSupplierNoCredit: "GoodsReturnToSupplier",
        FinishedGoodsReceipt: "finished_good_receipts",
        InventoryTake: "InventoryTake",
        HandlingInvoice: "HandlingInvoice"
    },

    DocumentStages = {
        Pending: 10,
        ApprovalInProcess: 20,
        Accepted: 30,
        PartiallyShipped: 40,
        PartiallyShippedInvoiced: 41,
        FullyShipped: 42,
        PartiallyReceived: 43,
        PartiallyReceivedInvoiced: 44,
        FullyReceived: 45,
        PartiallyInvoiced: 46,
        FullyInvoiced: 47,
        Completed: 50,
        Cancelled: 99
    };

/* Menu client Side redirects */
// <![CDATA[
function MenuItemClick(e) { if (e.item.GetNavigateUrl() != "") { if (typeof IgnorePendingDocChanges !== "undefined") { if (IgnorePendingDocChanges() === false) { e.processOnServer = false; ASPxClientUtils.PreventEvent(e.htmlEvent); return false } } document.getElementById("loading").style.visibility = "visible"; } };
// ]]>

/* This notice must be untouched at all times.
wz_tooltip.js	v. 4.12
The latest version is available at http://www.walterzorn.com or http://www.devira.com or http://www.walterzorn.de
Copyright (c) 2002-2007 Walter Zorn. All rights reserved. Created 1.12.2002 by Walter Zorn (Web: http://www.walterzorn.com ) Last modified: 13.7.2007
Easy-to-use cross-browser tooltips. Just include the script at the beginning of the <body> section, and invoke Tip('Tooltip text') from within the desired HTML onmouseover eventhandlers.
No container DIV, no onmouseouts required. By default, width of tooltips is automatically adapted to content. Is even capable of dynamically converting arbitrary HTML elements to tooltips
by calling TagToTip('ID_of_HTML_element_to_be_converted') instead of Tip(), which means you can put important, search-engine-relevant stuff into tooltips. Appearance of tooltips can be individually configured
via commands passed to Tip() or TagToTip(). Tab Width: 4 LICENSE: LGPL
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License (LGPL) as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. For more details on the GNU Lesser General Public License, see http://www.gnu.org/copyleft/lesser.html
*/
function tt_ExtCallFncs(a, b) {
    var c = false;
    for (var d = tt_aExt.length; d;) {
        --d;
        var e = tt_aExt[d]["On" + b];
        if (e && e(a)) { c = true }
    } return c
}

function tt_ExtCmdEnum() {
    var s;
    for (var i in config) {
        s = "window." + i.toString().toUpperCase();
        if (eval("typeof(" + s + ") == tt_u")) {
            eval(s + " = " + tt_aV.length);
            tt_aV[tt_aV.length] = null
        }
    }
}

function tt_Err(a) {
    if (tt_Debug) { alert("Tooltip Script Error Message:\n\n" + a) }
}

function tt_MovDomNode(a, b, c) {
    if (b) { b.removeChild(a) } if (c) { c.appendChild(a) }
}

function tt_SetOpa(a, b) {
    tt_opa = b; if (tt_flagOpa == 1) { if (b < 100) { var c = a.visibility != "hidden"; a.zoom = "100%"; if (!c) { a.visibility = "visible" } a.filter = "alpha(opacity=" + b + ")"; if (!c) { a.visibility = "hidden" } } else { a.filter = "" } } else { b /= 100; switch (tt_flagOpa) { case 2: a.KhtmlOpacity = b; break; case 3: a.KHTMLOpacity = b; break; case 4: a.MozOpacity = b; break; case 5: a.opacity = b; break } }
}

function tt_AddRemOutFnc(a) {
    var b = a ? tt_AddEvtFnc : tt_RemEvtFnc; if (a != tt_AddRemOutFnc.bOn) { b(tt_over, "mouseout", tt_OnOut); tt_AddRemOutFnc.bOn = a; if (!a) { tt_OpReHref() } }
}

function tt_Int(a) {
    var b; return isNaN(b = parseInt(a)) ? 0 : b
}

function tt_OnCloseBtnOver(a) {
    var b = tt_aElt[4].style; a <<= 1; b.background = tt_aV[CLOSEBTNCOLORS][a]; b.color = tt_aV[CLOSEBTNCOLORS][a + 1]
}

function tt_SetTipOpa(a) {
    tt_SetOpa(tt_aElt[5].style, a); if (tt_aElt[1]) { tt_SetOpa(tt_aElt[1].style, a) } if (tt_aV[SHADOW]) { a = Math.round(a * 0.8); tt_SetOpa(tt_aElt[7].style, a); tt_SetOpa(tt_aElt[8].style, a) }
}

function tt_Fade(a, b, c, d) {
    if (d) { b += Math.round((c - b) / d); if (c > a ? b >= c : b <= c) { b = c } else { tt_tFade.Timer("tt_Fade(" + a + "," + b + "," + c + "," + (d - 1) + ")", tt_aV[FADEINTERVAL], true) } } b ? tt_SetTipOpa(b) : tt_Hide()
}

function tt_OpReHref() {
    if (tt_elDeHref) { tt_elDeHref.setAttribute("href", tt_elDeHref.t_href); tt_RemEvtFnc(tt_elDeHref, "mousedown", tt_OpReHref); window.status = tt_elDeHref.t_stats; tt_elDeHref = null }
}

function tt_HideInit() {
    tt_ExtCallFncs(0, "HideInit"); tt_iState &= ~4; if (tt_flagOpa && tt_aV[FADEOUT]) { tt_tFade.EndTimer(); if (tt_opa) { var a = Math.round(tt_aV[FADEOUT] / (tt_aV[FADEINTERVAL] * (tt_aV[OPACITY] / tt_opa))); tt_Fade(tt_opa, tt_opa, 0, a); return } } tt_tHide.Timer("tt_Hide();", 1, false)
}

function tt_OnOut() {
    tt_AddRemOutFnc(false); if (!(tt_aV[STICKY] && tt_iState & 2)) { tt_HideInit() }
}

function tt_CalcPosYAbove() {
    if (tt_aV[DADELEMENTID]) { var a; a = $("#" + tt_aV[DADELEMENTID]).offset().top; a -= tt_h; tt_musY = a; return tt_musY + tt_aV[OFFSETY] } else { var b = tt_aV[OFFSETY] - (tt_aV[SHADOW] ? tt_aV[SHADOWWIDTH] : 0); if (tt_aV[OFFSETY] > 0 && b <= 0) { b = 1 } return tt_musY - tt_h - b }
}

function tt_CalcPosYBelow() {
    return tt_musY + tt_aV[OFFSETY]
}

function tt_DoPosYAbove() {
    tt_bJmpVert = !tt_aV[ABOVE]; return tt_CalcPosYAbove()
}

function tt_DoPosYBelow() {
    tt_bJmpVert = tt_aV[ABOVE]; return tt_CalcPosYBelow()
}

function tt_PosY() {
    var a; if (tt_aV[ABOVE] && (!tt_bJmpVert || tt_CalcPosYAbove() >= tt_scrlY + 16)) { a = tt_DoPosYAbove() } else { if (!tt_aV[ABOVE] && tt_bJmpVert && tt_CalcPosYBelow() > tt_maxPosY - 16) { a = tt_DoPosYAbove() } else { a = tt_DoPosYBelow() } } if (a > tt_maxPosY) { a = tt_DoPosYAbove() } if (a < tt_scrlY) { a = tt_DoPosYBelow() } return a
}

function tt_PosX() {
    var a; a = tt_musX; if (tt_aV[DADELEMENTID]) { a = $("#" + tt_aV[DADELEMENTID]).offset().left; a += $("#" + tt_aV[DADELEMENTID]).outerWidth() / 2 } if (tt_aV[LEFT]) { a -= tt_w + tt_aV[OFFSETX] - (tt_aV[SHADOW] ? tt_aV[SHADOWWIDTH] : 0) } else { a += tt_aV[OFFSETX] } if (a > tt_maxPosX) { a = tt_maxPosX } return a < tt_scrlX ? tt_scrlX : a
}

function tt_Move(a) {
    a = window.event || a; if (a) { tt_musX = tt_GetEvtX(a); tt_musY = tt_GetEvtY(a) } if (tt_iState) { if (!tt_over && a) { tt_OverInit(a) } if (tt_iState & 4) { if (!tt_op && !tt_ie) { if (tt_bWait) { return } tt_bWait = true; tt_tWaitMov.Timer("tt_bWait = false;", 1, true) } if (tt_aV[FIX]) { tt_iState &= ~4; tt_SetTipPos(tt_aV[FIX][0], tt_aV[FIX][1]) } else { if (!tt_ExtCallFncs(a, "MoveBefore")) { tt_SetTipPos(tt_PosX(), tt_PosY()) } } tt_ExtCallFncs([tt_musX, tt_musY], "MoveAfter") } }
}

function tt_ShowIfrm() {
    if (tt_ie56) { var a = tt_aElt[tt_aElt.length - 1]; if (a) { var b = a.style; b.zIndex = tt_aElt[0].style.zIndex - 1; b.display = "block" } }
}

function tt_Show() {
    var a = tt_aElt[0].style; a.zIndex = Math.max(window.dd && dd.z ? dd.z + 2 : 0, 12010); if (tt_aV[STICKY] || !tt_aV[FOLLOWMOUSE]) { tt_iState &= ~4 } if (tt_aV[DURATION] > 0) { tt_tDurt.Timer("tt_HideInit()", tt_aV[DURATION], true) } tt_ExtCallFncs(0, "Show"); a.visibility = "visible"; tt_iState |= 2; if (tt_aV[FADEIN]) { tt_Fade(0, 0, tt_aV[OPACITY], Math.round(tt_aV[FADEIN] / tt_aV[FADEINTERVAL])) } tt_ShowIfrm()
}

function tt_OverInit(a) {
    tt_over = a.target || a.srcElement; tt_DeAlt(tt_over); tt_OpDeHref(tt_over); tt_AddRemOutFnc(true)
}

function tt_ShowInit() {
    tt_tShow.Timer("tt_Show()", tt_aV[DELAY], true); if (tt_aV[CLICKCLOSE]) { tt_AddEvtFnc(document, "mouseup", tt_HideInit) }
}

function tt_OpDeHref(a) {
    if (!tt_op) { return } if (tt_elDeHref) { tt_OpReHref() } while (a) { if (a.hasAttribute("href")) { a.t_href = a.getAttribute("href"); a.t_stats = window.status; a.removeAttribute("href"); a.style.cursor = "hand"; tt_AddEvtFnc(a, "mousedown", tt_OpReHref); window.status = a.t_href; tt_elDeHref = a; break } a = a.parentElement }
}

function tt_DeAlt(a) {
    var b; if (a.alt) { a.alt = "" } if (a.title) { a.title = "" } b = a.childNodes || a.children || null; if (b) { for (var c = b.length; c;) { tt_DeAlt(b[--c]) } }
}

function tt_FixSize(a, b) {
    var c, d, e; tt_aElt[0].style.width = tt_w + "px"; tt_aElt[0].style.pixelWidth = tt_w; d = tt_w - (tt_aV[SHADOW] ? tt_aV[SHADOWWIDTH] : 0); c = d; if (!tt_bBoxOld) { c -= tt_aV[PADDING] + tt_aV[BORDERWIDTH] << 1 } tt_aElt[5].style.width = c + "px"; if (tt_aElt[1]) { c = d - (tt_aV[PADDING] << 1); if (!tt_bBoxOld) { d = c } tt_aElt[1].style.width = d + "px"; tt_aElt[2].style.width = c + "px" } tt_h = tt_GetDivH(tt_aElt[0]) + a; if (tt_aElt[8]) { tt_aElt[8].style.height = tt_h - b + "px" } e = tt_aElt.length - 1; if (tt_aElt[e]) { tt_aElt[e].style.width = tt_w + "px"; tt_aElt[e].style.height = tt_h + "px" }
}

function tt_FormatTip() {
    var a, b, c, d; if (tt_aV[TITLE].length) { a = tt_aElt[1].style; a.background = tt_aV[TITLEBGCOLOR]; a.paddingTop = (tt_aV[CLOSEBTN] ? 2 : 0) + "px"; a.paddingBottom = "1px"; a.paddingLeft = a.paddingRight = tt_aV[PADDING] + "px"; a = tt_aElt[3].style; a.color = tt_aV[TITLEFONTCOLOR]; a.fontFamily = tt_aV[TITLEFONTFACE]; a.fontSize = tt_aV[TITLEFONTSIZE]; a.fontWeight = "bold"; a.textAlign = tt_aV[TITLEALIGN]; if (tt_aElt[4]) { a.paddingRight = (tt_aV[PADDING] << 1) + "px"; a = tt_aElt[4].style; a.background = tt_aV[CLOSEBTNCOLORS][0]; a.color = tt_aV[CLOSEBTNCOLORS][1]; a.fontFamily = tt_aV[TITLEFONTFACE]; a.fontSize = tt_aV[TITLEFONTSIZE]; a.fontWeight = "bold" } if (tt_aV[WIDTH] > 0) { tt_w = tt_aV[WIDTH] + (tt_aV[PADDING] + tt_aV[BORDERWIDTH] << 1) } else { tt_w = tt_GetDivW(tt_aElt[3]) + tt_GetDivW(tt_aElt[4]); if (tt_aElt[4]) { tt_w += tt_aV[PADDING] } } c = -tt_aV[BORDERWIDTH] } else { tt_w = 0; c = 0 } a = tt_aElt[5].style; a.top = c + "px"; if (tt_aV[BORDERWIDTH]) { a.borderColor = tt_aV[BORDERCOLOR]; a.borderStyle = tt_aV[BORDERSTYLE]; a.borderWidth = tt_aV[BORDERWIDTH] + "px" } if (tt_aV[BGCOLOR].length) { a.backgroundColor = tt_aV[BGCOLOR] } if (tt_aV[BGIMG].length) { a.backgroundImage = "url(" + tt_aV[BGIMG] + ")" } a.padding = "10px 15px 10px 15px"; a.textAlign = tt_aV[TEXTALIGN]; a = tt_aElt[6].style; a.color = tt_aV[FONTCOLOR]; a.fontFamily = tt_aV[FONTFACE]; a.fontSize = tt_aV[FONTSIZE]; a.fontWeight = tt_aV[FONTWEIGHT]; a.background = ""; a.textAlign = tt_aV[TEXTALIGN]; if (tt_aV[WIDTH] > 0) { b = tt_aV[WIDTH] + (tt_aV[PADDING] + tt_aV[BORDERWIDTH] << 1) } else { b = tt_GetDivW(tt_aElt[6]) + (tt_aV[PADDING] + tt_aV[BORDERWIDTH] << 1) } if (b > tt_w) { tt_w = b } if (tt_aV[SHADOW]) { tt_w += tt_aV[SHADOWWIDTH]; d = Math.floor(tt_aV[SHADOWWIDTH] * 4 / 3); a = tt_aElt[7].style; a.top = c + "px"; a.left = d + "px"; a.width = tt_w - d - tt_aV[SHADOWWIDTH] + "px"; a.height = tt_aV[SHADOWWIDTH] + "px"; a.background = tt_aV[SHADOWCOLOR]; a = tt_aElt[8].style; a.top = d + "px"; a.left = tt_w - tt_aV[SHADOWWIDTH] + "px"; a.width = tt_aV[SHADOWWIDTH] + "px"; a.background = tt_aV[SHADOWCOLOR] } else { d = 0 } tt_SetTipOpa(tt_aV[FADEIN] ? 0 : tt_aV[OPACITY]); tt_FixSize(c, d)
}

function tt_GetSubDivRefs() {
    var a = new Array("WzTiTl", "WzTiTlTb", "WzTiTlI", "WzClOsE", "WzBoDy", "WzBoDyI", "WzTtShDwB", "WzTtShDwR"); for (var b = a.length; b; --b) { tt_aElt[b] = tt_GetElt(a[b - 1]) }
}

function tt_MkTipSubDivs() {
    var a = "position:relative;margin:0px;padding:0px;border-width:0px;left:0px;top:0px;line-height:normal;width:auto;", b = ' cellspacing=0 cellpadding=0 border=0 style="' + a + '"><tbody style="' + a + '"><tr><td '; var c; if (tt_aV[LEFT]) { c = "right:30px;" } else { c = "left:6px;" } tt_aElt[0].innerHTML = "" + (tt_aV[TITLE].length ? '<div id="WzTiTl" style="position:relative;z-index:1;"><table id="WzTiTlTb"' + b + 'id="WzTiTlI" style="' + a + '">' + tt_aV[TITLE] + "</td>" + (tt_aV[CLOSEBTN] ? '<td align="right" style="' + a + 'text-align:right;"><span id="WzClOsE" style="padding-left:2px;padding-right:2px;cursor:' + (tt_ie ? "hand" : "pointer") + ';" onmouseover="tt_OnCloseBtnOver(1)" onmouseout="tt_OnCloseBtnOver(0)" onclick="tt_HideInit()">' + tt_aV[CLOSEBTNTEXT] + "</span></td>" : "") + "</tr></tbody></table></div>" : "") + '<div id="WzBoDy" style="position:relative;z-index:0;border:none;"><table' + b + 'id="WzBoDyI" style="' + a + '">' + tt_sContent + '</td></tr></tbody></table></div><div class="ImgArrTTBtm" style="' + c + '"></div>' + (tt_aV[SHADOW] ? '<div id="WzTtShDwR" style="position:absolute;overflow:hidden;"></div><div id="WzTtShDwB" style="position:relative;overflow:hidden;"></div>' : ""); tt_GetSubDivRefs(); if (tt_t2t && !tt_aV[COPYCONTENT]) { tt_t2tDad = tt_t2t.parentNode || tt_t2t.parentElement || tt_t2t.offsetParent || null; if (tt_t2tDad) { tt_MovDomNode(tt_t2t, tt_t2tDad, tt_aElt[6]); tt_t2t.style.display = "block" } } tt_ExtCallFncs(0, "SubDivsCreated")
}

function tt_MkTipContent(a) {
    if (tt_t2t) {
        if (tt_aV[COPYCONTENT]) {
            tt_sContent = tt_t2t.innerHTML
        } else {
            tt_sContent = ""
        }
    } else {
        a[0] = a[0].replaceAll('"', '').replaceAll("'", "");
        tt_sContent = htmlDecode(htmlEncode(a[0]));
    }
    tt_ExtCallFncs(0, "CreateContentString")
}

function tt_AdaptConfig2() {
    if (tt_aV[CENTERMOUSE]) { tt_aV[OFFSETX] -= tt_w - (tt_aV[SHADOW] ? tt_aV[SHADOWWIDTH] : 0) >> 1 }
}

function tt_AdaptConfig1() {
    tt_ExtCallFncs(0, "LoadConfig"); if (!tt_aV[TITLEBGCOLOR].length) { tt_aV[TITLEBGCOLOR] = tt_aV[BORDERCOLOR] } if (!tt_aV[TITLEFONTCOLOR].length) { tt_aV[TITLEFONTCOLOR] = tt_aV[BGCOLOR] } if (!tt_aV[TITLEFONTFACE].length) { tt_aV[TITLEFONTFACE] = tt_aV[FONTFACE] } if (!tt_aV[TITLEFONTSIZE].length) { tt_aV[TITLEFONTSIZE] = tt_aV[FONTSIZE] } if (tt_aV[CLOSEBTN]) { if (!tt_aV[CLOSEBTNCOLORS]) { tt_aV[CLOSEBTNCOLORS] = new Array("", "", "", "") } for (var a = 4; a;) { --a; if (!tt_aV[CLOSEBTNCOLORS][a].length) { tt_aV[CLOSEBTNCOLORS][a] = a & 1 ? tt_aV[TITLEFONTCOLOR] : tt_aV[TITLEBGCOLOR] } } if (!tt_aV[TITLE].length) { tt_aV[TITLE] = " " } } if (tt_aV[OPACITY] == 100 && typeof tt_aElt[0].style.MozOpacity != tt_u && !Array.every) { tt_aV[OPACITY] = 99 } if (tt_aV[FADEIN] && tt_flagOpa && tt_aV[DELAY] > 100) { tt_aV[DELAY] = Math.max(tt_aV[DELAY] - tt_aV[FADEIN], 100) }
}

function tt_ReadCmds(a) {
    var b; b = 0; for (var c in config) { tt_aV[b++] = config[c] } if (a.length & 1) { for (b = a.length - 1; b > 0; b -= 2) { tt_aV[a[b - 1]] = a[b] } return true } tt_Err("Incorrect call of Tip() or TagToTip().\nEach command must be followed by a value."); return false
}

function tt_Tip(a, b) {
    if (!tt_db) { return } if (tt_iState) { tt_Hide() } if (!tt_Enabled) { return } tt_t2t = b; if (!tt_ReadCmds(a)) { return } tt_iState = 1 | 4; tt_AdaptConfig1(); tt_MkTipContent(a); tt_MkTipSubDivs(); tt_FormatTip(); tt_bJmpVert = false; tt_maxPosX = tt_GetClientW() + tt_scrlX - tt_w - 1; tt_maxPosY = tt_GetClientH() + tt_scrlY - tt_h - 1; tt_AdaptConfig2(); tt_Move(); tt_ShowInit()
}

function tt_HideSrcTag(a) {
    var b, c; b = a.replace(/.+'([^'.]+)'.+/, "$1"); c = tt_GetElt(b); if (c) { if (tt_Debug && !TagsToTip) { return false } else { c.style.display = "none" } } else { tt_Err("Invalid ID\n'" + b + "'\npassed to TagToTip(). There exists no HTML element with that ID.") } return true
}

function tt_HideSrcTagsRecurs(a) {
    var b, c, d; b = a.childNodes || a.children || null; for (var e = b ? b.length : 0; e;) { --e; if (!tt_HideSrcTagsRecurs(b[e])) { return false } c = b[e].getAttribute ? b[e].getAttribute("onmouseover") : typeof b[e].onmouseover == "function" ? b[e].onmouseover : null; if (c) { d = c.toString().match(/TagToTip\s*\(\s*'[^'.]+'\s*[\),]/); if (d && d.length) { if (!tt_HideSrcTag(d[0])) { return false } } } } return true
}

function tt_HideSrcTags() {
    if (!window.tt_HideSrcTags || window.tt_HideSrcTags.done) { return } window.tt_HideSrcTags.done = true; if (!tt_HideSrcTagsRecurs(tt_body)) { tt_Err("To enable the capability to convert HTML elements to tooltips, you must set TagsToTip in the global tooltip configuration to true.") }
}

function tt_SetOnloadFnc() {
    tt_AddEvtFnc(document, "DOMContentLoaded", tt_HideSrcTags); tt_AddEvtFnc(window, "load", tt_HideSrcTags); if (tt_body.attachEvent) { tt_body.attachEvent("onreadystatechange", function () { if (tt_body.readyState == "complete") { tt_HideSrcTags() } }) } if (/WebKit|KHTML/i.test(navigator.userAgent)) { var a = setInterval(function () { if (/loaded|complete/.test(document.readyState)) { clearInterval(a); tt_HideSrcTags() } }, 10) }
}

function tt_OpaSupport() {
    var a = tt_body.style; tt_flagOpa = typeof a.filter != tt_u ? 1 : typeof a.KhtmlOpacity != tt_u ? 2 : typeof a.KHTMLOpacity != tt_u ? 3 : typeof a.MozOpacity != tt_u ? 4 : typeof a.opacity != tt_u ? 5 : 0
}

function tt_IsW3cBox() {
    var a = tt_aElt[0].style; a.padding = "10px"; a.width = "40px"; tt_bBoxOld = tt_GetDivW(tt_aElt[0]) == 40; a.padding = "0px"; tt_ResetMainDiv()
}

function tt_ResetMainDiv() {
    var a = window.screen && screen.width ? screen.width : 10000; tt_SetTipPos(-a, 0); tt_aElt[0].innerHTML = ""; tt_aElt[0].style.width = a - 1 + "px"
}

function tt_GetMainDivRefs() {
    tt_aElt[0] = tt_GetElt("WzTtDiV"); if (tt_ie56 && tt_aElt[0]) { tt_aElt[tt_aElt.length - 1] = tt_GetElt("WzTtIfRm"); if (!tt_aElt[tt_aElt.length - 1]) { tt_aElt[0] = null } } if (tt_aElt[0]) { var a = tt_aElt[0].style; a.visibility = "hidden"; a.position = "absolute"; a.overflow = ""; return true } return false
}

function tt_MkMainDivDom() {
    var a = document.createElement("div"); if (a) { a.id = "WzTtDiV" } return a
}

function tt_MkMainDivHtm() {
    return '<div id="WzTtDiV"></div>' + (tt_ie56 ? '<iframe id="WzTtIfRm" src="javascript:false" scrolling="no" frameborder="0" style="filter:Alpha(opacity=0);position:absolute;top:0px;left:0px;display:none;"></iframe>' : "")
}

function tt_MkMainDiv() {
    if (tt_body.insertAdjacentHTML) { tt_body.insertAdjacentHTML("afterBegin", tt_MkMainDivHtm()) } else { if (typeof tt_body.innerHTML != tt_u && document.createElement && tt_body.appendChild) { tt_body.appendChild(tt_MkMainDivDom()) } } if (window.tt_GetMainDivRefs && tt_GetMainDivRefs()) { return true } tt_db = null; return false
}

function tt_Browser() {
    var n, nv, n6, w3c; n = navigator.userAgent.toLowerCase(), nv = navigator.appVersion; tt_op = document.defaultView && typeof eval("window.opera") != tt_u; tt_ie = n.indexOf("msie") != -1 && document.all && !tt_op; if (tt_ie) { var ieOld = !document.compatMode || document.compatMode == "BackCompat"; tt_db = !ieOld ? document.documentElement : document.body || null; if (tt_db) { tt_ie56 = parseFloat(nv.substring(nv.indexOf("MSIE") + 5)) >= 5.5 && typeof document.body.style.maxHeight == tt_u } } else { tt_db = document.documentElement || document.body || (document.getElementsByTagName ? document.getElementsByTagName("body")[0] : null); if (!tt_op) { n6 = document.defaultView && typeof document.defaultView.getComputedStyle != tt_u; w3c = !n6 && document.getElementById } } tt_body = document.getElementsByTagName ? document.getElementsByTagName("body")[0] : document.body || null; if (tt_ie || n6 || tt_op || w3c) { if (tt_body && tt_db) { if (document.attachEvent || document.addEventListener) { return true } } else { tt_Err("wz_tooltip.js must be included INSIDE the body section, immediately after the opening <body> tag.") } } tt_db = null; return false
}

function tt_MkCmdEnum() {
    var n = 0; for (var i in config) { eval("window." + i.toString().toUpperCase() + " = " + n++) } tt_aV.length = n
}

function tt_Init() {
    tt_MkCmdEnum(); if (!tt_Browser() || !tt_MkMainDiv()) { return } tt_IsW3cBox(); tt_OpaSupport(); tt_AddEvtFnc(document, "mousemove", tt_Move); if (TagsToTip || tt_Debug) { tt_SetOnloadFnc() } tt_AddEvtFnc(window, "scroll", function () { tt_scrlX = tt_GetScrollX(); tt_scrlY = tt_GetScrollY(); if (tt_iState && !(tt_aV[STICKY] && tt_iState & 2)) { tt_HideInit() } }); tt_AddEvtFnc(window, "unload", tt_Hide); tt_Hide()
}

function tt_RemEvtFnc(a, b, c) {
    if (a) { if (a.removeEventListener) { a.removeEventListener(b, c, false) } else { a.detachEvent("on" + b, c) } }
}

function tt_AddEvtFnc(a, b, c) {
    if (a) { if (a.addEventListener) { a.addEventListener(b, c, false) } else { a.attachEvent("on" + b, c) } }
}

function tt_GetEvtY(a) {
    return a ? typeof a.pageY != tt_u ? a.pageY : a.clientY + tt_scrlY : 0
}

function tt_GetEvtX(a) {
    return a ? typeof a.pageX != tt_u ? a.pageX : a.clientX + tt_scrlX : 0
}

function tt_GetClientH() {
    return document.body && typeof document.body.clientHeight != tt_u ? document.body.clientHeight : typeof window.innerHeight != tt_u ? window.innerHeight : tt_db ? tt_db.clientHeight || 0 : 0
}

function tt_GetClientW() {
    return document.body && typeof document.body.clientWidth != tt_u ? document.body.clientWidth : typeof window.innerWidth != tt_u ? window.innerWidth : tt_db ? tt_db.clientWidth || 0 : 0
}

function tt_GetScrollY() {
    return window.pageYOffset || (tt_db ? tt_db.scrollTop || 0 : 0)
}

function tt_GetScrollX() {
    return window.pageXOffset || (tt_db ? tt_db.scrollLeft || 0 : 0)
}

function tt_GetDivH(a) {
    return a ? a.offsetHeight || a.style.pixelHeight || 0 : 0
}

function tt_GetDivW(a) {
    return a ? a.offsetWidth || a.style.pixelWidth || 0 : 0
}

function tt_GetElt(a) {
    return document.getElementById ? document.getElementById(a) : document.all ? document.all[a] : null
}

function tt_Hide() {
    if (tt_db && tt_iState) { if (tt_iState & 2) { tt_aElt[0].style.visibility = "hidden"; tt_ExtCallFncs(0, "Hide") } tt_tShow.EndTimer(); tt_tHide.EndTimer(); tt_tDurt.EndTimer(); tt_tFade.EndTimer(); if (!tt_op && !tt_ie) { tt_tWaitMov.EndTimer(); tt_bWait = false } if (tt_aV[CLICKCLOSE]) { tt_RemEvtFnc(document, "mouseup", tt_HideInit) } tt_AddRemOutFnc(false); tt_ExtCallFncs(0, "Kill"); if (tt_t2t && !tt_aV[COPYCONTENT]) { tt_t2t.style.display = "none"; tt_MovDomNode(tt_t2t, tt_aElt[6], tt_t2tDad) } tt_iState = 0; tt_over = null; tt_ResetMainDiv(); if (tt_aElt[tt_aElt.length - 1]) { tt_aElt[tt_aElt.length - 1].style.display = "none" } }
}

function tt_SetTipPos(a, b) {
    var c = tt_aElt[0].style; tt_x = a; tt_y = b; c.left = a + "px"; c.top = b + "px"; if (tt_ie56) { var d = tt_aElt[tt_aElt.length - 1]; if (d) { d.style.left = c.left; d.style.top = c.top } }
}

function tt_Extension() {
    tt_ExtCmdEnum(); tt_aExt[tt_aExt.length] = this; return this
}

function TagToTip() {
    if (TagsToTip) { var a = tt_GetElt(arguments[0]); if (a) { tt_Tip(arguments, a) } }
}

function Tip() {
    tt_Tip(arguments, null)
}

var config = new Object;
var tt_Debug = false;
var tt_Enabled = true;
var TagsToTip = false;
config.Above = true;
config.BgColor = "#FFFFFF";
config.BgImg = "";
config.BorderColor = "#999999";
config.BorderStyle = "solid";
config.BorderWidth = 3;
config.CenterMouse = false;
config.ClickClose = true;
config.CloseBtn = false;
config.CloseBtnColors = ["#990000", "#FFFFFF", "#DD3333", "#FFFFFF"];
config.CloseBtnText = "";
config.CopyContent = true;
config.Delay = 100;
config.Duration = 0;
config.FadeIn = 0;
config.FadeOut = 0;
config.FadeInterval = 100;
config.Fix = null;
config.FollowMouse = false;
config.FontColor = "#333333";
config.FontFace = "Verdana,Geneva,sans-serif";
config.FontSize = "12px";
config.FontWeight = "normal";
config.Left = true;
config.OffsetX = -43;
config.OffsetY = 20;
config.Opacity = 100;
config.Padding = 28;
config.Shadow = false;
config.ShadowColor = "#C0C0C0";
config.ShadowWidth = 5;
config.Sticky = true;
config.TextAlign = "left";
config.Title = "";
config.TitleAlign = "left";
config.TitleBgColor = "#666666";
config.TitleFontColor = "#ffffff";
config.TitleFontFace = "";
config.TitleFontSize = "";
config.Width = 0;
config.DadElementID = "";
var tt_aElt = new Array(10), tt_aV = new Array, tt_sContent, tt_scrlX = 0, tt_scrlY = 0, tt_musX, tt_musY, tt_over, tt_x, tt_y, tt_w, tt_h;
var tt_aExt = new Array, tt_db, tt_op, tt_ie, tt_ie56, tt_bBoxOld, tt_body, tt_flagOpa, tt_maxPosX, tt_maxPosY, tt_iState = 0, tt_opa, tt_bJmpVert, tt_t2t, tt_t2tDad, tt_elDeHref, tt_tShow = new Number(0), tt_tHide = new Number(0), tt_tDurt = new Number(0), tt_tFade = new Number(0), tt_tWaitMov = new Number(0), tt_bWait = false, tt_u = "undefined";
tt_AddRemOutFnc.bOn = false;
Number.prototype.Timer = function (a, b, c) {
    if (!this.value || c) { this.value = window.setTimeout(a, b) }
};
Number.prototype.EndTimer = function () {
    if (this.value) { window.clearTimeout(this.value); this.value = 0 }
}; tt_Init();

function TipLeft(msg, id) { Tip(msg, OFFSETY, -15, DADELEMENTID, id); }

function TipRight(msg, id) { Tip(msg, LEFT, false, OFFSETY, -15, OFFSETX, -21, DADELEMENTID, id); }

var MVPrintOptObj = function (o) {

    var that = this;
    var MainTableID = "#" + o.MainTableID;
    var OptsCntnrID = "#" + o.OptsCntnrID;
    var DocChoice = o.DocChoice;
    var DisplayStyle = o.DisplayStyle;
    var HdLblID = "#" + o.HdLblID;
    var CloseImgID = "#" + o.ClsImgID;
    var PointerDir = o.PointerDir;
    var DocID = 0, OptionsTrkClk = 0, PorEParam = "P";
    var OriginalText = [''];
    var Texts = o.Texts;
    var OptCntId = $(OptsCntnrID).find("div");
    var AddOptClickEvents = function () {
        var optCount = 0;
        $(OptsCntnrID).find("div").each(function (i) {
            $(this).off();
            if ($(this).html() === "") {
                $(this).hide();
            } else {
                OriginalText[i] = $(this).html();
                $(this).on("click", function () {

                    that.OpenWindow(i, DocChoice, DocID, PorEParam);
                    if (DisplayStyle === that.DisplayStyleOpt.DropDown) {
                        HideDDOptions(PorEParam);
                    }
                });
                optCount = optCount + 1;
            }
        });
        return optCount
    };
    var AlterDDTexts = function (PorEParam) {

        OptCntId.each(function (i) {

            if ($(this).html() !== "") {
                if (PorEParam === "P") {
                    $(this).html(Texts.Print + ' - ' + OriginalText[i])
                } else if (PorEParam === "E") {
                    $(this).html(Texts.Email + ' - ' + OriginalText[i])
                }
            }
        });
    };
    var AlterDDTextsBack = function (PorEParam) {

        OptCntId.each(function (i) {

            if ($(this).html() !== "") {
                if (PorEParam === "P") {
                    $(this).html(OriginalText[i]);
                } else if (PorEParam === "E") {
                    $(this).html(OriginalText[i]);
                }
            }
        });
    };
    var ShowDDOptions = function (sender, PorE) {
        $(MainTableID).show();
        $(MainTableID).position({ my: "right top", at: "right bottom", of: $(sender) });
        OptionsTrkClk = -1;
        AlterDDTexts(PorE);
        $(MainTableID).removeClass("P").removeClass("E").addClass(PorE);
    };
    var HideDDOptions = function (PorE) {
        $(MainTableID).hide();
        OptionsTrkClk = 0;
        AlterDDTextsBack(PorE);
    };
    var AdjustPopUpOptions = function (dC, sC) {
        var c = DocumentChoices;
        var f = that.FormatChoices;
        HideFormatChoices();
        switch (dC) {
            case c.SalesOrder: ShowFormatChoices(f.ProformaInv, f.PickSlip, f.PackSlip, f.PickList); break;
            case c.GoodsOutbound:
            case c.GoodsTransfer:
            case c.WorkOrder:
            case c.GoodsReturnToSupplier: ShowFormatChoices(f.PickSlip, f.PackSlip, f.DelivSlip); break;
            case c.GoodsReturnToSupplierWithCredit: ShowFormatChoices(f.PickSlip, f.PackSlip, f.DelivSlip); break;
            case c.GoodsReturnToSupplierNoCredit: ShowFormatChoices(f.PickSlip, f.PackSlip, f.DelivSlip); break;
            case c.SalesInvoice: if (sC === 0) { ShowFormatChoices(f.PickSlip, f.PackSlip) } else { ShowFormatChoices(f.PickSlip, f.PackSlip, f.DelivSlip) } break;
            case c.PurchaseOrder: ShowFormatChoices(f.PickList); break;
            case c.GoodsInbound:
            case c.HandlingInvoice:
            case c.PurchaseInvoice:
            case c.FinishedGoodsReceipt:
            case c.GoodsReturnFromClient: ShowFormatChoices(f.RcptSlip); break;
            case c.GoodsReturnFromClientWithCredit: ShowFormatChoices(f.RcptSlip); break;
            case c.GoodsReturnFromClientNoCredit: ShowFormatChoices(f.RcptSlip); break;
            case c.AllTransactions: showFormatChoices(f.RcptSlip, f.PickSlip, f.PackSlip, f.DelivSlip)
        }
    };
    var ShowFormatChoices = function (args) {
        var count = arguments.length;
        for (var i = 0; i < count; i++) {
            $(OptsCntnrID).find("div:eq(" + arguments[i] + ")").show();
        }
    };
    var HideFormatChoices = function () {
        $(OptsCntnrID).find("div:gt(0)").hide()
    };

    if (DisplayStyle === this.DisplayStyleOpt.DropDown) {
        $(OptsCntnrID).find("div").addClass("docMOptItemE");
        $(MainTableID).on({
            mouseenter: function (e) { OptionsTrkClk = 1 },
            mouseleave: function (e) { OptionsTrkClk = 0 }
        });
    } else {
        if (DisplayStyle === this.DisplayStyleOpt.PopUp) {
            $(OptsCntnrID).find("div:eq(0)").html("-");
            $(OptsCntnrID).find("div").addClass("LikeLink Pad10");
            AddOptClickEvents();
            $(CloseImgID).off("click").on("click", function (e) {
                that.HidePopUp();
            });
        }
    }
    this.ShowPopUp = function (dC, dN, sC, id, PorE, s) {
        DocID = parseInt(id, 10);
        PorEParam = PorE;
        if (PorEParam === "P") {
            $(HdLblID).html(Texts.Print);
        }
        if (PorEParam === "E") {
            $(HdLblID).html(Texts.Email);
        }
        $(OptsCntnrID).find("div:eq(" + that.FormatChoices.Itself + ")").html(htmlEncode(dN.split(" #")[0])).show();
        AdjustPopUpOptions(parseInt(dC, 10), parseInt(sC, 10));
        if (PointerDir == "Left" || PointerDir == "") {
            $(MainTableID).show().position({ my: "left+21 top-42", at: "right top", of: $(s), collision: 'none' });
        }
        if (PointerDir == "Right") {
            $(MainTableID).show().position({ my: "right-21 top-42", at: "left top", of: $(s), collision: 'none' });
        }
    };
    this.HidePopUp = function () {
        $(MainTableID).hide();
    };
    this.AdjustDLDropDownPrintOptions = function (dC, id, pObj, eObj) {
        DocID = id;
        var OptionCount = AddOptClickEvents();
        if (OptionCount > 0) {
            $('#hdn_focusPrint').off('focusout').on('focusout', function () {
                if (OptionsTrkClk <= 0) { HideDDOptions("P") }
            });
            if (pObj) {
                pObj.onclick = null;
                pObj.onclick = function () {
                    if (OptionsTrkClk === 0) {
                        ShowDDOptions(pObj, "P"); $('#hdn_focusPrint').trigger('focus');
                    } else {
                        HideDDOptions("P")
                    }
                }
            }
            if (eObj) {
                eObj.onclick = null;
                eObj.onclick = function () {
                    if (OptionsTrkClk === 0) {
                        ShowDDOptions(eObj, "E"); $('#hdn_focusPrint').trigger('focus');
                    } else {
                        HideDDOptions("P")
                    }
                }
            }
        }
        if (OptionCount == 0 || DocID == "") {
            if (pObj) { } if (eObj) { }
        }
    };
    this.OpenWindow = function (f, dC, id, pOrE) {
        
        if (id / id != 1) {
            if (id.lastIndexOf(",") == id.length - 1) { id = id.substring(0, id.length - 1) }
        }
        var urlStr = "/inventory/PrintForms/";
        if (f === that.FormatChoices.Itself) {
            if (dC === DocumentChoices.WorkOrder) {
                urlStr = urlStr + "PrintWorkOrder.aspx?id=";
            } else {
                urlStr = urlStr + "PrintInvoice.aspx?id=";
            }
        } else {
            if (f === that.FormatChoices.ProformaInv) {
                urlStr = urlStr + "PrintProForma.aspx?id=";
            }
            if (f === that.FormatChoices.PickSlip || f === this.FormatChoices.RcptSlip) {
                urlStr = urlStr + "PrintPickPackSlipForm.aspx?type=pick&id=";
            }
            if (f === that.FormatChoices.PackSlip) {
                urlStr = urlStr + "PrintPickPackSlipForm.aspx?type=pack&id=";
            }
            if (f === that.FormatChoices.DelivSlip) {
                urlStr = urlStr + "PrintDeliveryNoteForm.aspx?id=";
            }
            if (f === that.FormatChoices.PickList) {
                urlStr = urlStr + "PickList.aspx?type=pick&id=";
            }
        } urlStr = urlStr + id;
        if (pOrE === "E") {
            urlStr = urlStr + "&email=1&#HideWhenPrinting";
        }
        var newwindow = window.open(urlStr, "Print", "location=1,status=1,scrollbars=1,width=750,height=600");
    }
};
MVPrintOptObj.prototype = {
    DisplayStyleOpt: { Direct: 0, DropDown: 1, PopUp: 2 },
    FormatChoices: { Itself: 0, ProformaInv: 1, PickSlip: 2, PackSlip: 3, DelivSlip: 4, RcptSlip: 5, PickList: 6 },
    ShowPopUp: function (dC, dN, sC, id, PorE, s) { },
    HidePopUp: function () { },
    AdjustDLDropDownPrintOptions: function (dC, id, pObj, eObj) { },
    OpenWindow: function (f, dC, id, pOrE) { }
};

var serialNumberInput = function (serialNumbersArray) {

    return serialNumbersArray.map(ch => htmlEncode(ch.trim())).filter(Boolean);

    //ch.replace(/\s/g,'') instead of .trim() if we want to disallow spaces between text as well. Trim = letrim + ritrim
    //https://stackoverflow.com/questions/19888689/remove-empty-strings-from-array-while-keeping-record-without-loop
}

var batchNumberInput = function (batchNumbersArray) {

    return batchNumbersArray.map(ch => htmlEncode(ch.trim())).filter(Boolean);

    //ch.replace(/\s/g,'') instead of .trim() if we want to disallow spaces between text as well. Trim = letrim + ritrim
    //https://stackoverflow.com/questions/19888689/remove-empty-strings-from-array-while-keeping-record-without-loop
}

/* Javascript object for getting & showing the related documents of a given document */
var MVRltdDocsObj = function (e) {

    function t() {

        $(d).children("div").html("").hide();

    }

    function s() {

        $(d).children("span:eq(0)").show();

    }

    function i() {

        $(d).children("span:eq(0)").hide();

    }

    var n, a, o, c = this, r = "#" + e.mainPnlID, d = "#" + e.insidePnlID, l = e.showAsPopUp, h = "#" + e.closeImgID, p = "#" + e.headerLblID, u = e.printObj, v = e.texts, f = [0, 0, 0, 0, 0, 0];

    this.Show = function (e, m, S) {
        return 0 >= e ? (s(), void t()) : (l === !0 && (
            $(r).css("position", "fixed"),
            $(r).css("top", "20%"),
            $(p).html(S + " » " + v.rltdDocs),
            $(r).show(), $(h).off().on("click", function (e) { c.Hide() })
        ),
            e != n && (n = e, a = m, o = 0, f = [0, 0, 0, 0, 0, 0, 0, 0], t(), i()), ShowLoading(),
            void $.ajax({
                url: "/inventory/WebServices/MegaventoryWebServices.asmx/GetRelatedDocs",
                type: "GET",
                data: {
                    DocID: n,
                    ParentDocID: a,
                    SearchAfter: o
                },
                dataType: "xml",
                success: function (e, n) {
                    HideLoading();
                    var a = JSON.parse($("string", e).text());
                    if ("S" != a.status) return void alert(a.errMsg);
                    var c;
                    var r = {
                        Quotes: 0,
                        Orders: 1,
                        ShipReceiveInv: 2,
                        ShipReceiveOnly: 3,
                        Invoices: 4,
                        Returns: 5,
                        Works: 6,
                        Handling: 7
                    }
                    var l = a.docDtls;
                    var h = l.length;
                    var p = DocumentChoices;
                    var v = f;
                    var m = 0;
                    h > 0 ? (i(), o = a.docMaxID) : 0 == o && (s(), t());
                    for (var S = 0; h > S; S++) {
                        var b = l[S].type;
                        switch (b) {
                            case p.SalesQuote:
                                m = r.Quotes; break;
                            case p.SalesOrder:
                                m = r.Orders; break;
                            case p.AllSalesDocuments:
                            case p.AllPurchaseDocuments:
                            case p.GoodsInboundAndPurchaseInvoice:
                            case p.GoodsOutboundAndSalesInvoice:
                                m = r.ShipReceiveInv; break;
                            case p.SalesInvoice:
                                m = r.Invoices; break;
                            case p.GoodsReturnFromClient:
                                m = r.Returns; break;
                            case p.GoodsReturnFromClientWithCredit:
                                m = r.Returns; break;
                            case p.GoodsReturnFromClientNoCredit:
                                m = r.Returns; break;
                            case p.PurchaseOrder:
                                m = r.Orders; break;
                            case p.GoodsOutbound:
                            case p.GoodsInbound:
                                m = r.ShipReceiveOnly; break;
                            case p.PurchaseInvoice:
                                m = r.Invoices; break;
                            case p.GoodsReturnToSupplier:
                                m = r.Returns; break;
                            case p.GoodsReturnToSupplierWithCredit:
                                m = r.Returns; break;
                            case p.GoodsReturnToSupplierNoCredit:
                                m = r.Returns; break;
                            case p.HandlingInvoice:
                                m = r.Handling
                        }
                        c = $(d).children("div:eq(" + String(m) + ")");
                        0 === v[m] && "" !== l[S].hMsg && c.html('<div class="BrdBtm MarBot10" style="width:500px;margin-bottom:10px; color:Gray;">' + l[S].hMsg + "</div>").show();
                        var y = '<a onclick="ClickDocumentLink(this, event);" data-documenttype="' + l[S].doctype + '" data-entityid="' + l[S].id + '" data-documentname="' + l[S].docnameforurl + '" data-menuselection="' + GetMenuSelectionFromDocumentChoice(DocumentChoices[l[S].doctype]) + '" href="' + l[S].dPath + '">' + l[S].num + '</a><span class="smallest" style="color:Grey;">&nbsp;(' + l[S].ddate + ")</span>";
                        l[S].dStatusID === DocumentStages.Completed ? y = y + '<span class="smallest" style="color:Grey;">&nbsp;(' + l[S].dStatus + ")</span>" : l[S].dStatusID === DocumentStages.Cancelled && (y = y + '<span class="smallest" style="color:Red;">&nbsp;(' + l[S].dStatus + ")</span>");
                        var D = '<i class="fal fa-print LikeLink mvBasicColor MarL10"></i>', k = '<i class="fal fa-envelope LikeLink mvBasicColor MarL10"></i>', w = '<input type="hidden" value="' + l[S].type + "|" + l[S].num + "|" + l[S].stckChng + "|" + l[S].id + '" />';
                        c.append('<div class="PadBot5">' + y + D + k + w + "</div>");
                        c.find("i").eq(-2).on("click",
                            function (e) {
                                var t = $(this).parent().find("input[type=hidden]").val().split("|");
                                u.ShowPopUp(t[0], t[1], t[2], t[3], "P", this)
                            });
                        c.find("i").eq(-1).on("click",
                            function (e) {
                                var t = $(this).parent().find("input[type=hidden]").val().split("|");
                                u.ShowPopUp(t[0], t[1], t[2], t[3], "E", this)
                            }), v[m] += 1
                    }
                },
                error: function (e, t) {
                    HideLoading(), 401 == e.status && (window.location.href = window.location.href)
                }
            }))

    },

        this.Hide = function () {

            $(r).hide();

            u.HidePopUp();

        }

};

MVRltdDocsObj.prototype = {

    Show: function () { },

    Hide: function () { }

};


var MVDocHistoryObj = function (o) { var that = this; var docHistPnlID = "#" + o.mainPnlID; var addCommentsPnlID = "#" + o.commentsPnlID; var docHistHeaderLblID = "#" + o.headerLblID; var closeImgID = "#" + o.closeImgID; var histULID = "#" + o.histULID; var showAsPopUp = o.showAsPopUp; var texts = o.texts; var historyCount = 0, currentDocID = 0, currentDocChoice = 0, firstRetrDate = "", lastRetrDate = ""; var closePopUp = function () { $(docHistPnlID).hide(); hideModal(); }; var showModal = function () { $("#ConfirmationModalAdminMaster").show(); }; var hideModal = function () { $("#ConfirmationModalAdminMaster").hide(); }; var showHistory = function (responseAsXML) { var resultJSON = JSON.parse($("string", responseAsXML).text()); if (resultJSON.status == "S") { if (resultJSON.histLIs != "") { $(histULID).html(resultJSON.histLIs + $(histULID).html()); firstRetrDate = resultJSON.histFirstDate; lastRetrDate = resultJSON.histLastDate; historyCount = historyCount + resultJSON.numLIs; } else { if (historyCount === 0) { $(histULID).html("<li>" + texts.noHist + "</li>"); } } } }; var getHistory = function (docChoice, docID, validityID) { if (docID <= 0) { $(histULID).html("<li>" + texts.noHist + "</li>"); return; } if (docID !== currentDocID) { historyCount = 0; firstRetrDate = ""; lastRetrDate = ""; currentDocID = docID; currentDocChoice = docChoice; } if (historyCount == 0) { $(histULID).find("li").html("").css("display", "none"); } ShowLoading(); $.ajax({ "url": "/inventory/WebServices/MegaventoryWebServices.asmx/GetDocHistory", "type": "POST", "data": { "DocID": currentDocID, "DocChoice": currentDocChoice, "HistItemReqCount": 0, "FirstRetrDate": firstRetrDate, "LastRetrDate": lastRetrDate, "ValidityID": validityID }, "dataType": "xml", "success": function (response, status) { HideLoading(); showHistory(response); }, "error": function (xhr, err) { HideLoading(); if (xhr.status == 401) { window.location.href = window.location.href; } } }); }; this.ShowCommentArea = function () { $(addCommentsPnlID).show(); }; this.Show = function (docID, docChoice, docDesc) { if (showAsPopUp == true) { this.ShowCommentArea(); $(docHistPnlID).css("position", "fixed"); $(docHistPnlID).css("top", "20%"); $(docHistHeaderLblID).html(htmlEncode(docDesc) + " » " + texts.history); $(closeImgID).off().on("click", function (e) { closePopUp(); }); showModal(); $(docHistPnlID).show(); } getHistory(docChoice, docID, ""); }; this.AddCommentToDocHistory = function (sender) { if (currentDocID <= 0) { return; } var commentAreaTR = $(addCommentsPnlID).children("table").children("tbody").children("tr"); var commentAreaupdImg = commentAreaTR.children("td:eq(2)").find("img"); var commentAreaTxtBox = commentAreaTR.children("td:eq(0)").find("textarea"); if (commentAreaTxtBox.val() == "") { return; } sender.SetEnabled(false); commentAreaupdImg.show(); $.ajax({ "url": "/inventory/WebServices/MegaventoryWebServices.asmx/PostCommentToDocHistory", "type": "POST", "data": { "DocID": currentDocID, "DocChoice": currentDocChoice, "Comments": commentAreaTxtBox.val(), "sessionId": $('#hdn_formValidity').val() }, "datatType": "xml", "success": function (response, status) { commentAreaupdImg.hide(); commentAreaTxtBox.val(""); sender.SetEnabled(true); showHistory(response); }, "error": function (xhr, err) { commentAreaupdImg.hide(); sender.SetEnabled(true); commentAreaTxtBox.val(""); if (xhr.status == 401) { window.location.href = window.location.href; } } }); }; };
MVDocHistoryObj.prototype = { "Show": function (i, c, ds) { }, "ShowCommentArea": function () { }, "AddCommentToDocHistory": function (s, m) { } };

var MVCopyToClipboardObj = function (e) { var t = e.ProductsPageName, i = ("#" + e.NotificationElementID, e.GridClientInstanceName), o = e.PinBtn, a = e.PinBtnText, n = e.MsgBoxObj, r = e.AtLeastOneRowMsg, d = a; this.PinProductsToClipboard = function (e, o, a) { if (!i || "undefined" == typeof i || 0 === i.GetSelectedRowCount()) return void n.Show(r, ""); var d = "/inventory/WebServices/MegaventoryWebServices.asmx/UpdateClipboard"; o && "" != o || (o = "hdnGridKeyIds"); var s = { ProductsList: JSON.parse("[" + $("#" + o).val().replace(",", "").replace(/.$/, "") + "]"), sessionId: $('#hdn_formValidity').val() }; if (i.name.indexOf("_detailGrid") > -1 && (d = "/inventory/WebServices/MegaventoryWebServices.asmx/UpdateClipboardBOM", s.keyOfFinishedGood = a, s.sessionId = $('#hdn_formValidity').val()), t === this.ProductPageNames.OnHandInventoryAndAlerts) { if (d = "/inventory/WebServices/MegaventoryWebServices.asmx/UpdateClipboardWithQtyToBeOrdered", arguments[0] = i.cpSelectedLocations ? i.cpSelectedLocations.split(",") : [], !arguments[0]) return; 0 === arguments[0].length && (arguments[0][0] = -1), s.SelectedLocations = arguments[0], s.sessionId = $('#hdn_formValidity').val() } ShowLoading(), $.ajax({ url: d, type: "POST", data: s, dataType: "xml", success: function (e, t) { HideLoading(); var i = JSON.parse($("string", e).text()); "" !== i.Notification && ("S" === i.Status ? ShowNotification("s", i.Notification) : ShowNotification("f", i.Notification)), i.ClipboardItemCount > 0 ? $("#NoOfItemsInClipboard").html(i.ClipboardItemCount).addClass("img_Clipboard_NoOfItems") : $("#NoOfItemsInClipboard").html("").removeClass("img_Clipboard_NoOfItems"), $(Clipboard.MainElementID).is(":visible") && Clipboard.Show() }, error: function (e, t) { HideLoading() }, traditional: !0 }) }, this.UpdatePinBtnLabelText = function () { 0 == i.GetSelectedRowCount() ? $('#' + o).html(d) : $('#' + o).html(d + " (" + i.GetSelectedRowCount() + ")") } };
MVCopyToClipboardObj.prototype = { "ProductPageNames": { "ProductsList": 1, "OnHandInventoryAndAlerts": 2, "SupplierInventory": 3, "BillsOfMaterials": 4 }, "PinProductsToClipboard": function () { }, "UpdatePinBtnLabelText": function () { } };

var MVBarcodePrintingObj = function (e) {
    var i = ('#' + e.NotificationElementID, e.GridClientInstanceName),
        o = e.btnBarcodeLabelPrinting,
        a = e.btnBarcodeLabelPrintingText,
        n = e.MsgBoxObj,
        r = e.AtLeastOneRowMsg,
        d = a;
    this.PrintBarcodes = function (e, o, a) {

        if (!i || 'undefined' == typeof i || 0 === i.GetSelectedRowCount()) return void n.Show(r, '');
        o && '' != o || (o = 'hdnGridKeyIds');
        showPopup('/inventory/PrintLabels/PrintLabels.aspx?id=' + $("#" + o).val().replace(/^,|,$/g, ''));
    }, this.UpdatePrintBarcodesBtnLabelText = function () {
        0 == i.GetSelectedRowCount() ? $('#' + o).html(d) : $('#' + o).html(d + ' (' + i.GetSelectedRowCount() + ')')
    }
};
MVBarcodePrintingObj.prototype = {
    'PrintBarcodes': function () { },
    'UpdatePrintBarcodesBtnLabelText': function () { }
};

var MVDevExGridKeysObj = function (e, l) { var i = $("#" + l), a = function (e, l, a) { 1 == e ? ("" == i.val() && i.val(","), -1 == i.val().indexOf("," + l + ",") && i.val(i.val() + l + ",")) : (i.val().indexOf("," + l + ",") > -1 && i.val(i.val().replace("," + l + ",", ",")), "," == i.val() && i.val("")) }; this.ToggleGridRowKeys = function (l) { if (l.isAllRecordsOnPage) for (var i = e.GetTopVisibleIndex(); i < e.GetTopVisibleIndex() + e.GetVisibleRowsOnPage(); i++)a(l.isSelected, e.GetRowKey(i), i); else a(l.isSelected, e.GetRowKey(l.visibleIndex)) } };
MVDevExGridKeysObj.prototype = { "ToggleGridRowKeys": function (e) { } };

var MVCreateLokadObj = function (e) {
    var t = (e.ProductsPageName, "#" + e.NotificationElementID, e.GridClientInstanceName), a = (e.SupplierDrpDown, e.LokadBtn), o = e.LokadBtnText, n = e.LocationListBox, s = e.MsgBoxObj, c = e.AtLeastOneRowMsg;
    this.RunAnalysis = function (e) {
        if (!t || "undefined" == typeof t || 0 === t.GetSelectedRowCount()) return void s.Show(c, "");
        var a = t.cpSelectedSupplier ? t.cpSelectedSupplier : -1, o = t.cpSelectedLocations ? t.cpSelectedLocations.split(",") : null;
        if (!o) for (o = [], i = 0; i < n.GetItemCount(); i++) o[i] = n.GetItem(i).value;
        var r = "/inventory/WebServices/MegaventoryWebServices.asmx/SendFilesToLokad", l = {
            productIdList: JSON.parse("[" + $("#hdnGridKeyIds").val().replace(",", "").replace(/.$/, "") + "]"), inventoryLocationIdList: o, selectedSupplierId: a, sessionId: $('#hdn_formValidity').val()
        };
        ShowLoading(),
            $.ajax({
                url: r, type: "POST", data: l, dataType: "xml", success: function (e, t) {
                    HideLoading(); var a = $("string", e).text(); "S" !== a ? ShowNotification("f", a) : ShowNotification("s", 'Your files have been succesfully created and sent to the forecasting service over Lokad.com for analysis. click <a href="https://salescast2.lokad.com/">here</a> to start your project over Lokad.com')
                }, error: function (e, t) { HideLoading() }, traditional: !0
            })
    },
        this.Updatebtn_LokadLabelText = function () { 0 == t.GetSelectedRowCount() ? a.innerHTML = o : a.innerHTML = o + " (" + t.GetSelectedRowCount() + ")" }
};
MVCreateLokadObj.prototype = { 'ProductPageNames': { 'OnHandInventoryAndAlerts': 1, 'AnyReportPage': 2 }, 'RunAnalysis': function () { }, 'Updatebtn_LokadLabelText': function () { } }

var MVQuickActionsObj = function (o) {

    var that = this;
    var MainTableID = "#" + o.MainTableID;
    var OptsCntnrID = "#" + o.OptsCntnrID;
    var gridClientId = o.GridId;
    var DocChoice = o.DocChoice;
    var DisplayStyle = o.DisplayStyle;
    var HdLblID = "#" + o.HdLblID;
    var CloseImgID = "#" + o.ClsImgID;
    var PointerDir = o.PointerDir;
    var hdnGridKeyControl = o.hdnGridKeyControl;

    var DocID = 0, OptionsTrkClk = 0, invLocId = 0;

    var OriginalText = [''];

    var Texts = o.Texts;

    var AddOptClickEvents = function (serialOrBatchInfo) {

        var optCount = 0;

        $(OptsCntnrID).find("div.LikeLink").each(function (i) {

            var div_QuickAction = $(this);

            div_QuickAction.off();

            if (div_QuickAction.html() === "") {

                div_QuickAction.hide()

            } else {

                OriginalText[i] = div_QuickAction.html();

                div_QuickAction.on("click", function () {

                    if (div_QuickAction.data('wstorun').includes('ReceiveFinishedGoods') && typeof (serialOrBatchInfo) !== 'undefined') {

                        var serialOrBatchInfoSplitted = serialOrBatchInfo.split('#$#');

                        if (serialOrBatchInfoSplitted[0] == 'S') {

                            $('#SerialNumbersNeeded').text(' (' + serialOrBatchInfoSplitted[1] + ')');
                            $('#div_SerialNumbersPopupForQuickActions').css("display", "block");
                            $('#div_SerialNumbersPopupForQuickActions > .content').css("display", "block");

                            $('#div_SerialNumbersPopupForQuickActions').find('span.close').on("click", function () {

                                $('#div_SerialNumbersPopupForQuickActions').css("display", "none");
                                $('#div_SerialNumbersPopupForQuickActions > .content').css("display", "none");

                                //clear the textarea
                                $('#SerialNumberInput').val("");

                            });

                            $('#btn_SerialNumbersOk').off().on("click", function () {
                                
                                /* This calls the WS*/
                                that[div_QuickAction.data('wstorun')](DocID, invLocId, DocChoice)

                                $('#div_SerialNumbersPopupForQuickActions').css("display", "none");
                                $('#div_SerialNumbersPopupForQuickActions > .content').css("display", "none");

                            })

                        }

                        if (serialOrBatchInfoSplitted[0] == 'B') {

                            $('#BatchNumbersNeeded').text(' (' + serialOrBatchInfoSplitted[1] + ')');
                            $('#div_BatchNumbersPopupForQuickActions').css("display", "block");
                            $('#div_BatchNumbersPopupForQuickActions > .content').css("display", "block");

                            $('#div_BatchNumbersPopupForQuickActions').find('span.close').on("click", function () {

                                $('#div_BatchNumbersPopupForQuickActions').css("display", "none");
                                $('#div_BatchNumbersPopupForQuickActions > .content').css("display", "none");

                                //clear the textboxes
                                $('#BatchNumberName').val("");
                                $('#BatchNumberExpiryDate').val("");

                            });

                            //add datepicker to BatchNumberExiryDate inputs
                            $('#BatchNumberExpiryDate').datepicker({
                                beforeShow: function (textbox, instance) {
                                    instance.dpDiv.css({
                                        top: '0px'
                                    })
                                 },
                                dateFormat: "M dd, yy",
                                onSelect: (d, i) => {
                                    $(this).focus();
                                    if (d !== i.lastVal) {
                                        $(this).change();
                                    }
                                }
                            });

                            $('#btn_BatchNumbersOk').off().on("click", function () {

                                /* This calls the WS*/
                                that[div_QuickAction.data('wstorun')](DocID, invLocId, DocChoice)

                                $('#div_BatchNumbersPopupForQuickActions').css("display", "none");
                                $('#div_BatchNumbersPopupForQuickActions > .content').css("display", "none");

                            })

                        }

                    } else {

                        /* This calls the WS*/
                        that[div_QuickAction.data('wstorun')](DocID, invLocId, DocChoice)
                    }

                });

                optCount = optCount + 1;

            }

        });

        return optCount

    };

    var AdjustPopUpOptions = function (dC, availableBatchActions) {

        var c = DocumentChoices;

        var f = that.FormatChoices;

        HideFormatChoices();

        switch (dC) {
            case c.SalesOrder:
            case c.GoodsOutbound:
            case c.GoodsTransfer:
            case c.WorkOrder:
                ShowFormatChoices(availableBatchActions);
                break;
            case c.GoodsReturnToSupplier:
            case c.GoodsReturnToSupplierWithCredit:
            case c.GoodsReturnToSupplierNoCredit:
            case c.SalesInvoice:
            case c.PurchaseOrder:
            case c.GoodsInbound:
            case c.HandlingInvoice:
            case c.PurchaseInvoice:
            case c.GoodsReturnFromClient:
            case c.GoodsReturnFromClientWithCredit:
            case c.GoodsReturnFromClientNoCredit:
            case c.AllTransactions:
        }

    };

    var ShowFormatChoices = function (availableBatchActions) {

        var array = availableBatchActions.split(',');

        for (var i = 0; i < array.length; i++) {

            $(OptsCntnrID).find("div[data-wstorun='" + array[i] + "']").show();

        }

    };

    var HideFormatChoices = function () { $(OptsCntnrID).find('div').hide() };

    $(CloseImgID).on("click", function (e) { that.HidePopUp() })

    this.ShowPopUp = function (dC, dN, sC, id, locId, s) {

        DocID = parseInt(id, 10);

        invLocId = parseInt(locId, 10);

        $(HdLblID).html(Texts.UpdateStatus)

        if (PointerDir == "Left" || PointerDir == "") {

            $(MainTableID).show().position({
                my: "left+21 top-42",
                at: "right top",
                of: $(s),
                collision: 'none'
            })

        } else {

            if (PointerDir == "Right") {
                $(MainTableID).show().position({
                    my: "right-21 top-42",
                    at: "left top",
                    of: $(s),
                    collision: 'none'
                })

            }

        }

        HideFormatChoices();

        Megaventory.WebApplication.MegaventoryWebServices.AdjustBatchOperationsPopUpOptions(DocID,
            $('#hdn_formValidity').val(),
            AdjustBatchOperationsPopUpOptionsSuccess,
            AdjustBatchOperationsPopUpOptionsError);

        function AdjustBatchOperationsPopUpOptionsSuccess(response) {

            if (response.Status == '0') {

                AdjustPopUpOptions(parseInt(dC, 10), response.MessageList[0]);

                var serialNosNeeded = (typeof (response.MessageList[2]) !== "undefined" && response.MessageList[2].includes("S"));
                var batchNosNeeded = (typeof (response.MessageList[3]) !== "undefined" && response.MessageList[3].includes("B"));

                if (parseInt(dC, 10) == 90 && //documentChoice is WorkOrder 
                    (serialNosNeeded || batchNosNeeded) ) {

                    AddOptClickEvents(serialNosNeeded ? response.MessageList[2] : response.MessageList[3]);

                } else {

                    AddOptClickEvents();

                }

            } else {

                ShowNotification(response.Status, response.MessageList[0]);

            }

        }

        function AdjustBatchOperationsPopUpOptionsError(response) {

            ShowNotification(response.Status, response.MessageList[0]);

        }

    };

    this.HidePopUp = function () { $(MainTableID).fadeOut() };

    this.EndOfSuccessOperations = function (response, DocID, isThisTheLastCall, iterate) {

        if (iterate != true) {

            if (response.Status == '0' && isThisTheLastCall == true) { //on success only and on last call only (never in an iterate/batch operation)

                gridClientId.UnselectAllRowsOnPage();

                $('#' + hdnGridKeyControl).val('');

                gridClientId.Refresh();

                that.HidePopUp();

            }

            if (response.Status != '0' || isThisTheLastCall == true) {

                ShowNotification(response.Status, htmlEncode(htmlDecode(response.MessageList[0])));

                HideLoading();

            }

        }

        if (response.Status != '0' || isThisTheLastCall == true) {

            Megaventory.WebApplication.MegaventoryWebServices.DeleteDocumentValidity(DocID, $('#hdn_formValidity').val());

        }

    }

    this.EndOfOperationsWithFailure = function (response, DocID, iterate) {

        Megaventory.WebApplication.MegaventoryWebServices.DeleteDocumentValidity(DocID, $('#hdn_formValidity').val());

        ShowNotification(response.Status, htmlEncode(htmlDecode(response.MessageList[0])));

        HideLoading();

        if (iterate == true) {

            gridClientId.UnselectAllRowsOnPage();

            $('#' + hdnGridKeyControl).val('');

            gridClientId.Refresh(); // This also refreshes the grid

            $('#ConfirmationModalBatchActions').hide();

            $('#batchModal').hide();

        }

    }

    //Allocate Components
    this.AllocateComponents = function (DocID, invLocId, GoOnWithReceivingFinishedGoods, GoOnWithClosingWorkOrder, iterate) {

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.GetFGQtyToFullyAllocateComponentsOrFullyReturnComponents(DocID,
                    1,
                    GetFGQtyToFullyAllocateComponentsSuccess,
                    GetFGQtyToFullyAllocateComponentsError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function GetFGQtyToFullyAllocateComponentsSuccess(response) {

            if (response.Status == '0') { //on success only

                Megaventory.WebApplication.MegaventoryWebServices.CheckFGQtyForBatchRawMaterialAllocation(DocID,
                    response.MessageList[0],
                    ValidityId,
                    CheckFGQtyForInvAllocationSuccess,
                    CheckFGQtyForInvAllocationError)

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function GetFGQtyToFullyAllocateComponentsError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function CheckFGQtyForInvAllocationSuccess(response) {

            if (response.Status == '0') { //on success only

                var BOMItemQtyArray = response.MessageList[0].split(',');

                Megaventory.WebApplication.MegaventoryWebServices.AllocateInventory(DocID,
                    BOMItemQtyArray,
                    "",
                    ValidityId,
                    [],
                    [],
                    1,
                    AllocateComponentsSuccess,
                    AllocateComponentsError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckFGQtyForInvAllocationError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function AllocateComponentsSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = !GoOnWithReceivingFinishedGoods;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (GoOnWithReceivingFinishedGoods == true) {

                    that.ReceiveFinishedGoods(DocID, invLocId, GoOnWithClosingWorkOrder, iterate);

                } else {

                    if (iterate == true) BatchActions.IterateBatchActions();

                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function AllocateComponentsError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Allocate Components

    //Return Components
    this.ReturnComponents = function (DocID, invLocId, iterate) {

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.GetFGQtyToFullyAllocateComponentsOrFullyReturnComponents(DocID,
                    2,
                    GetFGQtyToFullyReturnComponentsSuccess,
                    GetFGQtyToFullyReturnComponentsError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function GetFGQtyToFullyReturnComponentsSuccess(response) {

            if (response.Status == '0') { //on success only

                Megaventory.WebApplication.MegaventoryWebServices.CheckFGQtyForBatchRawMaterialReturn(DocID,
                    response.MessageList[0],
                    ValidityId,
                    CheckFGQtyForInvReturnSuccess,
                    CheckFGQtyForInvReturnError) // 1 is for Allocation, 2 for Return

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function GetFGQtyToFullyReturnComponentsError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function CheckFGQtyForInvReturnSuccess(response) {

            if (response.Status == '0') { //on success only

                var BOMItemQtyArray = response.MessageList[0].split(',');

                Megaventory.WebApplication.MegaventoryWebServices.ReturnInventory(DocID, BOMItemQtyArray, "", ValidityId, [], 1, [], ReturnComponentsSuccess, ReturnComponentsError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }


        };

        function CheckFGQtyForInvReturnError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function ReturnComponentsSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = true;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (iterate == true) {

                    BatchActions.IterateBatchActions();

                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function ReturnComponentsError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Return Components

    //Receive FGs
    this.ReceiveFinishedGoods = function (DocID, invLocId, GoOnWithClosingWorkOrder, iterate, serialNumbers, batchNumbers) {

        var QtyToReceive;

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.GetFGQtyToFullyReceive(DocID,
                    ValidityId,
                    GetFGQtyToFullyReceiveSuccess,
                    GetFGQtyToFullyReceiveError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function GetFGQtyToFullyReceiveSuccess(response) {

            if (response.Status == '0') { //on success only

                QtyToReceive = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.CheckFGReceiveQty(DocID,
                    QtyToReceive,
                    '',
                    ValidityId, CheckFGReceiveQtySuccess,
                    CheckFGReceiveQtyError)

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function GetFGQtyToFullyReceiveError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function CheckFGReceiveQtySuccess(response) {
            
            if (response.Status == '0') {
                
                let FGserialNumbers = [];

                if ($('#SerialNumberInput' + DocID).length > 0) {

                    FGserialNumbers = serialNumberInput($('#SerialNumberInput' + DocID).val().split(','));

                } else if ($('#SerialNumberInput').length > 0) {

                    FGserialNumbers = serialNumberInput($('#SerialNumberInput').val().split(','));

                    //clear the textarea
                    $('#SerialNumberInput').val("");

                }

                let separator = StaticObj.separatorString;

                let FGbatchNumbers = [];

                if ($('#BatchNumberName' + DocID).length > 0) {

                    let dateToPass = MV_StringToDate($('#BatchNumberExpiryDate' + DocID).val(), 'MMM dd, YYYY');

                    dateToPass = MV_GetSimpleDate(dateToPass);

                    FGbatchNumbers[0] = $('#BatchNumberName' + DocID).val() + separator + dateToPass;

                } else if ($('#BatchNumberName').length > 0) {

                    let dateToPass = MV_StringToDate($('#BatchNumberExpiryDate').val(), 'MMM dd, YYYY');

                    dateToPass = MV_GetSimpleDate(dateToPass);

                    FGbatchNumbers[0] = $('#BatchNumberName').val() + separator + dateToPass;

                    //clear the textboxes
                    $('#BatchNumberName').val("");
                    $('#BatchNumberExpiryDate').val("");

                }

                //we must check if the action came via the gear action popup or via the batch update module
                var gearAction = (FGserialNumbers.length > 0  || FGbatchNumbers.length > 0 ? 0 : 1);
                
                Megaventory.WebApplication.MegaventoryWebServices.ReceiveFinishedGood(DocID,
                    QtyToReceive,
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    ValidityId,
                    FGserialNumbers,
                    gearAction,
                    FGbatchNumbers,
                    ReceiveFinishedGoodSuccess, ReceiveFinishedGoodError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        }

        function CheckFGReceiveQtyError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        }

        function ReceiveFinishedGoodSuccess(response) {

            if (response.Status == '0') {

                response.MessageList[0] = response.MessageList[2];

                var isThisTheLastCall = !GoOnWithClosingWorkOrder;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (GoOnWithClosingWorkOrder == true) {

                    that.CloseWorkOrder(DocID, invLocId, iterate);

                } else {

                    if (iterate == true) BatchActions.IterateBatchActions();

                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function ReceiveFinishedGoodError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Receive Finished Goods

    //Close Work Order
    this.CloseWorkOrder = function (DocID, invLocId, iterate) {

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.CloseWorkOrder(DocID,
                    '',
                    '',
                    '',
                    '',
                    ValidityId,
                    CloseWorkOrderSuccess,
                    CloseWorkOrderError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function CloseWorkOrderSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = true;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (iterate == true) {

                    BatchActions.IterateBatchActions();
                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CloseWorkOrderError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Close Work Order

    //Re Open Work Order
    this.ReOpenWorkOrder = function (DocID, iterate) {

        ShowLoading();

        Megaventory.WebApplication.MegaventoryWebServices.ReOpenWorkOrder(DocID,
            ReOpenWorkOrderSuccess,
            ReOpenWorkOrderError);


        function ReOpenWorkOrderSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = true;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (iterate == true) {

                    BatchActions.IterateBatchActions();

                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function ReOpenWorkOrderError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Re Open Work Order

    //Cancel Work Order
    this.CancelWorkOrder = function (DocID, invLocId, iterate) {

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.CancelWorkOrder(DocID,
                    '',
                    ValidityId,
                    CancelWorkOrderSuccess,
                    CancelWorkOrderError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function CancelWorkOrderSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = true;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (iterate == true) {

                    BatchActions.IterateBatchActions();

                }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CancelWorkOrderError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Cancel Work Order

    //Delete Work Order
    this.DeleteWorkOrder = function (DocID, invLocId, iterate) {

        ShowLoading();

        var ValidityId;

        Megaventory.WebApplication.MegaventoryWebServices.CheckDocumentValidity(DocID,
            invLocId,
            1,
            '',
            $('#hdn_formValidity').val(),
            CheckDocumentValiditySuccess,
            CheckDocumentValidityError);

        function CheckDocumentValiditySuccess(response) {

            if (response.Status == '0') { //on success only

                ValidityId = response.MessageList[0];

                Megaventory.WebApplication.MegaventoryWebServices.DeleteWorkOrder(DocID,
                    ValidityId,
                    DeleteWorkOrderSuccess,
                    DeleteWorkOrderError);

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function CheckDocumentValidityError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

        function DeleteWorkOrderSuccess(response) {

            if (response.Status == '0') {

                var isThisTheLastCall = true;

                that.EndOfSuccessOperations(response, DocID, isThisTheLastCall, iterate);

                if (iterate == true) { BatchActions.IterateBatchActions(); }

            } else {

                that.EndOfOperationsWithFailure(response, DocID, iterate);

            }

        };

        function DeleteWorkOrderError(response) {

            that.EndOfOperationsWithFailure(response, DocID, iterate);

        };

    };
    // End Delete Work Order

    this.AllocateComponentsReceiveFinishedGoods = function (DocID, invLocId, iterate) {

        var GoOnWithReceivingFinishedGoods = true;

        that.AllocateComponents(DocID, invLocId, GoOnWithReceivingFinishedGoods, false, iterate);

    }

    this.AllocateComponentsReceiveFinishedGoodsCloseWorkOrder = function (DocID, invLocId, iterate) {

        var GoOnWithReceivingFinishedGoods = true;

        var GoOnWithClosingWorkOrder = true;

        that.AllocateComponents(DocID, invLocId, GoOnWithReceivingFinishedGoods, GoOnWithClosingWorkOrder, iterate);

    }

};

MVQuickActionsObj.prototype = {

    FormatChoices: {
        AllocateComponents: 0,
        ReturnComponents: 1,
        ReceiveFinishedGoods: 2,
        CloseWorkOrder: 3,
        CancelWorkOrder: 4
    },

    ShowPopUp: function (dC, dN, sC, id, locId, s) {
        //dC=documentChoice, dN=document Number, sC = stockChange
    },

    HidePopUp: function () {

    }

};

/* A replaceAll function added to the String prototype enabling it to be used with any string */
String.prototype.replaceAll = function (replaceThis, withThis) { return this.split(replaceThis).join(withThis); };

/* Date Filters in Grids */
function ApplyDateFilterInGrid(dde, dateFrom, dateTo, GridColumn) {

    var d1 = dateFrom.GetText();

    var d2 = dateTo.GetText();

    if (d1 == '' || d2 == '') {

        dde.SetText('');

        return;

    }

    dde.SetText(d1 + ' - ' + d2);

    dde.GetInputElement().title = d1 + ' - ' + d2;

    // The following is for the customization window to trigger to apply the filter after closing the customization window
    $('.dxgvCustDialogFilteringPage_MV .dxgvCustDialogColumnItem_MV:eq(0)').trigger('click');

}

function ClearDateFilterInGrid(dde, dateFrom, dateTo, GridColumn) {

    dateFrom.SetText('');

    dateTo.SetText('');

    dde.SetText('');

    dde.GetInputElement().title = '';

    // The following is for the customization window to trigger to apply the filter after closing the customization window
    $('.dxgvCustDialogFilteringPage_MV .dxgvCustDialogColumnItem_MV:eq(0)').trigger('click');

}

function OnDateInFilterDropDown(s, dateFrom, dateTo) {

    var str = s.GetText();

    if (str == '') {

        return;

    }

    var d = str.split(' - ');

    dateFrom.SetText(d[0]);

    dateTo.SetText(d[1]);

}

function ApplyDateFilterPickProduct(dde, dateFrom, dateTo, GridColumn) {

    var d1 = dateFrom.GetText();

    var d2 = dateTo.GetText();

    if (d1 == '' || d2 == '') {

        dde.SetText('');

        return;

    }

    dde.SetText(d1 + ' - ' + d2);

    UC_Grid_PickProduct.AutoFilterByColumn(GridColumn, dde.GetText());

}

/* Filter Title in grids */
function ShowFilterTitleAtPageLoad(bookmarkCardName,
    bookmarkCardDescription,
    filterExpression,
    filterExpressionAsHTML,
    boxGridQuery,
    showSaveToDashboardText) {

    if ($('.dxgvFilterBarExpressionCell_MV').is(':visible')) {

        if (showSaveToDashboardText == true && filterExpression.length > 0) {

            if (!!$('.dxgvFilterBarExpressionCell_MV > a').prop('title')) {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').prop('title')) + '<span id="saveToBookmarkCard" class="LikeLink Pad0 MarL10 NonBld FontBlue" onclick="CreateDashboardBoxOfGridFilter(' + filterExpression + ',&quot;' + filterExpressionAsHTML + '&quot;,&quot;' + boxGridQuery + '&quot;,&quot;' + bookmarkCardName + '&quot;,&quot;' + bookmarkCardDescription + '&quot;)">[' + TranslationsObj.SaveListToBookmarkCard + ']</span></span>');

            } else {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').html()) + '<span id="saveToBookmarkCard" class="LikeLink Pad0 MarL10 NonBld FontBlue" onclick="CreateDashboardBoxOfGridFilter(' + filterExpression + ',&quot;' + filterExpressionAsHTML + '&quot;,&quot;' + boxGridQuery + '&quot;,&quot;' + bookmarkCardName + '&quot;,&quot;' + bookmarkCardDescription + '&quot;)">[' + TranslationsObj.SaveListToBookmarkCard + ']</span></span>');

            }

        } else {

            if (!!$('.dxgvFilterBarExpressionCell_MV > a').prop('title')) {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').prop('title')) + '</span>');

            } else {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').html()) + '</span>');

            }

        }

        $('.dxgvFilterBar_MV').hide();

    }

}

/* Filter Title in grids after grid callback */
function ShowFilterTitle(boxGridQuery,
    filterExpression,
    filterExpressionAsHTML,
    boxId) {

    if ($('.dxgvFilterBarExpressionCell_MV').is(':visible')) {

        var cssClassToHide = 'hideme';

        if (filterExpression !== undefined &&
            filterExpression.length > 0 &&
            filterExpressionAsHTML !== undefined &&
            filterExpressionAsHTML.length > 0 &&
            boxId !== undefined &&
            boxId != 0 &&
            boxGridQuery !== undefined) { cssClassToHide = 'MarL10'; }

        if (!!$('.dxgvFilterBarExpressionCell_MV > a').prop('title')) {

            if ($('#' + boxId).find('.fa-user').data('userBoxPermissions') == 'normal') {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').prop('title')) + '</span>');

            }

            else {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').prop('title')) + '<span id="saveToBookmarkCard" class="LikeLink Pad0 MarL10 NonBld FontBlue ' + cssClassToHide + '" onclick="updateFilterOfDashboardBox(&quot;' + boxGridQuery + '&quot;,' + filterExpression + ',&quot;' + filterExpressionAsHTML + '&quot;,' + boxId + ')">[' + TranslationsObj.UpdateBookmarkCardWithNewConditions + ']</span></span>');

            }

        } else {

            if ($('#' + boxId).find('.fa-user').data('userBoxPermissions') == 'normal') {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').html()) + '</span>');

            }

            else {

                $('.dxgvTitlePanel_MV').html('<span>' + htmlEncode($('.dxgvFilterBarExpressionCell_MV > a').html()) + '<span id="saveToBookmarkCard" class="LikeLink Pad0 MarL10 NonBld FontBlue ' + cssClassToHide + '" onclick="updateFilterOfDashboardBox(&quot;' + boxGridQuery + '&quot;,' + filterExpression + ',&quot;' + filterExpressionAsHTML + '&quot;,' + boxId + ')">[' + TranslationsObj.UpdateBookmarkCardWithNewConditions + ']</span></span>');

            }

        }

        $('.dxgvFilterBar_MV').hide();

    } else {

        $('.dxgvTitlePanel_MV').hide();

    }

    if ($('.dxp-summary').is(':visible')) {

        $('.listHeaderPage').html(htmlEncode(document.title) + '<span class="small PadLe20" style="color:#999">' + htmlEncode($('.dxp-summary').html()) + '</span>');

    }

    $('.hide-dxmodalSys').siblings('.dxmodalSys').css('visibility', 'hidden');

}

function CleanFilterControlAndProvideCleanHTMLOfTreeExpression(filterControlObj) {

    if (filterControlObj.length == 0) { return ' '; };

    var htmlOfFilterObjectWithoutImages = filterControlObj.clone();

    htmlOfFilterObjectWithoutImages.find('img, script, input').remove();

    htmlOfFilterObjectWithoutImages.find('*').filter(function () { return ($(this).css('visibility') == 'hidden' || $(this).css('display') == 'none'); }).remove();

    htmlOfFilterObjectWithoutImages.find('*').removeAttr('id').removeAttr('onclick').removeAttr('onmousedown').removeAttr('onfocus').removeAttr('onchange');

    htmlOfFilterObjectWithoutImages.cleanWhitespace();

    var htmlOfFilterObjectWithoutImagesCleanText = "<ul class='stepsContent dxfc-tree dxfc dxfcTable_MV'>" + htmlOfFilterObjectWithoutImages.html().replaceAll('"', "'").replace(/\s+/g, " ") + "</ul>";

    htmlOfFilterObjectWithoutImages.remove();

    return htmlOfFilterObjectWithoutImagesCleanText;

}

function CreateDashboardBoxOfGridFilter(filterExpression,
    filterExpressionAsHTML,
    boxGridQuery,
    bookmarkCardName,
    bookmarkCardDescription) {

    var usernameArray = [$('#hdn_usernameAtLogin').val()];

    var boxTitle = bookmarkCardName;

    var box = {
        'DashboardBoxID': -1,
        'DashboardBoxFilterExpression': filterExpression,
        'DashboardBoxFilterExpressionAsHTML': filterExpressionAsHTML,
        'DashboardBoxTitle': boxTitle,
        'DashboardBoxDescription': bookmarkCardDescription,
        'DashboardBoxType': 'manufacture',
        'DashboardBoxExtraFilters': '',
        'DashboardBoxUsernames': usernameArray,
        'DashboardBoxGridQuery': boxGridQuery
    };

    Megaventory.WebApplication.MegaventoryWebServices.UpdateDashboardBox(box, false, $('#hdn_formValidity').val(), UpdateDashboardSuccess, dashboardBoxesError);

    function UpdateDashboardSuccess(response) {

        if (response.Status == '0') {

            $('.dxgvTitlePanel_MV span#saveToBookmarkCard').hide();

            ShowNotification('s', boxTitle + ' - ' + htmlEncode(response.MessageList[4]));

        } else {

            ShowNotification('f', htmlEncode(response.MessageList[0]))

        }

    }

    function dashboardBoxesError(response) {

        ShowNotification('f', htmlEncode(response.MessageList[0]));

    }

}

function updateFilterOfDashboardBox(boxGridQuery,
    filterExpression,
    filterExpressionAsHTML,
    boxId) {

    Megaventory.WebApplication.MegaventoryWebServices.GetDashboardBoxes(boxGridQuery,
        boxId,
        GetDashboardBoxesSuccessLocal,
        dashboardBoxesError)

    var boxTitle = '';

    function GetDashboardBoxesSuccessLocal(response) {

        if (response.length > 0) {

            var box = {
                'DashboardBoxID': response[0].DashboardBoxID,
                'DashboardBoxFilterExpression': filterExpression,
                'DashboardBoxFilterExpressionAsHTML': filterExpressionAsHTML,
                'DashboardBoxGridQuery': response[0].DashboardBoxGridQuery
            };

            boxTitle = response[0].DashboardBoxTitle;

            Megaventory.WebApplication.MegaventoryWebServices.UpdateDashboardBox(box, true, $('#hdn_formValidity').val(), UpdateDashboardSuccess, dashboardBoxesError);

        }

    }

    function UpdateDashboardSuccess(response) {

        if (response.Status == '0') {

            $('.dxgvTitlePanel_MV span#saveToBookmarkCard').hide();

            ShowNotification('s', boxTitle + ' - ' + htmlEncode(response.MessageList[4]));

        } else {

            ShowNotification('f', htmlEncode(response.MessageList[0]))

        }

    }

    function dashboardBoxesError(response) {

        ShowNotification('f', htmlEncode(response.MessageList[0]));

    }

}

/* JS object for the corresponding Costing Info User Control */
var MVDocCostingObj = function (o) {

    var that = this;

    var mainPanel = $("#" + o.mainPnlID);

    var innerPanel = $("#" + o.insidePnlID);

    var dCostTbl = $("#" + o.docCostingTblId);

    var showAsPopUp = o.showAsPopUp;

    var closeImg = $("#" + o.closeImgID);

    var headerLbl = "#" + o.headerLblID;

    var texts = o.texts;

    var currentDocID;

    //Add the hide handler to the close img, if the control is being used as a PopUp
    if (showAsPopUp === true) {

        closeImg.on("click", function (e) {

            that.Hide();

        });

    }

    /* Private Methods */

    function showNoCostsProfitMsg() {
        ///<summary>Method to show the message when no costs numbers have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").show();

        dCostTbl.hide();

    }

    function hideNoCostsProfitMsg() {
        ///<summary>Method to hide the message about no costs have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").hide();

        dCostTbl.show();

    }

    function clearDocCostingTable() {
        ///<summary>Method to clear the Costing Info grid table.</summary>

        dCostTbl.find('tr.itmMvmntsGrdtr').remove(); //  remove all the rows

        dCostTbl.find('tr.dxgvFooter_MV').hide();

        $('#costing_grandTotalCost').html('');

        $('#costing_grandTotalValue').html('');

        $('#costing_grossProfit').html('');

        $('#costing_grossProfitPercent').html('');

    }

    function showDocCostingTable() {
        ///<summary>Method to show the Costing Info grid table.</summary>
        dCostTbl.show();

    }

    function hideDocCostingTable() {
        ///<summary>Method to hide the Costing Info grid table.</summary>
        dCostTbl.hide();

    }

    function createDocCostingTable(response) {

        var jsonResponse = JSON.parse(response);

        if (jsonResponse && jsonResponse.length > 0) {

            var hasPricingInfo = false;

            if (typeof lbl_PriceTotal !== 'undefined' && lbl_PriceTotal.GetValue().length > 0) {

                hasPricingInfo = true

            }

            var dummyRow = dCostTbl.find('tr.dummyRowClass');

            var lastRow = dummyRow;

            var grandTotalCost = 0;

            var priceTotal = 0;

            dCostTbl.find('tr.dxgvFooter_MV').show();

            for (var i = 0; i < jsonResponse.length; i++) {

                var newRow = dummyRow.clone(true);

                $(newRow).removeClass('dummyRowClass').addClass('itmMvmntsGrdtr')

                $(newRow).insertAfter(lastRow);

                $(newRow).children('td:eq(0)').html(String(i + 1) + '.');

                $(newRow).children('td:eq(1)').html(htmlEncode(jsonResponse[i].SKU));

                $(newRow).children('td:eq(2)').html(htmlEncode(jsonResponse[i].ProductDescription));

                $(newRow).children('td:eq(3)').html(jsonResponse[i].ProductQuantity);

                $(newRow).children('td:eq(4)').html(jsonResponse[i].ProductCost);

                $(newRow).children('td:eq(5)').html(jsonResponse[i].ProductTotalRowCost);

                if (hasPricingInfo) {

                    $(newRow).children('td:eq(6)').html(jsonResponse[i].ProductTotalRowValuePreTax);

                    $(newRow).children('td:eq(7)').html(jsonResponse[i].ProductTotalRowProfit);

                    $(newRow).children('td:eq(8)').html(jsonResponse[i].ProductTotalRowProfitPercent);

                    priceTotal += jsonResponse[i].ProductTotalRowValuePreTax * 1;

                } else {

                    $(newRow).children('td:eq(6)').html('-');

                    $(newRow).children('td:eq(7)').html('-');

                    $(newRow).children('td:eq(8)').html('-');

                }

                grandTotalCost += jsonResponse[i].ProductTotalRowCost * 1;

                $(newRow).show();

                lastRow = newRow;

            }

            //var taxesTotal = typeof lbl_TotalTaxes !== 'undefined' && lbl_TotalTaxes.GetValue().length > 0 ? GE.GetFltFrmStr(lbl_TotalTaxes.GetValue()) * 1 : 0;

            grandTotalCost = Math.round(grandTotalCost * 100) / 100;

            $('#costing_grandTotalCost').html(grandTotalCost);

            if (hasPricingInfo) {

                var priceTotal = typeof lbl_PriceTotal !== 'undefined' && lbl_PriceTotal.GetValue().length > 0 ? priceTotal : 0;

                $('#costing_grandTotalValue').html(Math.round(priceTotal * 100) / 100);

                $('#costing_grossProfit').html(Math.round((priceTotal - grandTotalCost) * 100) / 100);

                if (grandTotalCost == 0) {

                    $('#costing_grossProfitPercent').html('N/A');

                }
                else if ((priceTotal - grandTotalCost) < 0) {

                    $('#costing_grossProfitPercent').html('N/A');

                }
                else {

                    $('#costing_grossProfitPercent').html(Math.round((((priceTotal - grandTotalCost) / priceTotal) * 100) * 100) / 100)

                }

            } else {

                $('#costing_grandTotalValue').html('-');

                $('#costing_grossProfit').html('-');

                $('#costing_grossProfitPercent').html('-');

            }

            showDocCostingTable();

        }

    }

    /* Public Methods */

    this.Show = function (docId, docDesc) {

        clearDocCostingTable();

        if (docId <= 0) {

            showNoCostsProfitMsg();

            return;
        }

        if (showAsPopUp === true) {

            mainPanel.css("position", "fixed");

            mainPanel.css("top", "20%");

            $(headerLbl).html(htmlEncode(docDesc) + " » " + texts.rltdDocs);

            mainPanel.show();

            innerPanel.css("padding", "0px 20px 40px");

        }

        if (docId != currentDocID) {

            currentDocID = docId;

            clearDocCostingTable();

            hideNoCostsProfitMsg();

        }

        ShowLoading();

        $.ajax({
            "url": "/inventory/WebServices/CostingWebServices.asmx/GetDocumentCostsAndProfit",
            "type": "POST",
            "data": "{\"documentId\":" + currentDocID + "}",
            "contentType": "application/json",
            "dataType": "json",
            "success": function (jsonResponse, status) {

                HideLoading();

                if (jsonResponse.hasOwnProperty("d"))
                    // Leave the .d behind and pass the rest of
                    //  the JSON object forward.
                    createDocCostingTable(jsonResponse.d);
                else
                    // No .d; no transformation necessary.
                    createDocCostingTable(jsonResponse);

            },
            "error": function (xhr, err) {
                HideLoading();
                if (xhr.status == 401) {
                    window.location.href = window.location.href;
                }

            }

        });

    };

    this.Hide = function () {

        mainPanel.hide();

    };

};

MVDocCostingObj.prototype = {

    "Show": function () { },
    "Hide": function () { }

};

/* JS object for the corresponding Costing Info User Control */
var MVDocHandlingCostsOverheadObj = function (o) {

    var that = this;

    var mainPanel = $("#" + o.mainPnlID);

    var innerPanel = $("#" + o.insidePnlID);

    var dCostTbl = $("#" + o.docCostingTblId);

    var showAsPopUp = o.showAsPopUp;

    var closeImg = $("#" + o.closeImgID);

    var headerLbl = "#" + o.headerLblID;

    var texts = o.texts;

    var currentDocID;

    //Add the hide handler to the close img, if the control is being used as a PopUp
    if (showAsPopUp === true) {

        closeImg.on("click", function (e) {

            that.Hide();

        });

    }

    /* Private Methods */

    function showNoCostsProfitMsg() {
        ///<summary>Method to show the message when no costs numbers have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").show();

        dCostTbl.hide();

    }

    function hideNoCostsProfitMsg() {
        ///<summary>Method to hide the message about no costs have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").hide();

        dCostTbl.show();

    }

    function clearDocCostingTable() {
        ///<summary>Method to clear the Costing Info grid table.</summary>

        dCostTbl.find('tr.itmMvmntsGrdtr').remove(); //  remove all the rows

        dCostTbl.find('tr.dxgvFooter_MV').hide();

        $('#costing_grandTotalCost').html('');

        $('#costing_grandTotalValue').html('');

        $('#costing_grossProfit').html('');

        $('#costing_grossProfitPercent').html('');

    }

    function showDocCostingTable() {
        ///<summary>Method to show the Costing Info grid table.</summary>
        dCostTbl.show();

    }

    function hideDocCostingTable() {
        ///<summary>Method to hide the Costing Info grid table.</summary>
        dCostTbl.hide();

    }

    function createDocCostingTable(response) {

        var jsonResponse = JSON.parse(response);

        if (jsonResponse && jsonResponse.length > 0) {

            var hasPricingInfo = false;

            if (typeof lbl_PriceTotal !== 'undefined' && lbl_PriceTotal.GetValue().length > 0) {

                hasPricingInfo = true

            }

            var dummyRow = dCostTbl.find('tr.dummyRowClass');

            var lastRow = dummyRow;

            var grandTotalCost = 0;

            var priceTotal = 0;

            dCostTbl.find('tr.dxgvFooter_MV').show();

            for (var i = 0; i < jsonResponse.length; i++) {

                var newRow = dummyRow.clone(true);

                $(newRow).removeClass('dummyRowClass').addClass('itmMvmntsGrdtr')

                $(newRow).insertAfter(lastRow);

                $(newRow).children('td:eq(0)').html(String(i + 1) + '.');

                $(newRow).children('td:eq(1)').html(htmlEncode(jsonResponse[i].SKU));

                $(newRow).children('td:eq(2)').html(htmlEncode(jsonResponse[i].ProductDescription));

                $(newRow).children('td:eq(3)').html(jsonResponse[i].ProductQuantity);

                $(newRow).children('td:eq(4)').html(jsonResponse[i].ProductCost);

                $(newRow).children('td:eq(5)').html(jsonResponse[i].ProductTotalRowCost);

                if (hasPricingInfo) {

                    $(newRow).children('td:eq(6)').html(jsonResponse[i].ProductTotalRowValuePreTax);

                    $(newRow).children('td:eq(7)').html(jsonResponse[i].ProductTotalRowProfit);

                    $(newRow).children('td:eq(8)').html(jsonResponse[i].ProductTotalRowProfitPercent);

                    priceTotal += jsonResponse[i].ProductTotalRowValuePreTax * 1;

                } else {

                    $(newRow).children('td:eq(6)').html('-');

                    $(newRow).children('td:eq(7)').html('-');

                    $(newRow).children('td:eq(8)').html('-');

                }

                grandTotalCost += jsonResponse[i].ProductTotalRowCost * 1;

                $(newRow).show();

                lastRow = newRow;

            }

            //var taxesTotal = typeof lbl_TotalTaxes !== 'undefined' && lbl_TotalTaxes.GetValue().length > 0 ? GE.GetFltFrmStr(lbl_TotalTaxes.GetValue()) * 1 : 0;

            grandTotalCost = Math.round(grandTotalCost * 100) / 100;

            $('#costing_grandTotalCost').html(grandTotalCost);

            if (hasPricingInfo) {

                var priceTotal = typeof lbl_PriceTotal !== 'undefined' && lbl_PriceTotal.GetValue().length > 0 ? priceTotal : 0;

                $('#costing_grandTotalValue').html(Math.round(priceTotal * 100) / 100);

                $('#costing_grossProfit').html(Math.round((priceTotal - grandTotalCost) * 100) / 100);

                if (grandTotalCost == 0) {

                    $('#costing_grossProfitPercent').html('N/A');

                }
                else if ((priceTotal - grandTotalCost) < 0) {

                    $('#costing_grossProfitPercent').html('N/A');

                }
                else {

                    $('#costing_grossProfitPercent').html(Math.round((((priceTotal - grandTotalCost) / priceTotal) * 100) * 100) / 100)

                }

            } else {

                $('#costing_grandTotalValue').html('-');

                $('#costing_grossProfit').html('-');

                $('#costing_grossProfitPercent').html('-');

            }

            showDocCostingTable();

        }

    }

    /* Public Methods */

    this.Show = function (docId, docDesc) {

        clearDocCostingTable();

        if (docId <= 0) {

            showNoCostsProfitMsg();

            return;
        }

        if (showAsPopUp === true) {

            mainPanel.css("position", "fixed");

            mainPanel.css("top", "20%");

            $(headerLbl).html(htmlEncode(docDesc) + " » " + texts.rltdDocs);

            mainPanel.show();

            innerPanel.css("padding", "0px 20px 40px");

        }

        if (docId != currentDocID) {

            currentDocID = docId;

            clearDocCostingTable();

            hideNoCostsProfitMsg();

        }

        ShowLoading();

        $.ajax({
            "url": "/inventory/WebServices/CostingWebServices.asmx/GetDocumentCostsAndProfit",
            "type": "POST",
            "data": "{\"documentId\":" + currentDocID + "}",
            "contentType": "application/json",
            "dataType": "json",
            "success": function (jsonResponse, status) {

                HideLoading();

                if (jsonResponse.hasOwnProperty("d"))
                    // Leave the .d behind and pass the rest of
                    //  the JSON object forward.
                    createDocCostingTable(jsonResponse.d);
                else
                    // No .d; no transformation necessary.
                    createDocCostingTable(jsonResponse);

            },
            "error": function (xhr, err) {
                HideLoading();
                if (xhr.status == 401) {
                    window.location.href = window.location.href;
                }

            }

        });

    };

    this.Hide = function () {

        mainPanel.hide();

    };

};

MVDocHandlingCostsOverheadObj.prototype = {

    "Show": function () { },
    "Hide": function () { }

};

/* JS object for the corresponding Serial Number information and creator User Controls */
var MVDocSerNumObj = function (o) {

    var that = this;

    var mainPanel = $("#" + o.mainPnlID);

    var innerPanel = $("#" + o.insidePnlID);

    var sNosTbl = $("#" + o.serNumTblId);

    var showAsPopUp = o.showAsPopUp;

    var closeImg = $("#" + o.closeImgID);

    var headerLbl = "#" + o.headerLblID;

    var texts = o.texts;

    var currentDocID;

    //Add the hide handler to the close img, if the control is being used as a PopUp
    if (showAsPopUp === true) {

        closeImg.on("click", function (e) {

            that.Hide();

        });

    }

    /* Private Methods */

    function showNoSerialNumbersMsg() {
        ///<summary>Method to show the message when no serial numbers have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").show();
    }

    function hideNoSerialNumbersMsg() {
        ///<summary>Method to hide the message about no serial numbers been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").hide();
    }

    function clearSerialNumbersTable() {
        ///<summary>Method to clear the Serial Numbers grid table.</summary>

        sNosTbl.find('tr.itmMvmntsGrdtr:gt(1)').remove(); //  remove all the rows but the first. The dummy row is used to copy and create new rows.
    }

    function showSerialNumbersTable() {
        ///<summary>Method to show the Serial Numbers grid table.</summary>
        sNosTbl.show();
    }

    function hideSerialNumbersTable() {
        ///<summary>Method to hide the Serial Numbers grid table.</summary>
        sNosTbl.hide();
    }

    function createSerialNumbersTable(response) {

        var jsonResponse = JSON.parse(response);

        if (jsonResponse && jsonResponse.length > 0) {

            var dummyRow = sNosTbl.find('tr').first();

            var lastRow = sNosTbl.find('tr').last();

            var isThereAtleastOneSNo = false;

            for (var i = 0; i < jsonResponse.length; i++) {

                var newRow = dummyRow.clone(true);  // Add a TR in the list of uploaded documents

                $(newRow).insertAfter(lastRow);

                $(newRow).children('td:eq(0)').html(String(i + 1) + '.');

                $(newRow).children('td:eq(1)').html(jsonResponse[i].ProductSKU);

                $(newRow).children('td:eq(2)').html(jsonResponse[i].ProductDescription);

                $(newRow).children('td:eq(3)').html(jsonResponse[i].ProductQuantity);

                var serialNumTdVal = "";

                for (var j = 0; j < jsonResponse[i].SerialNumbers.length; j++) {

                    serialNumTdVal += htmlEncode(jsonResponse[i].SerialNumbers[j]) + "<br>";

                    isThereAtleastOneSNo = true;

                }

                $(newRow).children('td:eq(4)').html(serialNumTdVal);

                $(newRow).show();

                lastRow = newRow;

            }

            if (isThereAtleastOneSNo == false) {

                clearSerialNumbersTable();

                hideSerialNumbersTable();

                showNoSerialNumbersMsg();

            }
            else {

                showSerialNumbersTable();

            }

        }

    }

    /* Public Methods */

    this.Show = function (docId, docDesc) {

        clearSerialNumbersTable();

        if (docId <= 0) {

            showNoSerialNumbersMsg();

            return;
        }

        if (showAsPopUp === true) {

            mainPanel.css("position", "fixed");

            mainPanel.css("top", "20%");

            $(headerLbl).html(htmlEncode(docDesc) + " » " + texts.rltdDocs);

            mainPanel.show();

            innerPanel.css("padding", "0px 20px 40px");

        }
        if (docId != currentDocID) {

            currentDocID = docId;

            clearSerialNumbersTable();

            hideNoSerialNumbersMsg();

        }

        ShowLoading();

        $.ajax({
            "url": "/inventory/WebServices/SerialNumbersWebServices.asmx/GetDocumentSerialNumbers",
            "type": "POST",
            "data": "{\"documentId\":" + currentDocID + "}",
            "contentType": "application/json",
            "dataType": "json",
            "success": function (jsonResponse, status) {

                HideLoading();

                if (jsonResponse.hasOwnProperty("d"))
                    // Leave the .d behind and pass the rest of
                    //  the JSON object forward.
                    createSerialNumbersTable(jsonResponse.d);
                else
                    // No .d; no transformation necessary.
                    createSerialNumbersTable(jsonResponse);

            },
            "error": function (xhr, err) {

                HideLoading();

                if (xhr.status == 401) {

                    window.location.href = window.location.href;

                }

            }

        });

    };

    this.Hide = function () {

        mainPanel.hide();

    };

};

MVDocSerNumObj.prototype = {
    "Show": function () { },
    "Hide": function () { }
};

var SerialNumberCreator = function (o) {
    /* Private members & methods */
    //Elements coming from the parameter o
    var popUp, mainContentPanel, serialNumberTxtBox, invLocDrpDown, addBtn, prImg, notfctnPnl, wsObj, AddSerialNumbersTextString, DeleteSerialNumbersTextString, SerialNumsDelSuccessTextString, SerialNumsAddSuccessTextString;

    popUp = o.PopUpClientID;
    mainContentPanel = $('#' + o.MainPanelID);
    serialNumberTxtBox = o.SerialNumberTokenBoxClientInstanceName;
    invLocDrpDown = o.InventoryLocationComboBoxClientInstanceName;
    addBtn = o.AddBtn;
    delBtn = o.DelBtn;
    prImg = $('#' + o.PrImgID); //Processing image
    notfctnPnl = $('#' + 'divNotifications');
    wsObj = o.WSObj;
    AddSerialNumbersTextString = o.AddSerialNumbersTextString;
    DeleteSerialNumbersTextString = o.DeleteSerialNumbersTextString;
    SerialNumsDelSuccessTextString = o.SerialNumsDelSuccessTextString;
    SerialNumsAddSuccessTextString = o.SerialNumsAddSuccessTextString;

    // Hardcoded elements - Elements where there IDs have been directly hardcoded here
    var toDeleteLink = $('#' + 'lnkDeleteSerialNumbers');
    var toDeleteSpan = toDeleteLink.parent('span');
    var toAddLink = $('#' + 'lnkAddSerialNumbers');
    var toAddSpan = toAddLink.parents('span');
    var invLocRow = $('#' + 'trInventoryLocation');

    //Local variables
    var productIdParam = 0; //This will be set when the Show method will be called
    var productSKUParam = ''; //This will be set when the Show method will be called

    //Add Click handler for To-Add link - this link will be shown when the form is being used to Delete Serial Numbers
    toAddLink.off('click').on('click', function (e) {
        enableAdditionOfSerialNumbers();
    });


    //Add Click handler for Add button
    addBtn.Click.AddHandler(function (s, e) {

        //Check if the Token box has any tokens
        var tokens = serialNumberInput(serialNumberTxtBox.GetTokenCollection());

        if (tokens.length > 0) {
            addSerialNumbers();
        }
    });

    //Add Click handler for To-Delete link - this link will be shown when the form is being used to Add Serial Numbers
    toDeleteLink.off('click').on('click', function (e) {
        enableDeletionOfSerialNumbers();
    });

    //Add Click handler for Delete button
    delBtn.Click.AddHandler(function (s, e) {

        //Check if the Token box has any tokens
        var tokens = serialNumberInput(serialNumberTxtBox.GetTokenCollection());

        if (tokens.length > 0) {
            deleteSerialNumbers();
        }
    });


    /* Private methods */
    var enableAdditionOfSerialNumbers = function () {
        /// <summary>Modifies the state of the form for Addition of Serial Numbers.</summary>

        //Update the Heading of PopUp
        popUp.SetHeaderText(productSKUParam + ' » ' + AddSerialNumbersTextString);

        //Show Inventory Location dropdown
        invLocRow.show();
        invLocDrpDown.SetEnabled(true);

        //Show Add button
        addBtn.SetEnabled(true);
        addBtn.SetVisible(true);

        //Hide Delete button
        delBtn.SetVisible(false);
        delBtn.SetEnabled(false);

        //Hide To-Add link
        toAddSpan.hide();

        //Show To Delete link
        toDeleteSpan.show();

        //Clear the Token Box
        serialNumberTxtBox.ClearTokenCollection();

        //Reset the Inventory Location
        invLocDrpDown.SetSelectedIndex(-1);

        //Hide the notification panel in case there was a notification from a previous operation
        hideError();
    }

    var enableDeletionOfSerialNumbers = function () {
        //Update the Heading of PopUp
        popUp.SetHeaderText(productSKUParam + ' » ' + DeleteSerialNumbersTextString);

        //Hide Inventory Location dropdown
        invLocRow.hide();
        invLocDrpDown.SetEnabled(false);

        //Show Delete button
        delBtn.SetEnabled(true);
        delBtn.SetVisible(true);

        //Hide Add button
        addBtn.SetVisible(false);
        addBtn.SetEnabled(false);

        //Hide to-Delete link
        toDeleteSpan.hide();

        //Show To Add link
        toAddSpan.show();

        //Hide the notification panel in case there was a notification from a previous operation
        hideError();
    }

    var addSerialNumbers = function () {

        //Disable the Add button so that user cannot click it again while the processing is going on
        addBtn.SetEnabled(false);

        hideError(); //Hide any previously showing error
        prImg.show();

        var tokensList = serialNumberInput(serialNumberTxtBox.GetTokenCollection());

        var invLocIdParam = 0;
        if (invLocDrpDown.GetSelectedItem() != null)
            invLocIdParam = invLocDrpDown.GetSelectedItem().value;


        wsObj.AddSerialNumbers(productIdParam, invLocIdParam, tokensList, addItemWSResponseHandler);
    }

    var addItemWSResponseHandler = function (response) {

        addBtn.SetEnabled(true);
        prImg.hide();

        if (response.IsSuccess == true) {

            //Clear the Token Box
            serialNumberTxtBox.ClearTokenCollection();

            //Show success message
            showSuccess(SerialNumsAddSuccessTextString);

        }
        else {
            var errMsg = '';
            for (var i = 0; i < response.NotificationMessages.length; i++) {
                errMsg += response.NotificationMessages[i] + '<br>';
            }
            showError(errMsg);
        }

        popUp.UpdateWindowPosition();
    }

    var deleteSerialNumbers = function () {
        //Disable the Delete button so that user cannot click it again while the processing is going on
        delBtn.SetEnabled(false);

        hideError(); //Hide any previously showing error
        prImg.show();

        var tokensList = serialNumberInput(serialNumberTxtBox.GetTokenCollection());

        wsObj.DeleteSerialNumbers(productIdParam, tokensList, deleteItemWSResponseHandler);
    }

    var deleteItemWSResponseHandler = function (response) {
        delBtn.SetEnabled(true);
        prImg.hide();

        if (response.IsSuccess == true) {

            //Clear the Token Box
            serialNumberTxtBox.ClearTokenCollection();

            //Show success message
            showSuccess(SerialNumsDelSuccessTextString);

        }
        else {
            var errMsg = '';
            for (var i = 0; i < response.NotificationMessages.length; i++) {
                errMsg += response.NotificationMessages[i] + '<br>';
            }
            showError(errMsg);
        }

        popUp.UpdateWindowPosition();
    }

    var showError = function (msg) {
        notfctnPnl.children('span:eq(0)').html(msg);
        notfctnPnl.removeClass('success').addClass('errors').show();
    }

    var showSuccess = function (msg) {
        notfctnPnl.children('span:eq(0)').html(msg);
        notfctnPnl.removeClass('errors').addClass('success').show();
    }

    var hideError = function () {
        notfctnPnl.children('span:eq(0)').html('');
        notfctnPnl.hide();
    }

    /* End of Private methods */

    /* Public methods */
    this.Show = function (productId, productSKU, productDescription) {

        productIdParam = productId;
        productSKUParam = productSKU;

        enableAdditionOfSerialNumbers();

        popUp.Show();
    }


    /* End of Public methods */

}

SerialNumberCreator.prototype = {
    'Show': function (productId, productSKU, productDescription) { },
    'Hide': function () { }
}
/* End Serial Number */

/* JS object for the corresponding Batch Number information in each document (BatchNumbers tab in Document)*/
var MVDocBatchNumObj = function (o) {

    var that = this;

    var mainPanel = $("#" + o.mainPnlID);

    var innerPanel = $("#" + o.insidePnlID);

    var bNosTbl = $("#" + o.batchNumTblId);

    var showAsPopUp = o.showAsPopUp;

    var closeImg = $("#" + o.closeImgID);

    var headerLbl = "#" + o.headerLblID;

    var texts = o.texts;
    
    var currentDocID;

    //Add the hide handler to the close img, if the control is being used as a PopUp
    if (showAsPopUp === true) {

        closeImg.on("click", function (e) {

            that.Hide();

        });

    }

    /* Private Methods */

    function showNoBatchNumbersMsg() {
        ///<summary>Method to show the message when no batch numbers have been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").show();
    }

    function hideNoBatchNumbersMsg() {
        ///<summary>Method to hide the message about no batch numbers been found to be attached to the given document.</summary>

        innerPanel.children("span:eq(0)").hide();
    }

    function clearBatchNumbersTable() {
        ///<summary>Method to clear the Batch Numbers grid table.</summary>

        bNosTbl.find('tr.itmMvmntsGrdtr:gt(1)').remove(); //  remove all the rows but the first. The dummy row is used to copy and create new rows.
    }

    function showBatchNumbersTable() {
        ///<summary>Method to show the Batch Numbers grid table.</summary>
        bNosTbl.show();
    }

    function hideBatchNumbersTable() {
        ///<summary>Method to hide the Batch Numbers grid table.</summary>
        bNosTbl.hide();
    }

    // fill batch_numbers tab
    function createBatchNumbersTable(response) {
        
        var jsonResponse = JSON.parse(response);

        if (jsonResponse && jsonResponse.length > 0) {

            var dummyRow = bNosTbl.find('tr').first();

            var lastRow = bNosTbl.find('tr').last();

            var isThereAtleastOneBNo = jsonResponse.length > 0;

            for (var i = 0; i < jsonResponse.length; i++) {
                
                var dateToShow = MV_DateFormatter(jsonResponse[i].ExpiryDate);
                
                var newRow = dummyRow.clone(true);  // Add a TR in the list of uploaded documents

                $(newRow).insertAfter(lastRow);

                $(newRow).children('td:eq(0)').text(String(i + 1) + '.');

                $(newRow).children('td:eq(1)').text(jsonResponse[i].ProductSKU);

                $(newRow).children('td:eq(2)').text(jsonResponse[i].ProductDescription);

                $(newRow).children('td:eq(3)').text(jsonResponse[i].BatchNumber);

                $(newRow).children('td:eq(4)').text(dateToShow);

                $(newRow).children('td:eq(5)').text(o.GetStrFrmFlt(jsonResponse[i].ProductQuantity));

                $(newRow).show();

                lastRow = newRow;

            }

            if (isThereAtleastOneBNo == false) {

                clearBatchNumbersTable();

                hideBatchNumbersTable();

                showNoBatchNumbersMsg();

            }
            else {

                showBatchNumbersTable();

            }

        }

    }

    /* Public Methods */

    this.Show = function (docId, docDesc) {

        clearBatchNumbersTable();

        if (docId <= 0) {

            showNoBatchNumbersMsg();

            return;
        }

        if (showAsPopUp === true) {

            mainPanel.css("position", "fixed");

            mainPanel.css("top", "20%");

            $(headerLbl).html(htmlEncode(docDesc) + " » " + texts.rltdDocs);

            mainPanel.show();

            innerPanel.css("padding", "0px 20px 40px");

        }
        if (docId != currentDocID) {

            currentDocID = docId;

            clearBatchNumbersTable();

            hideNoBatchNumbersMsg();

        }

        ShowLoading();

        $.ajax({
            "url": "/inventory/WebServices/BatchNumbersWebServices.asmx/GetDocumentBatchNumbers",
            "type": "POST",
            "data": "{\"documentId\":" + currentDocID + "}",
            "contentType": "application/json",
            "dataType": "json",
            "success": function (jsonResponse, status) {

                HideLoading();

                if (jsonResponse.hasOwnProperty("d"))
                    // Leave the .d behind and pass the rest of
                    //  the JSON object forward.
                    createBatchNumbersTable(jsonResponse.d);
                else
                    // No .d; no transformation necessary.
                    createBatchNumbersTable(jsonResponse);

            },
            "error": function (xhr, err) {

                HideLoading();

                if (xhr.status == 401) {

                    window.location.href = window.location.href;

                }

            }

        });

    };

    this.Hide = function () {

        mainPanel.hide();

    };

};

MVDocBatchNumObj.prototype = {
    "Show": function () { },
    "Hide": function () { }
};

var NotificationTimer = null;

function ShowNotification(type, message, autohide, showWithDelay) {

    if (autohide === undefined) autohide = 1;

    var DialogDIVId = '#div_Notifications';

    var DialogTextElemID = '#lbl_Notifications';

    $(DialogTextElemID).html(message);

    if (type == 's' || type == '0') {

        $(DialogDIVId).removeClass('errors').addClass('success'); //we need the remove class here because maybe the time does not expire and the user clicks again for an action

    } else if (type == 'f' || type == '1') {

        if (NotificationTimer) { clearTimeout(NotificationTimer); var NotificationTimer = null; }

        $(DialogDIVId).removeClass('success').addClass('errors'); //we need the remove class here because maybe the time does not expire and the user clicks again for an action

    }

    $(DialogDIVId).show();

    var marginLeftVar = -100 * (($(DialogDIVId).outerWidth() / $(window).outerWidth()) / 2 - ($("#menu").width() / $(window).width()) / 2) + '%';

    $(DialogDIVId).css('top', 70).css('left', '50%').css('margin-left', marginLeftVar);

    if (type == 's' || type == '0') {

        if (autohide == 1) {

            if (NotificationTimer) { clearTimeout(NotificationTimer); var NotificationTimer = null; }

            var NotificationTimer = setTimeout(function () { HideNotification(); }, 7000);

        }
    }

    HideLoading();

}

function HideNotification() {

    var DialogDIVId = '#div_Notifications';

    if (NotificationTimer) { clearTimeout(NotificationTimer); var NotificationTimer = null; }

    $(DialogDIVId).fadeOut(700, function () { $(DialogDIVId).css({ 'top': '0', 'left': '0' }).removeClass('success').removeClass('errors').find('span:eq(0)').html(''); });

}

function ShowLoading() {
    $('#loading').show();
}

function HideLoading() {
    $('#loading').hide();
}

function ShowGridImgPopup(elemId, imgUrl) {
    $('#popupImgOnGridHover').html('<img id=productImg src=' + htmlEncode(imgUrl) + '></img>').css({ top: 0, left: 0 }).position({ my: 'left top', at: 'right bottom', of: $('#' + elemId), collision: 'none' }).fadeIn('fast');
    document.getElementById('productImg').style.transform = "scale(0.6)";
    document.getElementById('productImg').style.transformOrigin = "left top";
}

function HideGridImgPopup() {
    $('#popupImgOnGridHover').fadeOut("fast", function () {
        $(this).html('');
    });
}

function htmlEncode(html) {
    return String(html)
        .replace(/&/g, '&amp;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
};

function htmlDecode(html) {
    return String(html)
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, "'")
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&amp;/g, '&');
};

MessageBox = function (o) {

    /* Private members */

    var modalBackground, mainPanel, closeImg, msgTextArea, spMsgArea, okBtn, cancelBtn, orPadder;

    modalBackground = $('#' + o.ModalBackgroundDIVID);
    mainPanel = $('#' + o.MainPanelID);
    closeImg = mainPanel.children('div:eq(0)').children('img:eq(0)');
    msgTextArea = mainPanel.children('span:eq(0)');
    spMsgArea = mainPanel.children('span:eq(1)');
    okBtn = o.OKBtn;
    cancelBtn = o.CancelBtn;
    orPadder = mainPanel.children('table:eq(0)').find('td.OuterTdOrPadder');

    var tempConfirmation = false;

    var show = function (t, m) {
        m = m + '';
        t = t + '';

        setGenericText(t);
        setSpecificMsg(m);

        modalBackground.show();
        mainPanel.show();
    }

    var hide = function () {
        mainPanel.hide();
        modalBackground.hide();
        setGenericText('');
        setSpecificMsg('');

        okBtn.Click.ClearHandlers();    //remove handler for Ok Btn
    }

    var setGenericText = function (text) {
        msgTextArea.html(text);
    }

    var setSpecificMsg = function (msg) {
        spMsgArea.html(msg);
        if (msg == '')
            spMsgArea.hide();
        else
            spMsgArea.show();
    }

    /* --------------- */

    /* Add Handlers for Image, Buttons etc */
    closeImg.off('click').on('click', function (e) { hide(); });
    cancelBtn.Click.AddHandler(function (s, e) { hide(); });

    this.Show = function (t, m) {

        show(t, m);

        cancelBtn.SetVisible(false);

        orPadder.addClass('noneImportant');

        okBtn.Click.AddHandler(function (s, e) { hide(); });
    }

    this.Confirm = function (s, t, m) {

        if (tempConfirmation) {
            tempConfirmation = false;
            return true;
        }

        show(t, m);

        cancelBtn.SetVisible(true);

        orPadder.removeClass('noneImportant');

        //call the click event on the sending button again, and set the local variable as true, so for the second Click the confirm will return true
        okBtn.Click.AddHandler(function (sender, e) {
            tempConfirmation = true; hide(); $('#' + s).trigger('click');
        });

        return false;

    }
};

function showPopup(url) {
    newwindow = window.open(url, 'name', 'height=560,width=850,top=200,left=100,resizable=yes,scrollbars=yes');
    if (window.focus) { newwindow.focus(); }
}

function urlencode(str) {
    return encodeURIComponent((str + ''));
}

function urldecode(str) {

    try {
        return decodeURIComponent((str + '').replace(/\+/g, '%20'));
    } catch (e) {
        return str;
    }

}

function resetForm($form) {

    $form.find('input:text, input:password, input:file, select, textarea').val('');

    $form.find('input:radio, input:checkbox').not('#filterProps input:radio').prop('checked', false).prop('selected', false);

}

/* FUNCTIONS RELATED TO NEW UI*/

var ImportWhat;

var devExGridRowKeysObj;

var nullText;

var postponedCallbackRequired = false;

var postponedCallbackGridRequired = false;

var delayedCallbackToLoad;

var pTimer = 5 * 60 * 1000; /* every 5mins (5*60=300 secs) */

var dummyTimer = 60 * 1000; /* every 60sec */

var authCallTimer = setInterval(AuthCall, dummyTimer);

var dashboardBoxesTimer = setInterval(RefreshDashBoardNumbers(), pTimer);

function AuthCall() {

    Megaventory.WebApplication.MegaventoryWebServices.AuthCall($('#hdn_usernameAtLogin').val(), AuthCallSuccess, AuthCallError);

}

function AuthCallSuccess() {

    /* User authenticated*/

}

function AuthCallError() {

    /* User not authenticated*/
    clearInterval(authCallTimer);

    if ($('#hdn_currentURL').val() === 'popup') { location.reload() } else { window.Intercom('shutdown'); window.location.href = '/inventory/default.aspx' + $('#hdn_currentURL').val(); }

}

/* End error handling */

function OnMenuItemChanged(s, parent, myDocTitle, addHistory, whichNavBar) {
    
    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory && whichNavBar) {

            if (whichNavBar === 'orphanElem') { window.history.pushState('orphanElem' + '*' + s + '*' + parent + '*' + myDocTitle, '', '?data=' + s); window.updateDynamicData(); } // Changes the URL of the browser so, we can navigate back/forth}
            else if (whichNavBar === 'navBar') { window.history.pushState('navBar' + '*' + s + '*' + parent + '*' + myDocTitle, '', '?data=' + s); window.updateDynamicData(); }
            else if (whichNavBar === 'integrationsElem') { window.history.pushState('integrationsElem' + '*' + s + '*' + parent + '*' + myDocTitle, '', '?integrations=' + s); window.updateDynamicData(); }
            
        }
        
        //we need to set the menu selected option to reflect the one of the profile Icon Admin Menu
        if (s == 'addNewProductCategory') {

            UpdateBreadCrumb(s, '');

            removePreviousMenuSelection($('#' + parent));

        }

        else if (s == 'contactsList') {

            UpdateBreadCrumb(s, '');

            selectSpecificMenuOptionAndRemovePreviousSelection($('#' + parent));

        }

        else if (s.startsWith('editShopifyStore') == true || s.startsWith('shopifyStoresList') == true) {

            UpdateBreadCrumb(s.split('&id=')[0], s.split('&id=')[1], s.split('&name=')[1]);

            removePreviousMenuSelection($('#' + parent));

        }

        else if (s.startsWith('editMultipleProducts') == true) {

            UpdateBreadCrumb('editMultipleProducts', '', myDocTitle);

            selectSpecificMenuOptionAndRemovePreviousSelection($('#' + parent));

        }

        else {

            UpdateBreadCrumb(s.split('&id=')[0], s.split('&id=')[1], s.split('&name=')[1]);
            selectSpecificMenuOptionAndRemovePreviousSelection($('#' + parent));

        }


        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?data=' + s);

        if (myDocTitle) { document.title = urldecode(htmlDecode(myDocTitle)); }

        CallbackPanelDataSettings.PerformCallback(s);
       
    } else {

        postponedCallbackRequired = true;
        delayedCallbackToLoad = s;

    }

}

function OnMenuItemChangedAndShowNotification(s, parent, myDocTitle, addHistory, message, whichNavBar) {

    resetForm($('#aspnetForm'));

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory && whichNavBar) {

            if (whichNavBar === 'orphanElem') { window.history.pushState('orphanElem' + '*' + s + '*' + parent, '', '?data=' + s); window.updateDynamicData(); } // Changes the URL of the browser so, we can navigate back/forth}
            else if (whichNavBar === 'navBar') { window.history.pushState('navBar' + '*' + s + '*' + parent + '*' + myDocTitle, '', '?data=' + s); window.updateDynamicData(); }

        }

        selectSpecificMenuOptionAndRemovePreviousSelection($('#' + parent));

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?data=' + s);

        if (myDocTitle) { document.title = urldecode(htmlDecode(myDocTitle)); }

        var param = s + "#$#" + message;

        UpdateBreadCrumb(parent);

        CallbackPanelDataSettings.PerformCallback(param);

    } else {

        postponedCallbackRequired = true;

        delayedCallbackToLoad = s;

    }

}

function OnBeginCallback(s) {

    ShowLoading();

    //clear all html content inside callback panel
    DeleteOldCallBackPanelDataAndObjects();

}

//Functions For Left Menu

function hideLeftMenu() {

    let selectedMenuElementAfterClosing = $('li.subMenu').has('.selectedOption').prev()

    selectedMenuElementAfterClosing.addClass("selectedIconWhenMenuIsClosed")

    $('#menu').removeClass("showLeftMenu").addClass("hideLeftMenu");

    closeAlreadySelectedSubMenu();

    var marginLeftVar = -100 * (($('#div_Notifications').outerWidth() / $(window).outerWidth()) / 2 - ($("#menu").width() / $(window).width()) / 2) + '%';

    $('#div_Notifications').css('margin-left', marginLeftVar);

    $('.mdocScrl').css('left', ''); // we push header of the document

    $('.mdocScrl').css('width', '');

    RevertHeaderBluePartWidthDueToMenuClosing();

    $('#leftMenu').removeClass('fa-times').addClass('fa-bars');

    if ($('#textResultsElem').length > 0) { $('#ui-customautocompleteClosingElem').position({ my: 'right top', at: 'right-25 top+6', of: '#textResultsElem', collision: 'none' }) }
}

function matchHeaderBluePartWidthWithCurrentMenuWidth() {

    $('#textResultsElem').removeClass('not-expanded');

    if (desktop) { //match header only in desktop

        var menuAndLogoWidthExpanded = 242;

        var leftMenuWidth = Math.max($('#menu').width(), menuAndLogoWidthExpanded);

        $('#textResultsElem').css("left", menuAndLogoWidthExpanded);

        $('#menuAndLogo').removeClass('not-expanded').width(leftMenuWidth);

        $('#menu').css('min-width',leftMenuWidth);

        $('.push-right').css("padding-left", leftMenuWidth);
    }
    else {

        RevertHeaderBluePartWidthDueToMenuClosing();

    }

}

function RevertHeaderBluePartWidthDueToMenuClosing() {

    $('#menuAndLogo, #textResultsElem').addClass('not-expanded');

    $('#menu').css('min-width', 'inherit');

    if (desktop) {

        $('.push-right').css("padding-left", $('#menu').width());

    } else {

        $('.push-right').css("padding-left", 0);

    }

}

function showLeftMenu() {

    $('.selectedIconWhenMenuIsClosed').removeClass("selectedIconWhenMenuIsClosed");

    $('#menu').removeClass("hideLeftMenu").addClass("showLeftMenu");

    $('#mainWrapper,#controlDataSettingsWrapper,#breadcrumb').addClass("push-right");

    var marginLeftVar = -100 * (($('#div_Notifications').outerWidth() / $(window).outerWidth()) / 2 - ($("#menu").width() / $(window).width()) / 2) + '%';

    $('#div_Notifications').css('margin-left', marginLeftVar);

    $('.mdocScrl').css('left', $('#menu').width()); //we push header of the document @VAGG @KAT

    $('.mdocScrl').css('width', 'calc(100% - ' + $('#menu').width() + 'px)');

    $('#leftMenu').removeClass('fa-bars').addClass('fa-times');

    //close mobile search
    if (!($('#searchmodule').hasClass('searchModuleDisplay'))) { closeSearchHeader(); }

    matchHeaderBluePartWidthWithCurrentMenuWidth();

    if ($('#textResultsElem').length > 0) {

        if (window.innerWidth < 1120) { SearchModule.HideSearchModule(); }
        else { $('#ui-customautocompleteClosingElem').position({ my: 'right top', at: 'right-25 top+6', of: '#textResultsElem', collision: 'none' }); }

    }

}

function closeAlreadySelectedSubMenu() {

    var anotherSelectedMenuElement = $('#menu ul > li.selectedMenuElement');

    changeDownArrowOfSelectedMenuElement(anotherSelectedMenuElement);

}

function changeRightArrowOfCurrentMenuElement(elem) {

    closeAlreadySelectedSubMenu();

    elem.find('.right-emoticon').removeClass('right-arrow').addClass('down-arrow');

    openSubMenuOfSelectedElement(elem);

}

function selectSpecificMenuOptionAndRemovePreviousSelection(e) {

    $('.selectedIconWhenMenuIsClosed').removeClass("selectedIconWhenMenuIsClosed");

    var selectedOptionPositionInTheMenu = $('#menu').find('.selectedOption');

    removePreviousMenuSelection(selectedOptionPositionInTheMenu);

    if (typeof e == 'undefined') {

        return;

    }
    
    $("#" + e.prop('id')).addClass('selectedOption');

    var parentMenuOption = $('.selectedOption').closest('.subMenu').prev('li');

    if ($('#menu').hasClass('showLeftMenu')) {

        if (!parentMenuOption.hasClass('selectedMenuElement')) changeRightArrowOfCurrentMenuElement(parentMenuOption);

        matchHeaderBluePartWidthWithCurrentMenuWidth();

    }

    else {

        parentMenuOption.addClass("selectedIconWhenMenuIsClosed")

    }

}

function removePreviousMenuSelection(e) {

    e.removeClass('selectedOption');

}

function changeDownArrowOfSelectedMenuElement(elem) {

    elem.find('.right-emoticon').removeClass("down-arrow").addClass("right-arrow");

    elem.removeClass('selectedMenuElement');

    closeSubMenuOfSelectedElement(elem);

}

function openSubMenuOfSelectedElement(elem) {

    elem.addClass('selectedMenuElement');

    elem.next('li.subMenu').show().addClass('selectedMenuElement').removeClass('noneImportant');

    if ($('#menu').hasClass('showLeftMenu')) matchHeaderBluePartWidthWithCurrentMenuWidth();

}

function closeSubMenuOfSelectedElement(elem) {

    if ($('#menu').hasClass('hideLeftMenu')) {

        elem.next('li.subMenu').removeClass('selectedMenuElement').addClass('noneImportant');

    } else {

        elem.next('li.subMenu').slideUp("fast").removeClass('selectedMenuElement').addClass('noneImportant', function () { matchHeaderBluePartWidthWithCurrentMenuWidth() });

    }

}

//Functions for Header

function openSearchHeader() {

    if ($('#menu').hasClass('showLeftMenu')) hideLeftMenu();

    $('#searchmodule,#searchButton,#txt_SearchBoxSB').removeClass("searchModuleDisplay");

    $('#headerBackground').css("display", "inline");

    $('#mobileSearchButton').css("display", "none");

}

function closeSearchHeader() {

    $('#mobileSearchButton').css("display", "inline");

    $('#headerBackground').css("display", "none");

    $('#searchmodule,#searchButton,#txt_SearchBoxSB').addClass("searchModuleDisplay");

}

//End of Header Functions

function OnEndCallbackPanelDataSettings(s) {

    if (postponedCallbackRequired) {

        CallbackPanelDataSettings.PerformCallback(delayedCallbackToLoad);

        postponedCallbackRequired = false;

        return false;

    }

    HideLoading();

    //cp_buttonClicked is set as js property in code behind
    if (s.cp_buttonClicked == 'productsList') {

        if ($.isFunction(window.executeInitialScriptProductsListUC)) {
            window.executeInitialScriptProductsListUC();
            delete window['executeInitialScriptProductsListUC'];
        }
        if ($.isFunction(window.executeInitialScriptRelationsSelectionUC)) {
            window.executeInitialScriptRelationsSelectionUC();
            delete window['executeInitialScriptRelationsSelectionUC'];
        }
        if ($.isFunction(window.executeInitialScriptBomGridUC)) {
            window.executeInitialScriptBomGridUC();
            delete window['executeInitialScriptBomGridUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
        if ($.isFunction(window.executeInitialScriptBarcodeLabelPrintingUC)) {
            window.executeInitialScriptBarcodeLabelPrintingUC();
            delete window['executeInitialScriptBarcodeLabelPrintingUC'];
        }
        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_ProductsList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_ProductsList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_ProductsList'];
        }
    }

    if (s.cp_buttonClicked == 'addNewProduct' || s.cp_buttonClicked.indexOf('editProduct&id=') != -1) {
        if ($.isFunction(window.executeInitialScriptProductEditUC)) {
            window.executeInitialScriptProductEditUC();
            delete window['executeInitialScriptProductEditUC'];
        }
        if ($.isFunction(window.executeInitialScriptUpdateProductStockUC)) {
            window.executeInitialScriptUpdateProductStockUC();
            delete window['executeInitialScriptUpdateProductStockUC'];
        }
        if ($.isFunction(window.executeInitialScriptBatchNumberCreatorUC)) {
            window.executeInitialScriptBatchNumberCreatorUC();
            delete window['executeInitialScriptBatchNumberCreatorUC'];
        }
        if ($.isFunction(window.executeInitialScriptRelationsSelectionUC)) {
            window.executeInitialScriptRelationsSelectionUC();
            delete window['executeInitialScriptRelationsSelectionUC'];
        }
        if ($.isFunction(window.executeInitialScriptBomGridUC)) {
            window.executeInitialScriptBomGridUC();
            delete window['executeInitialScriptBomGridUC'];
        }
    }

    if (s.cp_buttonClicked == 'editMultipleProducts') {
        if ($.isFunction(window.executeInitialScriptProductEditMultipleProductsUC)) {
            window.executeInitialScriptProductEditMultipleProductsUC();
            delete window['executeInitialScriptProductEditMultipleProductsUC'];
        }
    }

    if (s.cp_buttonClicked == 'productCategoriesList') {
        if ($.isFunction(window.executeInitialScriptProductCategoriesListUC)) {
            window.executeInitialScriptProductCategoriesListUC();
            delete window['executeInitialScriptProductCategoriesListUC'];
        }
    }

    if (s.cp_buttonClicked == 'addNewProductCategory' || s.cp_buttonClicked.indexOf('editProductCategory&id=') != -1) {
    }

    if (s.cp_buttonClicked == 'serialNumbersList') {
        if ($.isFunction(window.executeInitialScriptSerialNumbersListUC)) {
            window.executeInitialScriptSerialNumbersListUC();
            delete window['executeInitialScriptSerialNumbersListUC'];
        }
    }

    if (s.cp_buttonClicked == 'batchNumbersList') {
        if ($.isFunction(window.executeInitialScriptBatchNumbersListUC)) {
            window.executeInitialScriptBatchNumbersListUC();
            delete window['executeInitialScriptBatchNumbersListUC'];
        }
    }

    if (s.cp_buttonClicked == 'inventoryLocationsList') {
        if ($.isFunction(window.executeInitialScriptInventoryLocationsListUC)) {
            window.executeInitialScriptInventoryLocationsListUC();
            delete window['executeInitialScriptInventoryLocationsListUC'];
        }
    }

    if (s.cp_buttonClicked == 'addNewInventoryLocation') {
        if ($.isFunction(window.executeInitialScriptInventoryLocationEditUC)) {
            window.executeInitialScriptInventoryLocationEditUC();
            delete window['executeInitialScriptInventoryLocationEditUC'];
        }
    }

    if (s.cp_buttonClicked == 'suppliersList') {
        if ($.isFunction(window.executeInitialScriptSuppliersClientsListUC)) {
            window.executeInitialScriptSuppliersClientsListUC();
            delete window['executeInitialScriptSuppliersClientsListUC'];
        }
        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_SuppliersList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_SuppliersList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_SuppliersList'];
        }
    }

    if (s.cp_buttonClicked == 'clientsList') {
        if ($.isFunction(window.executeInitialScriptSuppliersClientsListUC)) {
            window.executeInitialScriptSuppliersClientsListUC();
            delete window['executeInitialScriptSuppliersClientsListUC'];
        }
        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_ClientsList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_ClientsList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_ClientsList'];
        }
    }

    if (s.cp_buttonClicked == 'addNewSupplier' || s.cp_buttonClicked == 'addNewClient' || s.cp_buttonClicked.indexOf('editSupplierClient&id=') != -1) {
        if ($.isFunction(window.executeInitialScriptSupplierClientEditUC)) {
            window.executeInitialScriptSupplierClientEditUC();
            delete window['executeInitialScriptSupplierClientEditUC'];
        }
    }

    if (s.cp_buttonClicked == 'contactsList') {
        if ($.isFunction(window.executeInitialScriptContactsListUC)) {
            window.executeInitialScriptContactsListUC();
            delete window['executeInitialScriptContactsListUC'];
        }
    }

    if (s.cp_buttonClicked == 'taxesList' || s.cp_buttonClicked == 'discountsList') {
        if ($.isFunction(window.executeInitialScriptTaxesDiscountsListUC)) {
            window.executeInitialScriptTaxesDiscountsListUC();
            delete window['executeInitialScriptTaxesDiscountsListUC'];
        }
    }

    if (s.cp_buttonClicked == 'pricingRulesList') {
        if ($.isFunction(window.executeInitialScriptPricingRulesListUC)) {
            window.executeInitialScriptPricingRulesListUC();
            delete window['executeInitialScriptPricingRulesListUC'];
        }
        if ($.isFunction(window.executeInitialScriptRelationsSelectionUC)) {
            window.executeInitialScriptRelationsSelectionUC();
            delete window['executeInitialScriptRelationsSelectionUC'];
        }
    }

    if (s.cp_buttonClicked == 'addNewSalesPricingRule' || s.cp_buttonClicked == 'addNewPurchasingPricingRule' || s.cp_buttonClicked.indexOf('editPricingRule&id=') != -1) {
        if ($.isFunction(window.executeInitialScriptPricingRuleEditUC)) {
            window.executeInitialScriptPricingRuleEditUC();
            delete window['executeInitialScriptPricingRuleEditUC'];
        }
        if ($.isFunction(window.executeInitialScriptRelationsSelectionUC)) {
            window.executeInitialScriptRelationsSelectionUC();
            delete window['executeInitialScriptRelationsSelectionUC'];
        }
    }

    if (s.cp_buttonClicked == 'shippingProvidersList') {
        if ($.isFunction(window.executeInitialScriptShippingProvidersListUC)) {
            window.executeInitialScriptShippingProvidersListUC();
            delete window['executeInitialScriptShippingProvidersListUC'];
        }
    }

    if (s.cp_buttonClicked == 'addNewShippingProvider' || s.cp_buttonClicked.indexOf('editShippingProvider&id=') != -1) {
    }

    if (s.cp_buttonClicked == 'documentTypesList') {
        if ($.isFunction(window.executeInitialScriptDocumentTypesListUC)) {
            window.executeInitialScriptDocumentTypesListUC();
            delete window['executeInitialScriptDocumentTypesListUC'];
        }
    }

    if (s.cp_buttonClicked == 'addNewDocumentType' || s.cp_buttonClicked.indexOf('editDocumentType&id=') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentTypeEditUC)) {
            window.executeInitialScriptDocumentTypeEditUC();
            delete window['executeInitialScriptDocumentTypeEditUC'];
        }
    }

    if (s.cp_buttonClicked == 'shopifyStoresList') {
        if ($.isFunction(window.executeInitialScriptShopifyStoresListUC)) {
            window.executeInitialScriptShopifyStoresListUC();
            delete window['executeInitialScriptShopifyStoresListUC'];
        }
    }

    if (s.cp_buttonClicked == 'billsOfMaterialsList') {
        if ($.isFunction(window.executeInitialScriptBillsOfMaterialsListUC)) {
            window.executeInitialScriptBillsOfMaterialsListUC();
            delete window['executeInitialScriptBillsOfMaterialsListUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
        if ($.isFunction(window.executeInitialScriptBarcodeLabelPrintingUC)) {
            window.executeInitialScriptBarcodeLabelPrintingUC();
            delete window['executeInitialScriptBarcodeLabelPrintingUC'];
        }
        if ($.isFunction(window.executeInitialScriptBomGridUC)) {
            window.executeInitialScriptBomGridUC();
            delete window['executeInitialScriptBomGridUC'];
        }
        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_BillsOfMaterialsList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_BillsOfMaterialsList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_BillsOfMaterialsList'];
        }
    }

    if (s.cp_buttonClicked == 'addNewBillOfMaterials') {
        if ($.isFunction(window.executeInitialScriptBomEditUC)) {
            window.executeInitialScriptBomEditUC();
            delete window['executeInitialScriptBomEditUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
    }

    if (s.cp_buttonClicked == 'currenciesList') {
        if ($.isFunction(window.executeInitialScriptCurrenciesListUC)) {
            window.executeInitialScriptCurrenciesListUC();
            delete window['executeInitialScriptCurrenciesListUC'];
        }
    }

    if (s.cp_buttonClicked == 'activityLogs') {
        if ($.isFunction(window.executeInitialScriptActivityLogsUC)) {
            window.executeInitialScriptActivityLogsUC();
            delete window['executeInitialScriptActivityLogsUC'];
        }
    }

    if (s.cp_buttonClicked == 'usersList') {
        if ($.isFunction(window.executeInitialScriptUsersListUC)) {
            window.executeInitialScriptUsersListUC();
            delete window['executeInitialScriptUsersListUC'];
        }
    }

    if (s.cp_buttonClicked.indexOf('userPermissions&id=') != -1) {
        if ($.isFunction(window.executeInitialScriptUserPermissionsUC)) {
            window.executeInitialScriptUserPermissionsUC();
            delete window['executeInitialScriptUserPermissionsUC'];
        }
    }

    if (s.cp_buttonClicked == 'localization') {
        if ($.isFunction(window.executeInitialScriptLocalizationUC)) {
            window.executeInitialScriptLocalizationUC();
            delete window['executeInitialScriptLocalizationUC'];
        }
    }

    if (s.cp_buttonClicked == 'setup') {
        if ($.isFunction(window.executeInitialScriptSetupUC)) {
            window.executeInitialScriptSetupUC();
            delete window['executeInitialScriptSetupUC'];
        }
    }

    if (s.cp_buttonClicked == 'magento') {
        if ($.isFunction(window.executeInitialScriptMagentoUC)) {
            window.executeInitialScriptMagentoUC();
            delete window['executeInitialScriptMagentoUC'];
        }
    }

    if (s.cp_buttonClicked == 'shopify') {
        if ($.isFunction(window.executeInitialScriptShopifyUC)) {
            window.executeInitialScriptShopifyUC();
            delete window['executeInitialScriptShopifyUC'];
        }
    }

    if (s.cp_buttonClicked == 'lokad') {
        if ($.isFunction(window.executeInitialScriptLokadUC)) {
            window.executeInitialScriptLokadUC();
            delete window['executeInitialScriptLokadUC'];
        }
    }

    if (s.cp_buttonClicked == 'quickbooks') {
        if ($.isFunction(window.executeInitialScriptQuickbooksUC)) {
            window.executeInitialScriptQuickbooksUC();
            delete window['executeInitialScriptQuickbooksUC'];
        }
    }

    if (s.cp_buttonClicked == 'zapier') {
        if ($.isFunction(window.executeInitialScriptZapierUC)) {
            window.executeInitialScriptZapierUC();
            delete window['executeInitialScriptZapierUC'];
        }
    }

    if (s.cp_buttonClicked == 'documentExport') {
        if ($.isFunction(window.executeInitialScriptDocumentExportUC)) {
            window.executeInitialScriptDocumentExportUC();
            delete window['executeInitialScriptDocumentExportUC'];
        }
    }

    if (s.cp_buttonClicked == 'subscriptionBilling') {
        if ($.isFunction(window.executeInitialScriptSubscriptionBillingUC)) {
            window.executeInitialScriptSubscriptionBillingUC();
            delete window['executeInitialScriptSubscriptionBillingUC'];
        }
    }

    if (s.cp_NotificationMessage !== undefined) {
        ShowNotification(0, s.cp_NotificationMessage);
        //must clear property
        s.cp_NotificationMessage = undefined;
    }

    if (s.cp_NoAccessMessage !== undefined) {
        ShowNotification('f', s.cp_NoAccessMessage);
        //must clear property
        s.cp_NoAccessMessage = undefined;
    }

    $('.actionButtonsWrapper a').each(function (e) {

        var that = $(this);

        if (that.prop('id').indexOf('import') > -1) { that.prop('href', that.prop('href') + '&name=' + that.prop('title')); }

    });

    $('.actionButtonsWrapper a').off('click').on('click', function (e) {

        /*This piece of code, prevents navigation if the user stays in the same tab*/
        if (e.ctrlKey || e.shiftKey || e.metaKey)
            return;
        e.preventDefault();
        /* END */

        var that = $(this);
        var elemId = that.prop('id');
        var titleOfElem = that.html();
        var parentPage = '';

        if (elemId == 'importProducts') { elemId = 'import&id=3'; titleOfElem = that.prop('title'); parentPage = '#productsList'; }
        else if (elemId == 'importBillsOfMaterials') { elemId = 'import&id=4'; titleOfElem = that.prop('title'); parentPage = '#billsOfMaterialsList'; }
        else if (elemId == 'importProductCategories') { elemId = 'import&id=1'; titleOfElem = that.prop('title'); parentPage = '#productCategoriesList'; }
        else if (elemId == 'importSuppliers') { elemId = 'import&id=2'; titleOfElem = that.prop('title'); parentPage = '#suppliersList'; }
        else if (elemId == 'importClients') { elemId = 'import&id=6'; titleOfElem = that.prop('title'); parentPage = '#clientsList'; }
        else if (elemId == 'importContacts') { elemId = 'import&id=7'; titleOfElem = that.prop('title'); parentPage = '#contactsList'; }
        else if (elemId == 'importInventoryLocations') { elemId = 'import&id=5'; titleOfElem = that.prop('title'); parentPage = '#inventoryLocationsList'; }
        else if (elemId == 'importDocumentTypes') { elemId = 'import&id=8'; titleOfElem = that.prop('title'); parentPage = '#documentTypesList'; }
        else if (elemId == 'importMergeSuppliersClients') { elemId = 'import&id=15'; titleOfElem = that.prop('title'); }

        if (elemId != that.prop('id')) {

            elemId += '&name=' + titleOfElem;

            ClickOrphanElement(elemId, parentPage, titleOfElem, true);

        } else {
            
            OnMenuItemChanged(elemId, elemId, titleOfElem, true, 'navBar');

        }

    });

    if ($('table.FormButtons')) $('table.FormButtons').find('td:first').css("padding-left", $('#menu').width()).addClass('push-right');

    $('#hdn_formValidity').val(s.cp_hdn_formValidity);

    $('#hdn_loadedControl').val(s.cp_buttonClicked); /* important for the server to know the loaded control -- This is cleared in DeleteOldCallBackPanelDataAndObjects*/

}

function ClickOrphanElement(elemId, parentPage, title, addHistory) {
    
    AdjustDashboard('controlDataSettingsWrapper', true);

    OnMenuItemChanged(elemId, $(parentPage).prop('id'), title, addHistory, 'orphanElem');

}

function ClickIntegrationsElement(elemId, parentPage, title, addHistory) {

    AdjustDashboard('controlDataSettingsWrapper', true);

    OnMenuItemChanged(elemId, parentPage, title, addHistory, 'integrationsElem');

}

function LoadGrid(grid, boxId, boxtitle, extraFilters, addHistory) {

    extraFilters = extraFilters == null ? '' : extraFilters;

    AdjustDashboard('gridDataWrapper');

    $('#headerWrapper').show(); /* In case the user opens card from hidden mode (Where Menu is hidden in the current implementation) */

    selectSpecificMenuOptionAndRemovePreviousSelection($('#' + grid));

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState('grid*' + grid + '*' + boxId + '*' + boxtitle + '*' + (extraFilters.length > 0 ? extraFilters : ''), '', '?grid=' + grid + '&id=' + boxId + (boxtitle.length > 0 ? '&name=' + boxtitle : '') + (extraFilters.length > 0 ? '&ef=' + extraFilters : '')); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?grid=' + grid + '&id=' + boxId + (boxtitle.length > 0 ? '&name=' + boxtitle : '') + (extraFilters.length > 0 ? '&ef=' + extraFilters : ''));

        if (boxtitle.length > 0 || boxId > 0) { document.title = urldecode(htmlDecode(boxtitle)); }

        UpdateBreadCrumb(grid, boxId, boxtitle, 1); /* we put here 1 in order to check whether its from grid or not. */

        clientGridCallbackPanel.PerformCallback(grid + "&id=" + boxId + (extraFilters.length > 0 ? '&ef=' + extraFilters : ''));

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = grid + "&id=" + boxId + (extraFilters.length > 0 ? '&ef=' + extraFilters : '');

    }

}

function LoadReport(report, reportId, reportTitle, addHistory) {

    AdjustDashboard('gridDataWrapper');

    /*logic to select the dashboard */

    selectSpecificMenuOptionAndRemovePreviousSelection($('#' + report));

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState('report*' + report + '*' + reportId + '*' + reportTitle, '', '?report=' + report + '&id=' + reportId + '&name=' + reportTitle); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?report=' + report + '&id=' + reportId + '&name=' + reportTitle);

        document.title = urldecode(htmlDecode(reportTitle));

        UpdateBreadCrumb(report, '', reportTitle, 2);

        clientGridCallbackPanel.PerformCallback(report + "&id=" + reportId);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = report + "&id=" + reportId;

    }

}

function LoadInventoryTaking(pageTitle, addHistory) {

    AdjustDashboard('gridDataWrapper', true);

    if (pageTitle == $('#importInventoryTakingLink').html()) selectSpecificMenuOptionAndRemovePreviousSelection($('#importInventoryTakingLink'));
    else selectSpecificMenuOptionAndRemovePreviousSelection($('#InventoryTake'));

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState('inventoryTaking*' + pageTitle, pageTitle, '?inventoryTaking=1'); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?inventoryTaking=1');

        document.title = pageTitle;

        UpdateBreadCrumb('inventoryTaking');

        clientGridCallbackPanel.PerformCallback('inventoryTaking');

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = 'inventoryTaking';

    }

}

function LoadIntegrationLogs(pageTitle, pageToLaunch, addHistory) {

    AdjustDashboard('gridDataWrapper', true);

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState(pageToLaunch + '*' + pageTitle, pageTitle, '?integrations=' + pageToLaunch);

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?integrations=' + pageToLaunch);

        document.title = pageTitle;

        UpdateBreadCrumb(pageToLaunch);

        selectSpecificMenuOptionAndRemovePreviousSelection();

        clientGridCallbackPanel.PerformCallback(pageToLaunch);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = pageToLaunch;

    }

}

function LoadInventoryOrStockTrace(traceVar, productSKU, pageTitle, addHistory) {

    AdjustDashboard('gridDataWrapper', true);

    //traceVar = inventoryTrace OR costTrace OR batchNumbersTrace

    if (productSKU == '') productSKU = ' ';

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState(traceVar + '*' + productSKU + '*' + pageTitle + ' ' + productSKU, pageTitle, '?' + traceVar + '=1&productsku=' + productSKU); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?' + traceVar + '=1&productsku=' + productSKU);

        document.title = pageTitle;

        selectSpecificMenuOptionAndRemovePreviousSelection($('#' + traceVar));

        UpdateBreadCrumb(traceVar, '', pageTitle);

        clientGridCallbackPanel.PerformCallback(traceVar + '&productsku=' + productSKU);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = traceVar + '&productsku=' + productSKU;

    }

}

function LoadSupplierProductInfoForSpecificSupplier(supplierName, addHistory) {

    AdjustDashboard('gridDataWrapper', true);

    //this loads the supplier_inventory module from the suppliersList and from the supplier_inventory when the dropdown changes

    selectSpecificMenuOptionAndRemovePreviousSelection($('#supplier_inventory'));

    supplierName = encodeURIComponent(supplierName)

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {
            
            window.history.pushState('grid*supplier_inventory' + '*0*' + supplierName + '*', '', '?grid=supplier_inventory&id=0&suppliername=' + supplierName); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?grid=supplier_inventory&id=0&suppliername=' + supplierName);

        document.title = supplierName;

        clientGridCallbackPanel.PerformCallback('supplier_inventory&id=0&suppliername=' + supplierName);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = 'supplier_inventory&id=0&suppliername=' + supplierName;

    }

}

function LoadClientProductInfoForSpecificClient(clientName, addHistory) {

    AdjustDashboard('gridDataWrapper', true);

    //this loads the supplier_inventory module from the suppliersList and from the supplier_inventory when the dropdown changes

    selectSpecificMenuOptionAndRemovePreviousSelection($('#client_product_info'));

    clientName = encodeURIComponent(clientName)

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState('grid*client_product_info' + '*0*' + clientName + '*', '', '?grid=client_product_info&id=0&clientname=' + clientName); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?grid=client_product_info&id=0&clientname=' + clientName);

        document.title = clientName;

        clientGridCallbackPanel.PerformCallback('client_product_info&id=0&clientname=' + clientName);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = 'client_product_info&id=0&clientname=' + clientName;

    }

}

function LoadImportDocuments(addHistory) {

    OnMenuItemChanged('import&id=9', 'importTransactionsLink', TranslationsObj.PageLanguageTransactions, addHistory, 'orphanElem');

    AdjustDashboard('controlDataSettingsWrapper', true);

}

function OnBeginGridLoading(s) {

    ShowLoading();

    //clear all html content inside callback panel
    DeleteOldCallBackPanelDataAndObjects();


}

function OnEndGridLoading(s) {

    $('.documentLink').off('click').on('click', function (e) {
        /*This piece of code, prevents navigation if the user stays in the same tab*/
        if (e.ctrlKey || e.shiftKey || e.metaKey)
            return;
        e.preventDefault();
        /* END */
        var that = $(this);

        //first argument is document type -> 
        //second argument is document id -> negative for empty documents
        //third argument is document name (human readable) -> negative for empty documents
        //fourth argument is menu element to be selected
        //fifth argument is add history -> true
        //sixth is extraParams for returns
        LoadDocument(that.data('documenttype'),
            that.data('entityid'),
            that.data('documentname'),
            that.data('menuselection'),
            true,
            '');

    });

    if (postponedCallbackGridRequired) {

        clientGridCallbackPanel.PerformCallback(delayedCallbackToLoad);

        postponedCallbackGridRequired = false;

        return false;

    }

    HideLoading();

    if (s.cp_loadedGrid.indexOf('purchase_orders') != -1 ||
        s.cp_loadedGrid.indexOf('sales_orders') != -1) {

        if ($.isFunction(window.executeInitialScriptOrderListUC)) {
            window.executeInitialScriptOrderListUC();
            delete window['executeInitialScriptOrderListUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('purchase_documents') != -1 ||
        s.cp_loadedGrid.indexOf('sales_documents') != -1 ||
        s.cp_loadedGrid.indexOf('transfer_documents') != -1 ||
        s.cp_loadedGrid.indexOf('inventory_adjustments') != -1 ||
        s.cp_loadedGrid.indexOf('finished_good_receipts') != -1 ||
        s.cp_loadedGrid.indexOf('returnsToSupplier') != -1 ||
        s.cp_loadedGrid.indexOf('returnsFromClient') != -1) {

        if ($.isFunction(window.executeInitialScriptInvoicesListUC)) {
            window.executeInitialScriptInvoicesListUC(true);
            delete window['executeInitialScriptInvoicesListUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('sales_quotes') != -1) {

        if ($.isFunction(window.executeInitialScriptSalesQuotesListUC)) {
            window.executeInitialScriptSalesQuotesListUC();
            delete window['executeInitialScriptSalesQuotesListUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('work_orders') != -1) {
        if ($.isFunction(window.executeInitialScriptWorkOrderListUC)) {
            window.executeInitialScriptWorkOrderListUC();
            delete window['executeInitialScriptWorkOrderListUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('purchase_orders') != -1 ||
        s.cp_loadedGrid.indexOf('sales_orders') != -1 ||
        s.cp_loadedGrid.indexOf('purchase_documents') != -1 ||
        s.cp_loadedGrid.indexOf('sales_documents') != -1 ||
        s.cp_loadedGrid.indexOf('transfer_documents') != -1 ||
        s.cp_loadedGrid.indexOf('inventory_adjustments') != -1 ||
        s.cp_loadedGrid.indexOf('finished_good_receipts') != -1 ||
        s.cp_loadedGrid.indexOf('sales_quotes') != -1 ||
        s.cp_loadedGrid.indexOf('work_orders') != -1 ||
        s.cp_loadedGrid.indexOf('returnsToSupplier') != -1 ||
        s.cp_loadedGrid.indexOf('returnsFromClient') != -1) {

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsUC)) {
            window.executeInitialScriptGridSearchOptionsUC();
            delete window['executeInitialScriptGridSearchOptionsUC'];
        }

        if (s.cp_loadedGrid.indexOf('purchase_documents') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_PurchaseDocumentsList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_PurchaseDocumentsList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_PurchaseDocumentsList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('sales_documents') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_SalesDocumentsList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_SalesDocumentsList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_SalesDocumentsList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('transfer_documents') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_TransferDocumentsList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_TransferDocumentsList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_TransferDocumentsList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('inventory_adjustments') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_InventoryAdjustmentsList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_InventoryAdjustmentsList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_InventoryAdjustmentsList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('finished_good_receipts') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_FinishedGoodReceiptsList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_FinishedGoodReceiptsList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_FinishedGoodReceiptsList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('returnsToSupplier') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_ReturnToSupplierList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_ReturnToSupplierList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_ReturnToSupplierList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('returnsFromClient') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_ReturnFromClientList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_ReturnFromClientList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_ReturnFromClientList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('sales_orders') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_SalesOrdersList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_SalesOrdersList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_SalesOrdersList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('purchase_orders') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_PurchaseOrdersList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_PurchaseOrdersList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_PurchaseOrdersList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('sales_quotes') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_SalesQuotesList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_SalesQuotesList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_SalesQuotesList'];
            }
        }
        if (s.cp_loadedGrid.indexOf('work_orders') != -1) {
            if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_WorkOrderList)) {
                window.executeInitialScriptGridSearchOptionsExtendedUC_WorkOrderList();
                delete window['executeInitialScriptGridSearchOptionsExtendedUC_WorkOrderList'];
            }
        }
    }

    if (s.cp_loadedGrid.indexOf('local_inventory') != -1) {
        if ($.isFunction(window.executeInitialScriptInventoryUC)) {
            window.executeInitialScriptInventoryUC();
            delete window['executeInitialScriptInventoryUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
        if ($.isFunction(window.executeInitialScriptBarcodeLabelPrintingUC)) {
            window.executeInitialScriptBarcodeLabelPrintingUC();
            delete window['executeInitialScriptBarcodeLabelPrintingUC'];
        }
        if ($.isFunction(window.executeInitialScriptLokadUC)) {
            window.executeInitialScriptLokadUC();
            delete window['executeInitialScriptLokadUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('supplier_inventory') != -1) {
        if ($.isFunction(window.executeInitialScriptSupplierInventoryUC)) {
            window.executeInitialScriptSupplierInventoryUC();
            delete window['executeInitialScriptSupplierInventoryUC'];
        }
        if ($.isFunction(window.executeInitialScriptBarcodeLabelPrintingUC)) {
            window.executeInitialScriptBarcodeLabelPrintingUC();
            delete window['executeInitialScriptBarcodeLabelPrintingUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('client_product_info') != -1) {
        if ($.isFunction(window.executeInitialScriptClientProductInfoUC)) {
            window.executeInitialScriptClientProductInfoUC();
            delete window['executeInitialScriptClientProductInfoUC'];
        }
        if ($.isFunction(window.executeInitialScriptBarcodeLabelPrintingUC)) {
            window.executeInitialScriptBarcodeLabelPrintingUC();
            delete window['executeInitialScriptBarcodeLabelPrintingUC'];
        }
        if ($.isFunction(window.executeInitialScriptCopyToClipboardUC)) {
            window.executeInitialScriptCopyToClipboardUC();
            delete window['executeInitialScriptCopyToClipboardUC'];
        }
    }

    if (s.cp_loadedGrid === 'inventoryTaking') {
        if ($.isFunction(window.executeInitialScriptInventoryTakingUC)) {
            window.executeInitialScriptInventoryTakingUC();
            delete window['executeInitialScriptInventoryTakingUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('inventoryTrace') != -1) {

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsUC)) {
            window.executeInitialScriptGridSearchOptionsUC();
            delete window['executeInitialScriptGridSearchOptionsUC'];
        }

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_TraceStockList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_TraceStockList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_TraceStockList'];
        }

    }

    if (s.cp_loadedGrid.indexOf('batchNumbersTrace') != -1) {

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsUC)) {
            window.executeInitialScriptGridSearchOptionsUC();
            delete window['executeInitialScriptGridSearchOptionsUC'];
        }

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_TraceBatchList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_TraceBatchList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_TraceBatchList'];
        }

    }

    if (s.cp_loadedGrid.indexOf('costTrace') != -1) {

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsUC)) {
            window.executeInitialScriptGridSearchOptionsUC();
            delete window['executeInitialScriptGridSearchOptionsUC'];
        }

        if ($.isFunction(window.executeInitialScriptGridSearchOptionsExtendedUC_TraceCostList)) {
            window.executeInitialScriptGridSearchOptionsExtendedUC_TraceCostList();
            delete window['executeInitialScriptGridSearchOptionsExtendedUC_TraceCostList'];
        }

    }

    if (s.cp_loadedGrid.indexOf('GoodsInbound') != -1 ||
        s.cp_loadedGrid.indexOf('FinishedGoodsReceipt') != -1 ||
        s.cp_loadedGrid.indexOf('HandlingInvoice') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptGoodsInboundUC)) {
            window.executeInitialScriptGoodsInboundUC();
            delete window['executeInitialScriptGoodsInboundUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('PurchaseInvoice') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptPurchaseInvoiceUC)) {
            window.executeInitialScriptPurchaseInvoiceUC();
            delete window['executeInitialScriptPurchaseInvoiceUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('PurchaseOrder') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptPurchaseOrderUC)) {
            window.executeInitialScriptPurchaseOrderUC();
            delete window['executeInitialScriptPurchaseOrderUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('GoodsReturnToSupplier') != -1 ||
        s.cp_loadedGrid.indexOf('GoodsReturnToSupplierWithCredit') != -1 ||
        s.cp_loadedGrid.indexOf('GoodsReturnToSupplierNoCredit') != -1) {

        if (window.executeInitialScriptDocumentLayoutUC !== undefined) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        else {
            delete window['DocLayoutJSObj'];
        }

        if ($.isFunction(window.executeInitialScriptPurchaseReturnUC)) {
            window.executeInitialScriptPurchaseReturnUC();
            delete window['executeInitialScriptPurchaseReturnUC'];
        }

        if ($.isFunction(window.executeInitialScriptGoodsReturnUC)) {
            window.executeInitialScriptGoodsReturnUC();
            delete window['executeInitialScriptGoodsReturnUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('SalesQuote') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptSalesQuoteUC)) {
            window.executeInitialScriptSalesQuoteUC();
            delete window['executeInitialScriptSalesQuoteUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('SalesOrder') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptSalesOrderUC)) {
            window.executeInitialScriptSalesOrderUC();
            delete window['executeInitialScriptSalesOrderUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('GoodsOutbound') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptGoodsOutboundUC)) {
            window.executeInitialScriptGoodsOutboundUC();
            delete window['executeInitialScriptGoodsOutboundUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('SalesInvoice') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptSalesInvoiceUC)) {
            window.executeInitialScriptSalesInvoiceUC();
            delete window['executeInitialScriptSalesInvoiceUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('GoodsReturnFromClient') != -1 ||
        s.cp_loadedGrid.indexOf('GoodsReturnFromClientWithCredit') != -1 ||
        s.cp_loadedGrid.indexOf('GoodsReturnFromClientNoCredit') != -1) {

        if (window.executeInitialScriptDocumentLayoutUC !== undefined) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        else {
            delete window['DocLayoutJSObj'];
        }

        if ($.isFunction(window.executeInitialScriptSalesReturnUC)) {
            window.executeInitialScriptSalesReturnUC();
            delete window['executeInitialScriptSalesReturnUC'];
        }

        if ($.isFunction(window.executeInitialScriptGoodsReturnUC)) {
            window.executeInitialScriptGoodsReturnUC();
            delete window['executeInitialScriptGoodsReturnUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('GoodsTransfer') != -1) {
        if ($.isFunction(window.executeInitialScriptDocumentLayoutUC)) {
            window.executeInitialScriptDocumentLayoutUC();
            delete window['executeInitialScriptDocumentLayoutUC'];
        }
        if ($.isFunction(window.executeInitialScriptGoodsTransferUC)) {
            window.executeInitialScriptGoodsTransferUC();
            delete window['executeInitialScriptGoodsTransferUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('WorkOrder') != -1) {
        if (s.cp_loadedGrid.indexOf('id=') != -1) {
            if ($.isFunction(window.executeInitialScriptWorkOrderUC)) {
                window.executeInitialScriptWorkOrderUC();
                delete window['executeInitialScriptWorkOrderUC'];
            }
        }
        else {
            if ($.isFunction(window.executeInitialScriptWorkOrderCreateUC)) {
                window.executeInitialScriptWorkOrderCreateUC();
                delete window['executeInitialScriptWorkOrderCreateUC'];
            }
        }
        if ($.isFunction(window.executeInitialScriptBomGridUC)) {
            window.executeInitialScriptBomGridUC();
            delete window['executeInitialScriptBomGridUC'];
        }
    }

    if (s.cp_loadedGrid.indexOf('salesReport') != -1) {

        if ($.isFunction(window.executeInitialScriptSalesReportUC)) {
            window.executeInitialScriptSalesReportUC();
            delete window['executeInitialScriptSalesReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('salesOrdersReport') != -1) {

        if ($.isFunction(window.executeInitialScriptSalesOrdersReportUC)) {
            window.executeInitialScriptSalesOrdersReportUC();
            delete window['executeInitialScriptSalesOrdersReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('purchasesReport') != -1) {

        if ($.isFunction(window.executeInitialScriptPurchasesReportUC)) {
            window.executeInitialScriptPurchasesReportUC();
            delete window['executeInitialScriptPurchasesReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('purchaseOrdersReport') != -1) {

        if ($.isFunction(window.executeInitialScriptPurchaseOrdersReportUC)) {
            window.executeInitialScriptPurchaseOrdersReportUC();
            delete window['executeInitialScriptPurchaseOrdersReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('productMovementsReport') != -1) {

        if ($.isFunction(window.executeInitialScriptProductMovementsReportUC)) {
            window.executeInitialScriptProductMovementsReportUC();
            delete window['executeInitialScriptProductMovementsReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('inventoryAgingReport') != -1) {

        if ($.isFunction(window.executeInitialScriptInventoryAgingReportUC)) {
            window.executeInitialScriptInventoryAgingReportUC();
            delete window['executeInitialScriptInventoryAgingReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('worksReport') != -1) {

        if ($.isFunction(window.executeInitialScriptWorksReportUC)) {
            window.executeInitialScriptWorksReportUC();
            delete window['executeInitialScriptWorksReportUC'];
        }

    }

    if (s.cp_loadedGrid.indexOf('quickbookslogs') != -1) {
        window.executeInitialScriptQBOLogsUC();
        delete window['executeInitialScriptQBOLogsUC'];
    }

    if (s.cp_loadedGrid.indexOf('shopifylogs') != -1) {
        window.executeInitialScriptShopifyLogsUC();
        delete window['executeInitialScriptShopifyLogsUC'];
    }
    
    if (s.cp_NoAccessMessage !== undefined) {
        ShowNotification('f', s.cp_NoAccessMessage);
        //must clear property
        s.cp_NoAccessMessage = undefined;
    }

    $('#hdn_formValidity').val(s.cp_hdn_formValidity);

    $('#hdn_loadedGridControl').val(s.cp_loadedGrid); /* important for the server to know the loaded control*/

    $('.actionButtonsWrapper a').off('click').on('click', function (e) {

        /*This piece of code, prevents navigation if the user stays in the same tab*/
        if (e.ctrlKey || e.shiftKey || e.metaKey)
            return;
        e.preventDefault();
        /* END */

        var that = $(this);
        var elemId = that.prop('id');

        if (elemId == 'importStockAlertsAndSubLocations') {
            elemId = 'import&id=10&name=' + that.data('title');
            ClickOrphanElement(elemId, 'a#inventoryDashboard', that.data('title'), true)
        }

        if (elemId == 'importSupplierInventoryLeadTimesAndQuantityRanges') {
            elemId = 'import&id=13&name=' + that.data('title');
            ClickOrphanElement(elemId, '#supplier_inventory', that.data('title'), true)
        }

        if (elemId == 'importClientProductInfo') {
            elemId = 'import&id=14&name=' + that.data('title');
            ClickOrphanElement(elemId, '#client_product_info', that.data('title'), true)
        }

    });

    var additionalHeaderText = '';

    if ($('.dxp-summary').is(':visible')) {

        additionalHeaderText = '<span class="small PadLe20" style="color:#999">' + $('.dxp-summary').html() + '</span>';

    }

    $('.listHeaderPage').html(htmlEncode(urldecode(document.title)) + additionalHeaderText);

    HideLoading();

}

function OnEndDrillDownLoading(s) {

    $('.documentLink').off('click').on('click', function (e) {
        /*This piece of code, prevents navigation if the user stays in the same tab*/
        if (e.ctrlKey || e.shiftKey || e.metaKey)
            return;
        e.preventDefault();
        /* END */
        var that = $(this);

        //first argument is document type -> 
        //second argument is document id -> negative for empty documents
        //third argument is document name (human readable) -> negative for empty documents
        //fourth argument is menu element to be selected
        //fifth argument is add history -> true
        //sixth is extraParams for returns
        LoadDocument(that.data('documenttype'),
            that.data('entityid'),
            that.data('documentname'),
            that.data('menuselection'),
            true,
            '');

    });

}

function DeleteOldCallBackPanelDataAndObjects() {

    $('#hdn_loadedControl').val(''); /* We shall clear this in Begin Callback (here) so as not to load the previous control twice */

    $('#hdn_loadedGridControl').val(''); /* We shall clear this in Begin Callback (here) so as not to load the previous control twice */

    //clear all html content inside callback panel
    $("[id$='GridCallbackPanel']").html('');

    //also clear all devexpress controls
    var collection = ASPxClientControl.GetControlCollection();

    for (var propertyNameOfObject in collection.elementsMap.entries) {

        var control = collection.elementsMap.entries[propertyNameOfObject].value;

        if (ASPxClientUtils.IsExists(control) && control.name.indexOf("GridCallbackPanel") > -1) {

            //if it is not the grid callback panel itself
            if (control.name.endsWith("GridCallbackPanel") == false) {

                delete window[control.name];

                var pieces = control.uniqueID.split(/[\s$]+/);

                var clientInstanceName = pieces[pieces.length - 1];

                delete window[clientInstanceName];

            }

        }

    }

    /*clear all JS that was added as a consequence of the user control*/
    delete window['DocLayoutJSObj'];

    /*Account Controls*/

    if (typeof SetupObj != 'undefined') clearTimeout(SetupObj.timerDateTime); /* Timer in SetupObj that we need to stop*/

    delete window['SetupObj'];

    delete window['UserAdd'];

    delete window['UserEdit'];

    delete window['BackupRestore'];

    delete window['documentExport'];

    delete window['zapier'];

    delete window['quickbooks'];

    delete window['magento'];

    delete window['shopify'];

    delete window['wooCommerce'];

    delete window['lokad'];

    delete window['AADEMyData'];

    delete window['LocalizationObj'];

    delete window['ResetDB'];

    delete window['PermissionUpdateObj'];

    delete window['SaveReports'];

    delete window['BOMGrid'];

    delete window['SavedReports'];

    delete window['UpdateProductCostsObj'];


    delete window['ContactsList'];

    delete window['CurrenciesList'];

    delete window['CurrencyEdit'];

    delete window['CurrencyExchangeRatesObj'];

    delete window['DocumentTypeEdit'];

    delete window['DocumentTypesList'];

    delete window['importControl'];

    delete window['InventoryLocationEdit'];

    delete window['InventoryLocationsList'];

    delete window['PricingRuleEdit'];

    delete window['PricingRulesList'];

    delete window['ProductCategoriesList'];

    delete window['ProductCategoryEdit'];

    delete window['ProductEdit'];

    delete window['productEditMultipleProducts'];

    delete window['SpScript_Products'];

    delete window['SerialNumbersList'];

    delete window['BatchNumbersList'];

    delete window['ShippingProviderEdit'];

    delete window['ShippingProvidersList'];

    delete window['SupplierClientEdit'];

    delete window['SupplierClientsList'];

    delete window['TaxDiscountEdit'];

    delete window['TaxesDiscountsList'];


    delete window['PDocSlctnJSObj'];

    delete window['SpScript_OrderList'];

    delete window['SpScript_InvoiceList'];

    delete window['SpScript_QuotesList'];

    delete window['WorkOrderCreate'];

    delete window['WorkOrder'];

    delete window['SpScript_WorkOrdersList'];

    delete window['Inventory'];

    delete window['inventoryTaking'];

    delete window['SupplierInventory'];

    delete window['ProductMovementsReportUC___'];

    delete window['InventoryAgingReportUC___'];

    delete window['PurchaseOrdersReportUC___'];

    delete window['PurchasesReportUC___'];

    delete window['SalesOrdersReportUC___'];

    delete window['SalesReportUC___'];

    delete window['WorksReportUC___'];

}

function LoadDocument(documentType,
    documentId,
    pageTitle,
    menuSelection,
    addHistory,
    extraParams) {

    if (documentId === undefined) {

        documentId = "";

    }

    AdjustDashboard('gridDataWrapper');

    var mydocument = '';

    if (documentId != '') {

        mydocument += '&id=' + documentId + '&name=' + pageTitle;

    }

    if (extraParams.length > 0) {

        mydocument += extraParams + '&name=' + pageTitle;

    }

    if (!CallbackPanelDataSettings.InCallback() && !clientGridCallbackPanel.InCallback()) {

        if (addHistory) {

            window.history.pushState('document*' + documentType + '*' + documentId + '*' + pageTitle + '*' + menuSelection + '*' + extraParams, '', '?document=' + documentType + mydocument); // Changes the URL of the browser so, we can navigate back/forth

            window.updateDynamicData();

        }

        $('#hdn_previousURL').val($('#hdn_currentURL').val());

        $('#hdn_currentURL').val('?document=' + documentType + mydocument);

        if (pageTitle) { document.title = urldecode(htmlDecode(pageTitle)); }

        UpdateBreadCrumb(documentType,
            documentId,
            pageTitle);

        if (menuSelection != '') selectSpecificMenuOptionAndRemovePreviousSelection($('#' + menuSelection));

        clientGridCallbackPanel.PerformCallback(documentType + mydocument);

    } else {

        postponedCallbackGridRequired = true;

        delayedCallbackToLoad = documentType + mydocument;

    }
    

}

function GetMenuSelectionFromDocumentChoice(documentChoice) {

    switch (documentChoice) {
        case DocumentChoices.GoodsOutbound:
        case DocumentChoices.GoodsOutboundAndSalesInvoice:
        case DocumentChoices.SalesInvoice:
            return MenuDocumentChoices.GoodsOutbound
            break;
        case DocumentChoices.GoodsInbound:
        case DocumentChoices.GoodsInboundAndPurchaseInvoice:
        case DocumentChoices.PurchaseInvoice:
            return MenuDocumentChoices.GoodsInbound
            break;
        case DocumentChoices.GoodsTransfer:
            return MenuDocumentChoices.GoodsTransfer
            break;
        case DocumentChoices.SalesOrder:
            return MenuDocumentChoices.SalesOrder
            break;
        case DocumentChoices.PurchaseOrder:
            return MenuDocumentChoices.PurchaseOrder
            break;
        case DocumentChoices.SalesQuote:
            return MenuDocumentChoices.SalesQuote
            break;
        case DocumentChoices.WorkOrder:
            return MenuDocumentChoices.WorkOrder
            break;
        case DocumentChoices.FinishedGoodsReceipt:
            return MenuDocumentChoices.FinishedGoodsReceipt
            break;
        case DocumentChoices.GoodsReturnFromClient:
        case DocumentChoices.GoodsReturnFromClientWithCredit:
        case DocumentChoices.GoodsReturnFromClientNoCredit:
            return MenuDocumentChoices.GoodsReturnFromClient
            break;
        case DocumentChoices.GoodsReturnToSupplier:
        case DocumentChoices.GoodsReturnToSupplierWithCredit:
        case DocumentChoices.GoodsReturnToSupplierNoCredit:
            return MenuDocumentChoices.GoodsReturnToSupplier
            break;
        case DocumentChoices.InventoryAdjustmentsMinus:
        case DocumentChoices.InventoryAdjustmentsPlus:
            return MenuDocumentChoices.InventoryTake
            break;
        case DocumentChoices.HandlingInvoice:
            return MenuDocumentChoices.HandlingInvoice
            break;
    }

}

function GetDocumentTypeFromDocumentChoice(documentChoice) {

    switch (documentChoice) {
        case DocumentChoices.GoodsOutbound:
        case DocumentChoices.GoodsOutboundAndSalesInvoice:
        case DocumentChoices.AllSalesDocuments:
            return "GoodsOutbound"
            break;
        case DocumentChoices.GoodsInbound:
        case DocumentChoices.GoodsInboundAndPurchaseInvoice:
        case DocumentChoices.AllPurchaseDocuments:
            return "GoodsInbound"
            break;
        case DocumentChoices.GoodsTransfer:
            return "GoodsTransfer"
            break;
        case DocumentChoices.SalesOrder:
            return "SalesOrder"
            break;
        case DocumentChoices.PurchaseOrder:
            return "PurchaseOrder"
            break;
        case DocumentChoices.SalesQuote:
            return "SalesQuote"
            break;
        case DocumentChoices.WorkOrder:
            return "WorkOrder"
            break;
        case DocumentChoices.FinishedGoodsReceipt:
            return "FinishedGoodsReceipt"
            break;
        case DocumentChoices.GoodsReturnFromClient:
        case DocumentChoices.GoodsReturnFromClientWithCredit:
        case DocumentChoices.GoodsReturnFromClientNoCredit:
            return "GoodsReturnFromClient"
            break;
        case DocumentChoices.SalesInvoice:
            return "SalesInvoice"
            break;
        case DocumentChoices.GoodsReturnToSupplier:
        case DocumentChoices.GoodsReturnToSupplierWithCredit:
        case DocumentChoices.GoodsReturnToSupplierNoCredit:
            return "GoodsReturnToSupplier"
            break;
        case DocumentChoices.PurchaseInvoice:
            return "PurchaseInvoice"
            break;
        case DocumentChoices.HandlingInvoice:
            return "HandlingInvoice"
            break;
    }
}

function OnDocumentGridEndCallback() {

    $('.documentLink').off('click').on('click', function (e) {
        /*This piece of code, prevents navigation if the user stays in the same tab*/
        if (e.ctrlKey || e.shiftKey || e.metaKey)
            return;
        e.preventDefault();
        /* END */
        var that = $(this);

        //first argument is document type -> 
        //second argument is document id -> negative for empty documents
        //third argument is add history -> true
        //fourth argument is menu element to be selected
        //fifth argument is Page title
        //sixth is extraParams for returns
        LoadDocument(that.data('documenttype'),
            that.data('entityid'),
            that.data('documentname'),
            that.data('menuselection'),
            true,
            '');

    });
}

function ClickDocumentLink(elem, e) {

    /*This piece of code, prevents navigation if the user stays in the same tab*/
    if (e.ctrlKey || e.shiftKey || e.metaKey)
        return;
    e.preventDefault();
    /* END */
    var that = $(elem);

    //first argument is document type -> 
    //second argument is document id -> negative for empty documents
    //third argument is document name (human readable) -> negative for empty documents
    //fourth argument is menu element to be selected
    //fifth argument is add history -> true
    //sixth is extraParams for returns
    LoadDocument(that.data('documenttype'),
        that.data('entityid'),
        that.data('documentname'),
        that.data('menuselection'),
        true,
        '');

}

function ClickLinkUnderProfileIcon(elem, addHistory) {

    if ($('#sortable, #hiddenSortable').find('.cardCreatingOrEditing').length) { /* in Case a card is still open */ return false; }

    AdjustDashboard('controlDataSettingsWrapper');

    $('#td_CallbackPanelDataSettings').css('width', '100%');

    /* set width of left td menu according to the children*/

    var that = $(elem);

    if (that.prop('id') === 'editUser') {

        var userId = $('#hdn_userId').val();

        OnMenuItemChanged('editUser&id=' + userId + '&name=' + TranslationsObj.EditUser, 'addNewUser', that.html(), true, 'navBar');

    } else {

        OnMenuItemChanged('subscriptionBilling', 'subscriptionBilling', $('#subscriptionBilling').html(), true, 'navBar');

    }
}

function ClickNavBar(elem, parentId, pageTitle, addHistory) {

    AdjustDashboard('controlDataSettingsWrapper');

    var thatParent = $('#' + parentId);

    var myDocTitle = '';

    /*Order of if else if should not change */
    if (elem.indexOf('&name=') > -1) {

        selectSpecificMenuOptionAndRemovePreviousSelection(thatParent);

        var isCurrentUser = $('#editUser').prop('href').includes(gup('name')); // If user is admin, he has access to multiple users but the title property must include "My profile" only for him

        if (isCurrentUser) {

            myDocTitle = $('#editUser').html() + ' (' + gup('name') + ')';

        }
        else {

            myDocTitle = gup('name');

        }

    } else if ($('#' + elem).length) {

        if (elem !== 'subscriptionBilling' && parentId !== 'usersList') selectSpecificMenuOptionAndRemovePreviousSelection($('#' + elem));

        myDocTitle = $('#' + elem).html();

    } else if (pageTitle.length > 0 && !$('#' + elem).length) { myDocTitle = pageTitle; }

    OnMenuItemChanged(elem, parentId, myDocTitle, addHistory, 'navBar');

}

function ClickMenuOptionWrapper(elemId, addHistory, urlParams) {

    var elem = $('#' + elemId);

    ClickMenuOption(elem, addHistory, urlParams);

}

function ClickMenuOption(elem, addHistory, urlParams) {

    if ($('#sortable,#hiddenSortable').find('.cardCreatingOrEditing').length) { /* in Case a card is still open */ return false; }

    AdjustDashboard('controlDashboardWrapper');

    var that = $(elem);

    if (that.length == 0) {
        /* say if the user does not have permissions to visit any page */
        document.title = 'Megaventory » Online Inventory and Order Management System';
        return;
    }

    selectSpecificMenuOptionAndRemovePreviousSelection(that);

    var currentDashboard = that.prop('id');

    UpdateBreadCrumb(currentDashboard);

    if (urlParams) {

        //This will not be saved in the push state or the hdn_currentURL. It will exist for one time only
        currentDashboard += urlParams;

    }

    if (addHistory) {

        window.history.pushState('dashboards*' + that.prop('id'), that.prop('id'), '?dashboard=' + currentDashboard); // Changes the URL of the browser so, we can navigate back/forth

        window.updateDynamicData();

    }

    $('#hdn_previousURL').val($('#hdn_currentURL').val());

    $('#hdn_currentURL').val('?dashboard=' + that.prop('id'));

    var myTitle = $('li.selectedMenuElement div.betweenLeftEmoticonAndText').html();

    if (myTitle == undefined) {

        myTitle = $('li.selectedIconWhenMenuIsClosed div.betweenLeftEmoticonAndText').html();

    }

    myTitle = myTitle.trim();

        document.title = htmlEncode(myTitle) + ' - ' + urldecode(htmlDecode(that.html()));



    UpdateDashboard(elem);

    DeleteOldCallBackPanelDataAndObjects();

    // to restart a new 60 second interval starting at this exact moment in time
    clearInterval(dashboardBoxesTimer);

    dashboardBoxesTimer = setInterval(RefreshDashBoardNumbers, pTimer);

}

function AdjustDashboard(wrapperToShow, isOrphan) {
    //there are 3 div wrappers that should be shown or hidden

    var wrappers = ["controlDashboardWrapper", "controlDataSettingsWrapper", "gridDataWrapper", "controlReportsWrapper"];

    var lengthOfWrappers = wrappers.length

    for (i = 0; i < lengthOfWrappers; i++) {
        if (wrapperToShow == wrappers[i]) {
            $('#' + wrappers[i]).show();
        }
        else {
            $('#' + wrappers[i]).hide();
        }
    }

    //also remove html content from hidden callback panels
    if (wrapperToShow != 'controlDataSettingsWrapper') {
        $("[id$='ASPxCallbackPanelDataSettings']").html('');
    }

    if (wrapperToShow != 'gridDataWrapper') {
        $("[id$='GridCallbackPanel']").html('');
    }

    //reset hidden control that holds loaded user controls
    if (wrapperToShow != 'controlDataSettingsWrapper') {
        $('#hdn_loadedControl').val('');
    }

    if (wrapperToShow != 'gridDataWrapper') {
        $('#hdn_loadedGridControl').val('');
    }

    /* Clipboard back to normal. Changes text in doc and WO creation. */

    $('#img_Clipboard_span').prop('title', $('#hdn_textDefaultClipboard').val());

}

function UpdateDashboard(elem) {

    UpdateSubmenuButtons(elem);

    DeleteAllBoxes();

    DashboardUI.hiddenCardsCount = 0;

    DashboardUI.closeDrawerOfHiddenCards();

    $('#liPortalCard').hide();

    //to fix someone pressing on sale / purchase / manufacture / inventory buttons while he's dragging/sorting a card.
    $('#sortable,#hiddenSortable').css('pointer-events', '');

    var that = $(elem);

    $('ul#sortable li:not(#liAddCard, #liPortalCard)').hide();

    // call web service (according to elem: Sell, Purchase etc.) to fetch dasboard texts from a database table. Order by card
    Megaventory.WebApplication.MegaventoryWebServices.GetDashboardBoxes(that.data('bookmarkcardselection'), -1, RenderBoxes);

}

function AddFirstOfClassToDashboardBoxes() {

    var allDashboardClasses = ['purchase_orders',
        'purchase_documents',
        'sales_quotes',
        'sales_orders',
        'sales_documents',
        'work_orders',
        'finished_good_receipts',
        'local_inventory',
        'transfer_documents',
        'inventory_adjustments',
        'supplier_inventory',
        'returnsToSupplier',
        'returnsFromClient']

    for (i = 0; i < allDashboardClasses.length; i++) {

        $('.' + allDashboardClasses[i]).removeClass('firstOfClass');

        $('.' + allDashboardClasses[i] + ':first').addClass('firstOfClass');

    }

}

function RenderBoxes(boxes) {

    var selectedDashboard;

    for (i = 0; i < boxes.length; i++) {

        var okToRenderBox = true;

        box = boxes[i];

        selectedDashboard = $('#menu .selectedOption:first').attr('name');

        if ((box.DashboardBoxType == 'purchase' && selectedDashboard == 'purchaseDashboard') ||
            (box.DashboardBoxType == 'sell' && selectedDashboard == 'sellDashboard') ||
            (box.DashboardBoxType == 'manufacture' && selectedDashboard == 'manufactureDashboard') ||
            (box.DashboardBoxType == 'inventory' && selectedDashboard == 'inventoryDashboard')) {

            var myCounter = 0;

            if ($('li.ui-sortable-handle .divBox').length) {

                //Loop Through All boxes to see if it exists in the DOM
                $('li.ui-sortable-handle .divBox').each(function () {

                    if ($(this).prop('id') == box.DashboardBoxID) {

                        /* if the Id of the box already exists in the DOM. This can happen in case the user clicks fast back and forth in the same dashboard*/
                        okToRenderBox = false;

                    }

                })

                if (okToRenderBox) DashboardUI.AddBoxToUIorCreateNewCard(box, false);

            } else {

                DashboardUI.AddBoxToUIorCreateNewCard(box, false);

            }

        }

    }

    for (i = 0; i < boxes.length; i++) {

        box = boxes[i];

        if (box.DashboardBoxIsHiddenForThisUser == false) {

            //do not update the querycount of hidden cards when in visible mode 
            Megaventory.WebApplication.MegaventoryWebServices.UpdateDashboardBoxQueryCount(box, UpdateDashboardBoxQueryCount);

        }

    }

    if (DashboardUI.hiddenCardsCount == 1) {

        $('ul#sortable #liPortalCard').show().find('.portalHeader').html(DashboardUI.hiddenCardsCount + ' ' + DashboardUI.OneHiddenCardText);

    } else {

        if (DashboardUI.hiddenCardsCount > 0) {
            $('ul#sortable #liPortalCard').show().find('.portalHeader').html(DashboardUI.hiddenCardsCount + ' ' + DashboardUI.HiddenCardsText);
        }



    }
    $('ul#sortable #liPortalCard').insertBefore('#liAddCard');     //Portal Card on visible mode (which is the mode in which the cards are rendered so the default one) must be shown just before the Add New Bookmark Card

    AddFirstOfClassToDashboardBoxes();

    checkValueOfRdoButtonAndShowBoxes();

}

function checkValueOfRdoButtonAndShowBoxes() {

    $('ul#sortable > li:not(#liAddCard, #liPortalCard)').hide(); /* Hide all cards */

    $('.filterProps > span').hide(); /* Hide all cards */

    $('.' + $('#menu li a.menuItem.selectedOption').data('bookmarkcardselection')).show();

}

//updates query count of each box
function UpdateDashboardBoxQueryCount(mvBox) {

    var boxId = mvBox.DashboardBoxID;

    var BoxType = mvBox.DashboardBoxGridQuery;

    var divId = $("#" + boxId);

    var divNumbers = divId.find('.boxNumbersWrapper');

    var myQueryCount = mvBox.DashboardBoxGridQueryCount;

    if (mvBox.DashboardBoxGridQueryCount > 999 && mvBox.DashboardBoxGridQueryCount < 10000) {

        //1 decimal digit, floored

        myQueryCount = (Math.floor((mvBox.DashboardBoxGridQueryCount * 10 / 1000)) / 10).toString() + 'k';

    } else if (mvBox.DashboardBoxGridQueryCount > 9999 && mvBox.DashboardBoxGridQueryCount < 1000000) {

        //no decimal digits - number still floored

        myQueryCount = Math.floor((mvBox.DashboardBoxGridQueryCount / 1000)).toString() + 'k';

    } else if (mvBox.DashboardBoxGridQueryCount > 999999) {

        //1 decimal digit, floored

        myQueryCount = (Math.floor((mvBox.DashboardBoxGridQueryCount * 10 / 1000000)) / 10).toString() + 'M';

    }

    // if it's creation or edit remove on click

    if (boxId == -1) {

        var boxTitle = DashboardUI.cardLiThatIsCurrentlyCreatedOrEdited.find('.boxHeader').html();

        var innerhtml = "<a class='boxNumbers' data-dashboardboxtitle='" + htmlEncode(boxTitle) + "' data-dashboardboxgridquery='" + BoxType + "' data-dashboardboxid='" + mvBox.DashboardBoxID + "' href='default.aspx?grid=" + BoxType + "&id=" + mvBox.DashboardBoxID + "&name=" + htmlEncode(boxTitle) + "' title='" + DashboardUI.BoxNumbersHoverTextStart + " (" + mvBox.DashboardBoxGridQueryCount + "). " + DashboardUI.BoxNumbersHoverTextEnd + "'>" + myQueryCount + "</a>";

        DashboardUI.cardLiThatIsCurrentlyCreatedOrEdited.find('.boxNumbersWrapper').html(innerhtml);

        var innerhtmlForTitle = "<span class='bookmarkType'>" + DashboardUI.cardLiThatIsCurrentlyCreatedOrEdited.find('.bookmarkType').html() + "</span><a class='boxHeader' data-dashboardboxtitle='" + htmlEncode(boxTitle) + "' data-dashboardboxgridquery='" + BoxType + "' data-dashboardboxid='" + mvBox.DashboardBoxID + "' href='default.aspx?grid=" + BoxType + "&id=" + mvBox.DashboardBoxID + "&name=" + htmlEncode(boxTitle) + "' title='" + htmlEncode(boxTitle) + "'>" + boxTitle + "</a>";

        DashboardUI.cardLiThatIsCurrentlyCreatedOrEdited.find('.boxHeaderWrapper').html(innerhtmlForTitle);

        var CreationofNewCardNumbersCircle = DashboardUI.cardLiThatIsCurrentlyCreatedOrEdited.find('.boxNumbersWrapper > a');

        CreationofNewCardNumbersCircle.removeClass('boxNumbersVibe');

        if (BoxType == 'purchase_orders' || BoxType == 'purchase_documents' || BoxType == 'returnsToSupplier' || BoxType == 'sales_orders' || BoxType == 'sales_documents' || BoxType == 'sales_quotes'
            || BoxType == 'returnsFromClient' || BoxType == 'work_orders' || BoxType == 'finished_good_receipts' || BoxType == 'transfer_documents' || BoxType == 'inventory_adjustments') {

            if (mvBox.DashboardBoxGridQueryCount > 999) {

                // Notification on Card Creation for cards with a large query count

                CreationofNewCardNumbersCircle.addClass('boxNumbersVibe');

                $('#infoForLargeQuery').fadeIn();

            } else { $('#infoForLargeQuery').fadeOut(); }
        }
    }
    else {

        var innerhtml = "<a class='boxNumbers' onclick='ClickDashboardBoxNumber(event, $(this), true)' data-dashboardboxtitle='" + htmlEncode(mvBox.DashboardBoxTitle) + "' data-dashboardboxgridquery='" + BoxType + "' data-dashboardboxid='" + mvBox.DashboardBoxID + "' href='default.aspx?grid=" + BoxType + "&id=" + mvBox.DashboardBoxID + "&name=" + htmlEncode(mvBox.DashboardBoxTitle) + "' title='" + DashboardUI.BoxNumbersHoverTextStart + " (" + mvBox.DashboardBoxGridQueryCount + "). " + DashboardUI.BoxNumbersHoverTextEnd + "'>" + myQueryCount + "</a>";

        divNumbers.html(innerhtml);

        var innerhtmlForTitle = "<span class='bookmarkType'>" + divId.find('.bookmarkType').html() + "</span><a class='boxHeader' onclick='ClickDashboardBoxNumber(event, $(this), true)' data-dashboardboxtitle='" + htmlEncode(mvBox.DashboardBoxTitle) + "' data-dashboardboxgridquery='" + BoxType + "' data-dashboardboxid='" + mvBox.DashboardBoxID + "' href='default.aspx?grid=" + BoxType + "&id=" + mvBox.DashboardBoxID + "&name=" + htmlEncode(mvBox.DashboardBoxTitle) + "' title='" + htmlEncode(mvBox.DashboardBoxTitle) + "'>" + htmlEncode(mvBox.DashboardBoxTitle) + "</a>";

        divId.find('.boxHeaderWrapper').html(innerhtmlForTitle);


    }

}

function RefreshDashBoardNumbers(boxLiId) {


    $('#controlDashboardWrapper #sortable li:visible:not(#liAddCard,#liPortalCard)').each(function () {

        var boxId = $(this).find('div.divBox').prop('id');

        if (typeof (boxLiId) == 'undefined') {

            $(this).find('.boxNumbers').html('<span>.</span><span>.</span><span>.</span>')

            if (boxId > 0) {

                Megaventory.WebApplication.MegaventoryWebServices.UpdateDashboardBoxQueryCountNumbersOnly(boxId, UpdateDashboardBoxQueryCountNumbersOnlyResponse);

            }

        } else {

            if (boxLiId.find('div.divBox').prop('id') == boxId && boxId > 0) {

                Megaventory.WebApplication.MegaventoryWebServices.UpdateDashboardBoxQueryCountNumbersOnly(boxId, UpdateDashboardBoxQueryCountNumbersOnlyResponse); return false;

            }

        }

    });

}

function UpdateDashboardBoxQueryCountNumbersOnlyResponse(mvBox) {

    if (mvBox) {

        var myQueryCount = mvBox.DashboardBoxGridQueryCount;

        if (mvBox.DashboardBoxGridQueryCount > 999 && mvBox.DashboardBoxGridQueryCount < 10000) {

            myQueryCount = (mvBox.DashboardBoxGridQueryCount / 1000).toFixed(1).replace(/\.0$/, '') + 'k';

        } else if (mvBox.DashboardBoxGridQueryCount > 9999 && mvBox.DashboardBoxGridQueryCount < 1000000) {

            myQueryCount = (mvBox.DashboardBoxGridQueryCount / 1000).toFixed() + 'k';

        } else if (mvBox.DashboardBoxGridQueryCount > 999999) {

            myQueryCount = (mvBox.DashboardBoxGridQueryCount / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';

        }

        $('a.boxNumbers[data-dashboardboxid="' + mvBox.DashboardBoxID + '"]').html(myQueryCount);


    }
}

function ClickDashboardBoxNumber(event, that, addHistory) {
    /*This piece of code, prevents navigation if the user stays in the same tab*/
    if (event.ctrlKey || event.shiftKey || event.metaKey)
        return;
    event.preventDefault();
    /* END ?grid=purchase_orders&id=1*/

    LoadGrid(that.data('dashboardboxgridquery'), that.data('dashboardboxid'), that.data('dashboardboxtitle'), '', addHistory)

}

function UpdateSubmenuButtons(elem) {

    var that = $(elem);

    $('#liAddCard').show();

    window.scrollTo(0, 0);

}

function DeleteAllBoxes() {

    $('ul#sortable li:not(#liAddCard,#liPortalCard)').remove();

    $('ul#hiddenSortable li').remove();

}

function UpdateNewCard(headerText, descriptionText, queryFilter, protectedCard) {

    if (protectedCard === true) { $('ul#sortable li span:first-child').html(''); }

    $('ul#sortable li:not(#liAddCard,#liPortalCard)').last().find('.boxHeader').html(headerText);

    $('ul#sortable li:not(#liAddCard,#liPortalCard)').last().find('.boxDescription').html(descriptionText);

}

function ClickMenuElementReport(elem, addHistory) {

    that = $(elem);

    UpdateBreadCrumb(that.prop('id'));

    AdjustDashboard('controlReportsWrapper');

    selectSpecificMenuOptionAndRemovePreviousSelection(that);

    UpdateReports(that);

    document.title = urldecode(htmlDecode(that.html()));

    DeleteOldCallBackPanelDataAndObjects();

    if (addHistory) {

        window.history.pushState('reporttype*' + that.prop('id'), that.prop('id'), '?reporttype=' + that.prop('id')); // Changes the URL of the browser so, we can navigate back/forth

        window.updateDynamicData();

    }

    $('#hdn_previousURL').val($('#hdn_currentURL').val());

    $('#hdn_currentURL').val('?reporttype=' + that.prop('id'));

}

function UpdateReports(elem) {

    var that = $(elem);

    // call web service (according to elem: Sell, Purchase etc.) to fetch dasboard texts from a database table. Order by card
    //Purchase Reports
    if (that.prop('id') === 'purchasesReport') {
        $('.reportPattern > .patternTitle:not(#purchaseReportingTitle)').hide();
        $('.reportPattern > #purchaseReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#purchaseReports)').hide();
        $('.reportPattern > .gridReports > li#purchaseReports ').show();

        $('#purchaseReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#purchaseReports').find('.boxReportList').html('');
        $('#purchaseReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("purchasesReport", 1, RenderReports, function () { }, "purchasesReport");
    }
    if (that.prop('id') === 'purchaseOrdersReport') {
        $('.reportPattern > .patternTitle:not(#purchaseReportingTitle)').hide();
        $('.reportPattern > #purchaseReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#purchaseOrdersReports)').hide();
        $('.reportPattern > .gridReports > li#purchaseOrdersReports ').show();

        $('#purchaseOrdersReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#purchaseOrdersReports').find('.boxReportList').html('');
        $('#purchaseOrdersReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("purchaseOrdersReport", 1, RenderReports, function () { }, "purchaseOrdersReport");
    }
    //Sales Reports
    if (that.prop('id') === 'salesReport') {
        $('.reportPattern > .patternTitle:not(#salesReportingTitle)').hide();
        $('.reportPattern > #salesReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#salesReports)').hide();
        $('.reportPattern > .gridReports > li#salesReports ').show();

        $('#salesReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#salesReports').find('.boxReportList').html('');
        $('#salesReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("salesReport", 1, RenderReports, function () { }, "salesReport");
    }
    if (that.prop('id') === 'salesOrdersReport') {
        $('.reportPattern > .patternTitle:not(#salesReportingTitle)').hide();
        $('.reportPattern > #salesReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#salesOrdersReports)').hide();
        $('.reportPattern > .gridReports > li#salesOrdersReports ').show();

        $('#salesOrdersReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#salesOrdersReports').find('.boxReportList').html('');
        $('#salesOrdersReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("salesOrdersReport", 1, RenderReports, function () { }, "salesOrdersReport");
    }
    //inventroy Reports
    if (that.prop('id') === 'productMovementsReport') {
        $('.reportPattern > .patternTitle:not(#inventoryReportingTitle)').hide();
        $('.reportPattern > #inventoryReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#productMovementReports)').hide();
        $('.reportPattern > .gridReports > li#productMovementReports ').show();

        $('#productMovementReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#productMovementReports').find('.boxReportList').html('');
        $('#productMovementReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("productMovementsReport", 1, RenderReports, function () { }, "productMovementsReport");
    }
    if (that.prop('id') === 'availabilityLevelsReport') {
        $('.reportPattern > .patternTitle:not(#inventoryReportingTitle)').hide();
        $('.reportPattern > #inventoryReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#inventoryLevelsReports)').hide();
        $('.reportPattern > .gridReports > li#inventoryLevelsReports ').show();

        $('#inventoryLevelsReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#inventoryLevelsReports').find('.boxReportList').html('');
        $('#inventoryLevelsReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("availabilityLevelsReport", 1, RenderReports, function () { }, "availabilityLevelsReport");
    }
    if (that.prop('id') === 'inventoryValueReport') {
        $('.reportPattern > .patternTitle:not(#inventoryReportingTitle)').hide();
        $('.reportPattern > #inventoryReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#inventoryValueReports)').hide();
        $('.reportPattern > .gridReports > li#inventoryValueReports ').show();

        $('#inventoryValueReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#inventoryValueReports').find('.boxReportList').html('');
        $('#inventoryValueReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("inventoryValueReport", 1, RenderReports, function () { }, "inventoryValueReport");
    }
    if (that.prop('id') === 'inventoryAgingReport') {
        $('.reportPattern > .patternTitle:not(#inventoryReportingTitle)').hide();
        $('.reportPattern > #inventoryReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#inventoryAgingReports)').hide();
        $('.reportPattern > .gridReports > li#inventoryAgingReports ').show();

        $('#inventoryAgingReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#inventoryAgingReports').find('.boxReportList').html('');
        $('#inventoryAgingReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("inventoryAgingReport", 1, RenderReports, function () { }, "inventoryAgingReport");
    }
    //Manufacture Reports
    if (that.prop('id') === 'worksReport') {
        $('.reportPattern > .patternTitle:not(#manufacturingReportingTitle)').hide();
        $('.reportPattern > #manufacturingReportingTitle ').show();
        $('.reportPattern > .gridReports > li:not(#workOrderReports)').hide();
        $('.reportPattern > .gridReports > li#workOrderReports').show();

        $('#workOrderReports').find('.loaderImg').addClass('loadingImgBoxes');
        $('#workOrderReports').find('.boxReportList').html('');
        $('#workOrderReports').find('.boxReportList').show();
        Megaventory.WebApplication.MegaventoryWebServices.GetReports("worksReport", 1, RenderReports, function () { }, "worksReport");
    }

}

function RenderReports(response, type) {

    if (type == 'purchasesReport') {
        $('#purchaseReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#purchaseReports').find('.boxReportList').html(response);
        $('#purchaseReports').find('.boxReportList').show();
    }
    if (type == 'purchaseOrdersReport') {
        $('#purchaseOrdersReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#purchaseOrdersReports').find('.boxReportList').html(response);
        $('#purchaseOrdersReports').find('.boxReportList').show();
    }
    if (type == 'salesReport') {
        $('#salesReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#salesReports').find('.boxReportList').html(response);
        $('#salesReports').find('.boxReportList').show();
    }
    if (type == 'salesOrdersReport') {
        $('#salesOrdersReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#salesOrdersReports').find('.boxReportList').html(response);
        $('#salesOrdersReports').find('.boxReportList').show();
    }
    if (type == 'availabilityLevelsReport') {
        $('#inventoryLevelsReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#inventoryLevelsReports').find('.boxReportList').html(response);
        $('#inventoryLevelsReports').find('.boxReportList').show();
    }
    if (type == 'inventoryValueReport') {
        $('#inventoryValueReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#inventoryValueReports').find('.boxReportList').html(response);
        $('#inventoryValueReports').find('.boxReportList').show();
    }
    if (type == 'productMovementsReport') {
        $('#productMovementReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#productMovementReports').find('.boxReportList').html(response);
        $('#productMovementReports').find('.boxReportList').show();
    }
    if (type == 'inventoryAgingReport') {
        $('#inventoryAgingReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#inventoryAgingReports').find('.boxReportList').html(response);
        $('#inventoryAgingReports').find('.boxReportList').show();
    }
    if (type == 'worksReport') {
        $('#workOrderReports').find('.loaderImg').removeClass('loadingImgBoxes');
        $('#workOrderReports').find('.boxReportList').html(response);
        $('#workOrderReports').find('.boxReportList').show();
    }

}

function ClickReport(event, that, addHistory) {
    /*This piece of code, prevents navigation if the user stays in the same tab*/
    if (event.ctrlKey || event.shiftKey || event.metaKey)
        return;
    event.preventDefault();
    /* END ?report=purchase_orders&id=1&name=myReport*/

    LoadReport(that.data('reporttype'), that.data('reportid'), that.data('reportname'), addHistory)

}

var snd = new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=");

function BeepSoundForScan() {

    snd.play();

}

//aspxDateEdit.Click on text to show calendar
function OnDevexpressCalendarInit(s, e) {
    ASPxClientUtils.AttachEventToElement(s.GetInputElement(), "click", function (event) {
        s.ShowDropDown();
    });
}

UndeleteFunctions = {

    'navBarid': $('.selectedOption').closest('ul').find('.navBar').prop('id'),

    'UndoProductDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteProduct(entityId, entityName, $('#hdn_formValidity').val(), this.UndoProductDeleteSuccess, this.UndoProductDeleteError);
    },

    'UndoProductDeleteSuccess': function (response) {
        //var entityId = response.MessageList[0];
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoProductDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoProductCategoryDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteProductCategory(entityId, entityName, $('#hdn_formValidity').val(), this.UndoProductCategoryDeleteSuccess, this.UndoProductCategoryDeleteError);
    },

    'UndoProductCategoryDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoProductCategoryDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoSupplierClientDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteSupplierClient(entityId, entityName, $('#hdn_formValidity').val(), this.UndoSupplierClientDeleteSuccess, this.UndoSupplierClientDelete);
    },

    'UndoSupplierClientDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        if (typeof suppliersListGridInstanceName !== 'undefined') { suppliersListGridInstanceName.Refresh(); }
        else if (typeof clientsListGridInstanceName !== 'undefined') { clientsListGridInstanceName.Refresh(); }
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoSupplierClientDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoTaxDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteTax(entityId,
            entityName,
            $('#hdn_formValidity').val(),
            this.UndoTaxDiscountDeleteSuccess,
            this.UndoTaxDiscountDeleteError);
    },

    'UndoDiscountDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteDiscount(entityId,
            entityName,
            $('#hdn_formValidity').val(),
            this.UndoTaxDiscountDeleteSuccess,
            this.UndoTaxDiscountDeleteError);
    },

    'UndoTaxDiscountDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoTaxDiscountDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoShippingProviderDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteShippingProvider(entityId, entityName, $('#hdn_formValidity').val(), this.UndoShippingProviderDeleteSuccess, this.UndoShippingProviderDeleteError);
    },

    'UndoShippingProviderDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoShippingProviderDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoInventoryLocationDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteInventoryLocation(entityId, entityName, $('#hdn_formValidity').val(), this.UndoInventoryLocationDeleteSuccess, this.UndoInventoryLocationDeleteError);
    },

    'UndoInventoryLocationDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoInventoryLocationDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    },

    'UndoDocumentTypeDelete': function (entityId, entityName) {
        Megaventory.WebApplication.EntitiesWebServices.UndoDeleteDocumentType(entityId, entityName, $('#hdn_formValidity').val(), this.UndoDocumentTypeDeleteSuccess, this.UndoDocumentTypeDeleteError);
    },

    'UndoDocumentTypeDeleteSuccess': function (response) {
        var entityName = response.MessageList[1];
        grid.Refresh();
        ShowNotification('s', entityName + ' successfully undeleted');
    },

    'UndoDocumentTypeDeleteError': function (response) {
        ShowNotification(response.Status, htmlEncode(response.MessageList));
    }

}

window.onpopstate = function (event) { //fires when the back/fw button of the browser is pressed
    /* http://diveintohtml5.info/history.html */
    /* Keep the return in each condition, because the pushState changes (for example in ClickNavBar) and so, it may go into multiple if-elseif */
    if (event.state !== null) {
        DashboardUI.xButtonOnBookmarkPopUp('global');
        if (event.state.split('*')[0] === 'dashboards') {
            ClickMenuOption('#' + event.state.split('*')[1], false); return;
        } else if (event.state.split('*')[0] === 'reporttype') {
            ClickMenuElementReport('#' + event.state.split('*')[1], false); return;
        } else if (event.state.split('*')[0] === 'navBar') {
            if (event.state.split('*')[1] === 'dataInfo') { return; }
            ClickNavBar(event.state.split('*')[1], event.state.split('*')[2], event.state.split('*')[3], false); return;
        } else if (event.state.split('*')[0] === 'orphanElem') {
            ClickOrphanElement(event.state.split('*')[1], '#' + event.state.split('*')[2], event.state.split('*')[3], false); return;
        } else if (event.state.split('*')[0] === 'grid') {
            LoadGrid(event.state.split('*')[1], event.state.split('*')[2], event.state.split('*')[3], event.state.split('*')[4], false); return;
        } else if (event.state.split('*')[0] === 'document') {
            LoadDocument(event.state.split('*')[1], event.state.split('*')[2], event.state.split('*')[3], event.state.split('*')[4], false, event.state.split('*')[5]); return;
        } else if (event.state.split('*')[0] === 'report') {
            LoadReport(event.state.split('*')[1], event.state.split('*')[2], event.state.split('*')[3], false); return;
        } else if (event.state.split('*')[0] === 'inventoryTaking') {
            LoadInventoryTaking(event.state.split('*')[1], false); return;
        } else if (event.state.split('*')[0] === 'inventoryTrace') {
            LoadInventoryOrStockTrace('inventoryTrace', event.state.split('*')[1], event.state.split('*')[2], false); return;
        } else if (event.state.split('*')[0] === 'batchNumbersTrace') {
            LoadInventoryOrStockTrace('batchNumbersTrace', event.state.split('*')[1], event.state.split('*')[2], false); return;
        } else if (event.state.split('*')[0] === 'costTrace') {
            LoadInventoryOrStockTrace('costTrace', event.state.split('*')[1], event.state.split('*')[2], false); return;
        } else if (event.state === 'import&id=9') {
            LoadImportDocuments(false); return;
        } else if (event.state.split('*')[0] === 'quickbookslogs') {
            LoadIntegrationLogs(event.state.split('*')[1], 'quickbookslogs', false); return;
        } else if (event.state.split('*')[0] === 'shopifylogs') {
            LoadIntegrationLogs(event.state.split('*')[1], 'shopifylogs', false); return;
        } else if (event.state.split('*')[0] === 'integrationsElem') {
            ClickIntegrationsElement(event.state.split('*')[1], event.state.split('*')[2], event.state.split('*')[3], false); return;
        }
    }
};

$(window).off('resize').on('resize', function () {

    if (window.innerWidth < 750) { mobile = true; tablet = false; desktop = false; }
    else if (window.innerWidth < 1120) { tablet = true; mobile = false; desktop = false; }
    else { desktop = true; mobile = false; tablet = false; }

    $('.inmplayer-panel-body').css('cssText', 'max-height:' + ($('.inmplayer-panel').height() - $('.inmplayer-panel-header').outerHeight() - $('.inmplayer-panel-search').outerHeight() * 1) + 'px !important;')

    /* move the autocomplete to the search position*/

    if ($('#textResultsElem').is(':visible')) {

        $('#ProductSearchPopUp').css('left', 'calc( 50% - ' + $('#ProductSearchPopUp').width() / 2 + 'px');

        /* This repositions itself in the dashboard control when the window width changes.*/
        if (window.innerWidth < 700) {

            $('#textResultsElem').width(150);

            $('#textResultsElem').position({ my: 'right top', at: 'right+0 bottom+3', of: '#autocompletePlaceholder', collision: 'none' })

        } else {

            $('#textResultsElem').width(window.innerWidth / 2.5);

            $('#textResultsElem').position({ my: 'right top', at: 'right+0 bottom+3', of: '#autocompletePlaceholder', collision: 'none' })

        }

        $('#textResultsElem').css('max-height', window.innerHeight / 1.5);

        $('#ui-customautocompleteClosingElem').position({ my: 'right top', at: 'right-25 top+6', of: '#textResultsElem', collision: 'none' })

        if (window.innerWidth < 700) {

            $('#ui-customautocompleteLoadingDiv').css('width', $('#textResultsElem').innerWidth()).position({ my: 'left bottom', at: 'left+2 bottom-2', of: '#textResultsElem', collision: 'none' });

            $('#ui-customautocompleteLoadingInnerDiv').css('width', $('#ui-customautocompleteLoadingDiv').width()).position({ my: 'left top', at: 'left+20 top-120', of: '#ui-customautocompleteLoadingDiv', collision: 'none' });

        } else {

            $('#ui-customautocompleteLoadingDiv').css('width', $('#textResultsElem').innerWidth()).position({ my: 'left bottom', at: 'left+2 bottom-2', of: '#textResultsElem', collision: 'none' });

            $('#ui-customautocompleteLoadingInnerDiv').css('width', $('#ui-customautocompleteLoadingDiv').width()).position({ my: 'left top', at: 'left+200 top-120', of: '#ui-customautocompleteLoadingDiv', collision: 'none' });

        }

    }

    if ($('#mobileSearchButton').css('display') != 'none') {

        closeSearchHeader();

    }

    if ($('#menu').hasClass('showLeftMenu') && ($('#ProductSearchPopUp').css('display') != 'none' || $('#textResultsElem').css('display') != 'none')) {

        $(document).scrollLeft(1);
        //We check if there is a horizontal scrollbar so that we can understand 
        //if some grid resized the window and not the user. Also we check if the window is 
        //small which means the menu should close.
        if ($(document).scrollLeft() == 0 || window.innerWidth < 1200) {

            hideLeftMenu();

        }
    }

});




/* djs
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------
*/

var DocumentChoices = {
    'Dummy': 0,
    'GoodsOutbound': 10,
    'GoodsOutboundAndSalesInvoice': 20,
    'GoodsInbound': 30,
    'GoodsInboundAndPurchaseInvoice': 40,
    'GoodsTransfer': 50,
    'SalesOrder': 60,
    'PurchaseOrder': 70,
    'SalesQuote': 80,
    'WorkOrder': 90,
    'AllButOrders': 100,
    'AllOrders': 110,
    'GoodsReturnFromClient': 120,
    'SalesInvoice': 130,
    'GoodsReturnToSupplier': 140,
    'PurchaseInvoice': 150,
    'AllTransactions': 160,
    'FinishedGoodsReceipt': 170,
    'AllInventoryAdjustments': 180,
    'InventoryAdjustmentsMinus': 190,
    'InventoryAdjustmentsPlus': 200,
    'AllDocuments': 210,
    'AllPurchaseDocuments': 220,
    'AllSalesDocuments': 230,
    'GoodsReturnFromClientNoCredit': 240,
    'GoodsReturnFromClientWithCredit': 250,
    'GoodsReturnToSupplierNoCredit': 260,
    'GoodsReturnToSupplierWithCredit': 270,
    'InventoryTake': 290,
    'HandlingInvoice': 300,
};

var DocumentStages = {  // This shoould match with the server side definition of Document Stages as defined in BusinessProcesses.DocumentsRelated.vb
    'Pending': 10,
    'ApprovalInProcess': 20,
    'Accepted': 30,

    //'Picked' : 35,    For Future
    //'Packed' : 36,    For Future

    'PartiallyShipped': 40,
    'PartiallyShippedInvoiced': 41,
    'FullyShipped': 42,

    'PartiallyReceived': 43,
    'PartiallyReceivedInvoiced': 44,
    'FullyReceived': 45,

    'PartiallyInvoiced': 46,
    'FullyInvoiced': 47,

    //'Partially Paid : 48,    For Future
    //'Fully Paid : 49,        For Future

    'Completed': 50,
    'Cancelled': 99
};

var DocStatusMsgs = {
    'Draft': 'Draft',
    'AppInProcess': 'Approval in process',
    'Confirmed': 'Confirmed',
    'PShipped': 'Partially Shipped',
    'PReceived': 'Partially Received',
    'PInvoiced': 'Partially Invoiced',
    'PSPI': 'Partially Shipped/Invoiced',
    'PRPI': 'Partially Received/Invoiced',
    'FShipped': 'Fully Shipped',
    'FReceived': 'Fully Received',
    'FInvoiced': 'Fully Invoiced',
    'Completed': 'Completed',
    'Cancelled': 'Cancelled'
};

var RedirectParam = '';

var IgnorePendingDocChanges; // this will be defined as a function to check if their are any pending unsaved changes in the document.

/* Each document will create an object of this type which will include the basic document header functions for all documents */
var MVDocumentJSObject = function (o) {

    var that = this;

    /* Document Number related */
    this.DocNumTxtBoxID = '#' + o.FObj.HFldIDs.DocNoTB;
    this.DocNumLabelID = '#' + o.FObj.HFldIDs.DocNoLabel;
    this.DocNumLabelDropDown = '#img_DocumentNoLabelDD';
    this.DocRefNumID = '#' + o.FObj.HFldIDs.DocRefNo;
    this.DocRefAppID = '#' + o.FObj.HFldIDs.DocRefApp;
    this.DocChoicesElemID = o.FObj.HFldIDs.DocTChoiceTblID === '' ? '' : '#' + o.FObj.HFldIDs.DocTChoiceTblID;
    this.DocHdrInvLocLabelID = '#' + o.FObj.HFldIDs.DocInvLocLbl;

    /* Elements for populating Entity selection details */
    this.EntityAuCmTxtID = '#' + o.FObj.HFldIDs.Entity;
    this.EntityLabelID = '#' + o.FObj.HFldIDs.EntityLabel;
    this.BillAddressTxtBoxID = '#' + o.FObj.HFldIDs.BillingAddress;
    this.BatchNumGIGOTxtBoxID = '#BatchNumbersTextBox';
    this.ShipAddressTxtBoxID = '#' + o.FObj.HFldIDs.ShippingAddress;
    this.ShipAddressListElID = '#' + o.FObj.HFldIDs.ShipAddressListElem;
    this.ShowShipInfoElID = '#' + o.FObj.HFldIDs.ShowShipInfoElem;
    this.ContactTxtBoxID = '#' + o.FObj.HFldIDs.Contact;
    this.EntityInfoLoaderImgID = '#' + o.FObj.HFldIDs.EntityInfoLoaderImg;
    this.ShowContactImgID = '#' + o.FObj.HFldIDs.ShowContactImg;

    /* Other Document Header fields */
    this.DocDateTxtBoxID = '#' + o.FObj.HFldIDs.DocDate;
    this.DocDateLblID = '#' + o.FObj.HFldIDs.DocDateLabel;
    this.CommentsTxtBoxID = '#' + o.FObj.HFldIDs.DocComments;
    this.DrpTerms = o.FObj.HFldIDs.PaymentTerms;
    this.CDate1TxtBoxID = '#' + o.FObj.HFldIDs.CustomDate1;
    this.CDate2TxtBoxID = '#' + o.FObj.HFldIDs.CustomDate2;
    this.TagsTxtBoxID = '#' + o.FObj.HFldIDs.DocTags;
    this.CustomTField1TxtBoxID = '#' + o.FObj.HFldIDs.CTextField;
    this.CustomFlagsHdnID = '#' + o.FObj.HFldIDs.CustomFlagsHdn;

    /* Label elements for closed state */
    this.ContactLblID = '#' + o.FObj.HFldIDs.DocHeaderContact;
    this.CustomDate1LblID = '#' + o.FObj.HFldIDs.DocHeaderCustomDate1;
    this.CustomDate2LblID = '#' + o.FObj.HFldIDs.DocHeaderCustomDate2;
    this.ExpectedDateEarliestForNonEditingLblID = '#' + o.FObj.HFldIDs.DocHeaderExpectedDateEarliestForNonEditing;
    this.ExpectedDateLatestForNonEditingLblID = '#' + o.FObj.HFldIDs.DocHeaderExpectedDateLatestForNonEditing;
    this.lbl_DocHeaderTermsID = '#' + o.FObj.HFldIDs.lbl_DocHeaderTerms;
    this.drp_DocHeaderTermsID = '#' + o.FObj.HFldIDs.drp_DocHeaderTermsFrontEnd;

    /* Shipping/tracking related */
    this.DrpShippingProviders = o.FObj.OprRtdIDs.DocCommonOperations_DrpShippingProviders;
    this.TxtTrackingID = '#' + o.FObj.OprRtdIDs.DocCommonOperations_TxtTrackingID;

    /* Tabs */
    this.TabsDivID = '#' + o.FObj.HFldIDs.TabsDiv;
    this.FilesTabID = '#' + o.FObj.HFldIDs.FilesTab;

    /* Work Flow related fields */
    this.DraftWFAreaID = '#' + o.FObj.HFldIDs.DraftWFArea;
    this.ConfirmWFAreaID = '#' + o.FObj.HFldIDs.ConfirmWFArea;
    this.CloseWFAreaID = '#' + o.FObj.HFldIDs.ClsWFArea;
    this.DocStatusLabelID = '#' + o.FObj.HFldIDs.StatusLabel;

    /* Operation Pop up related fields */
    this.CommonOprDivID = '#' + o.FObj.OprRtdIDs.CommonOprDiv;
    this.DrpInvLocations = o.FObj.OprRtdIDs.DrpInvLocations;
    this.DrpDocHeaderTermsInPopUp = o.FObj.OprRtdIDs.DrpDocHeaderTermsInPopUp;
    this.OprCommentsTxtBoxID = o.FObj.OprRtdIDs.OprComments;
    this.chkReOpenOrCloseRelatedDocs = o.FObj.OprRtdIDs.chkReOpenOrCloseRelatedDocs;
    this.CommonOprOKBtn = o.FObj.OprRtdIDs.CommonOprOKBtn;
    this.AftConfSpecifcFunc = o.AftConfSpecifcFunc;

    /* Currency related */
    this.DrpCurrencies = o.FObj.HFldIDs.CurrencyDrpDown;
    this.CurrencyLabelID = '#' + o.FObj.HFldIDs.CurrencyLabel;
    this.UnitPriceCurrencyLabelID = o.FObj.GFIDs.UnitPriceCurrencyLabelID;
    this.TotalAmountCurrencyLabelID = o.FObj.GFIDs.TotalAmountCurrencyLabelID;
    this.FooterCurrencySymbolLabelID = o.FObj.GFIDs.FooterCurrencySymbolLabelID;

    /* Document specific info */
    this.DocumentEntityName = this.GetEntityAutoCompTxtVal();
    this.DocumentEntityID = $(this.EntityAuCmTxtID).data('id');    
    this.DocumentContactName = this.GetContactTxtBoxVal();
    this.DocInvLocName = o.FObj.DocRelated.InvLocName;

    /* Notification Area related */
    this.NotificationDivID = '#' + o.FObj.OprRtdIDs.NotificationDIV;
    this.NotificationTextElemID = '#' + o.FObj.OprRtdIDs.NotificationTextElem;
    this.NotificationHideElemID = '#' + o.FObj.OprRtdIDs.NotificationHideElem;

    /* More Options related */
    this.MoreOptElemID = '#' + o.FObj.HFldIDs.MoreOptElem;
    this.ReOpenDocPerm = o.FObj.OprRtdIDs.ReOpenDocPerm;

    /* Grid related */
    this.Grid = typeof o.FObj.GFIDs.GridID === 'undefined' ? null : o.FObj.GFIDs.GridID;
    this.GridEditorObj = typeof o.GridEditorObj === 'undefined' ? null : o.GridEditorObj;
    if (this.Grid != null) { this.MGTable = $(this.Grid.GetMainElement()).find('table.dxgvTable_MV'); }

    /* Operation buttons related */
    this.SaveBtn = o.FObj.OprRtdIDs.SaveBtn;
    this.NewBtn = o.FObj.OprRtdIDs.NewBtn;
    this.ListBtn = o.FObj.OprRtdIDs.ListBtn;
    this.DocEmailWrapper = o.FObj.OprRtdIDs.DocEmailWrapper;
    this.DocPrintWrapper = o.FObj.OprRtdIDs.DocPrintWrapper;
    this.PrintBtn = o.FObj.OprRtdIDs.PrintBtn;
    this.PrintOpBtn = o.FObj.OprRtdIDs.PrintOpBtn;
    this.EmailBtn = o.FObj.OprRtdIDs.EmailBtn;
    this.EmailOpBtn = o.FObj.OprRtdIDs.EmailOpBtn;
    this.ConfirmBtn = o.FObj.OprRtdIDs.AcceptBtn;
    this.MoreBtn = o.FObj.OprRtdIDs.MoreBtn;
    this.CloseBtn = o.FObj.OprRtdIDs.CloseBtn;
    this.ShipBtn = o.FObj.OprRtdIDs.ShipBtn;
    this.ReceiveBtn = o.FObj.OprRtdIDs.ReceiveBtn;
    this.InvBtn = o.FObj.OprRtdIDs.InvBtn;
    this.CommonOprCancelBtn = o.FObj.OprRtdIDs.CommonOprCancelBtn;

    /* Print Obj related */
    this.PrintObj = o.FObj.OprRtdIDs.PrintObj;

    /* Related Documents Object */
    this.RltdDocObj = o.FObj.OprRtdIDs.RltdDocObj;

    /* Document history Object */
    this.DocHistObj = o.FObj.OprRtdIDs.DocHistObj;

    /* Text Strings */
    this.TextStrings = o.TextStrings;
    DocStatusMsgs.Draft = o.StatusMsgs.Draft;
    DocStatusMsgs.AppInProcess = o.StatusMsgs.AppInProcess;
    DocStatusMsgs.Confirmed = o.StatusMsgs.Confirmed;
    DocStatusMsgs.PShipped = o.StatusMsgs.PShipped;
    DocStatusMsgs.PReceived = o.StatusMsgs.PReceived;
    DocStatusMsgs.PInvoiced = o.StatusMsgs.PInvoiced;
    DocStatusMsgs.PSPI = o.StatusMsgs.PSPI;
    DocStatusMsgs.PRPI = o.StatusMsgs.PRPI;
    DocStatusMsgs.FShipped = o.StatusMsgs.FShipped;
    DocStatusMsgs.FReceived = o.StatusMsgs.FReceived;
    DocStatusMsgs.FInvoiced = o.StatusMsgs.FInvoiced;
    DocStatusMsgs.Completed = o.StatusMsgs.Completed;
    DocStatusMsgs.Cancelled = o.StatusMsgs.Cancelled;

    /* Showing error messages */
    this.ErrorPanelDivID = '#' + o.FObj.GFIDs.ErrPanelDiv;
    this.ErrorMessageDivID = '#' + $(this.ErrorPanelDivID).find('div:first').attr('id');

    /* Document Read Only*/
    this.DocReadOnly = o.FObj.DocRelated.DocReadOnly;

    IgnorePendingDocChanges = function () {

        if (DocLayoutJSObj.InDocument.DocumentHeaderUpdated == true || DocLayoutJSObj.InDocument.DocumentRowsUpdated == true) {

            return confirm(that.TextStrings.Warnings.PendingDocChanges);

        }

        return true;

    };

    this.ModalBackDivID = '#ModalDIV';

    this.WSObj = o.WSObj;

    /* Set the default error handler for MS-Ajax object */
    this.WSObj.set_defaultFailedCallback(that.WSErrorHandler);

    /* Add handlders to the operation buttons */
    if (this.SaveBtn != null && this.DocReadOnly != 1) { this.SaveBtn.Click.AddHandler(function (s, e) { that.SaveDocument(0); }); }

    if (this.NewBtn != null) { this.NewBtn.onclick = function () { that.NewDocument(); } }

    if (this.ListBtn != null) { this.ListBtn.onclick = function (s, e) { that.DocumentList(); } }
    
    if (this.ConfirmBtn != null && this.DocReadOnly != 1) {

        this.ConfirmBtn.Click.AddHandler(function (s, e) {

            that.CommonOperations(that.CommonOprs.Accepted);

        });

    }    

    if (this.CloseBtn != null && this.DocReadOnly != 1) {

        this.CloseBtn.Click.AddHandler(function (s, e) {

            that.CommonOperations(that.CommonOprs.Closed);

        });

    }

    if (this.MoreBtn != null) {

        this.MoreBtn.Click.AddHandler(function (s, e) {

            if (that.MoreOptTrkClk === 0) {

                that.ShowMoreOpts(that.MoreBtn.GetMainElement());

            }
            else {

                that.HideMoreOpts();

            }

        });

        this.MoreBtn.LostFocus.AddHandler(function (s, e) { if (that.MoreOptTrkClk <= 0) { that.HideMoreOpts(); } });
    }

    if (this.CommonOprOKBtn != null) { this.CommonOprOKBtn.Click.AddHandler(function (s, e) { that.CommonOprOKBtnClick(0); }); }

    if (this.CommonOprCancelBtn != null) { this.CommonOprCancelBtn.Click.AddHandler(function (s, e) { that.HideCommonOprPanel(); }); }

    $(this.NotificationHideElemID).off('click').on('click', function (e) { that.HideNotification(); });

    /* Here we add the change and other events to header fields */
    this.SetEntityImgAsAddEntity();

    $(this.EntityAuCmTxtID).off('input').on('input', function (e) {

        that.HideErrorMessage();
        
        var currentEntityName = that.GetEntityAutoCompTxtVal();
        
        if (currentEntityName != that.DocumentEntityName) {
            
            if (that.SaveBtn) that.SaveBtn.SetEnabled(false);

            if (that.ConfirmBtn) that.ConfirmBtn.SetEnabled(false);

        } else {
            
            if (that.SaveBtn) that.SaveBtn.SetEnabled(true);

            if (that.ConfirmBtn) that.ConfirmBtn.SetEnabled(true);

        }

    });

    $(this.BatchNumGIGOTxtBoxID).off('blur').on('blur', function (e) {

        var currentBatchNumberTxt = $(this).val();

        var currentBatchId = $(this).data('id');

        if (currentBatchNumberTxt == '' || currentBatchNumberTxt == null) {

            $('[id$=txt_ExpiryDate]').val('');

        } else {

            var thisExpiryInput = $('[id$=txt_ExpiryDate]');
            
            that.GetBatchNumberDetails(currentBatchId, thisExpiryInput);
        }

    });

    $(this.EntityAuCmTxtID).off('blur').on('blur', function (e) {

        var currentEntityName = that.GetEntityAutoCompTxtVal();

        var currentEntityId = $(that.EntityAuCmTxtID).data('id');

        if (currentEntityId == undefined || currentEntityId == '') { currentEntityId = -1;}

        if (currentEntityName === '') {

            $("#tbl_ShipToAddressesEntity").remove();

            that.CloseAddListIfEmpty();
            
        }
                
        if (currentEntityName != that.DocumentEntityName || currentEntityId != that.DocumentEntityID) {

            that.DocumentEntityName = currentEntityName;

            that.DocumentEntityID = currentEntityId;

            that.GetEntityDetails(that.GetEntityAutoCompTxtVal(), true, parseInt(currentEntityId,10));

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.EntityUpdated = true;

        } else {

            var tempEnable = setTimeout(function () {

                if (that.SaveBtn) that.SaveBtn.SetEnabled(true);

                if (that.ConfirmBtn) that.ConfirmBtn.SetEnabled(true);

            }, 500);

        }

    });

    $(this.ContactTxtBoxID).off('input').on('input', function (e) {
      
        that.HideErrorMessage();
             
    }); 

    $(this.ContactTxtBoxID).off('blur').on('blur', function (e) {
        
        var currentContactName = that.GetContactTxtBoxVal();

        if (currentContactName === '') {

            $('#tbl_ShipToAddressesContact').remove();

            that.CloseAddListIfEmpty();

            return;

        }

        if (currentContactName != '') { that.GetContactDetails($(this).data('id')); }

        if (currentContactName != that.DocumentContactName) {

            that.DocumentContactName = currentContactName;

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.ContactPersonUpdated = true;

        }
                
    });

  

    $(this.ContactTxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.ContactPersonUpdated = true; });

    $(this.BillAddressTxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.BillingAddressUpdated = true; });

    $(this.ShipAddressTxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.ShippingAddressUpdated = true; });

    $(this.CommentsTxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.CommentsUpdated = true; });

    $(this.TagsTxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.TagsUpdated = true; });

    $(this.CDate1TxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.CustomDate1Updated = true; });

    $(this.CDate2TxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.CustomDate2Updated = true; });

    $(this.CustomTField1TxtBoxID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.CustomTField1Updated = true; });

    $(this.DocRefNumID).off('change').on('change', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.DocRefNumIDUpdated = true; });

    $('#td_CustomFlagsDocLayout').find('input[type=checkbox]').off('click').on('click', function (e) { DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; DocLayoutJSObj.InDocument.CustomFlagsUpdated = true; });

    if (this.DrpCurrencies != null) {

        if (typeof this.Grid.cp_CurrencyCodeAndSymbolAtPageLoad != 'undefined') { this.UpdateNewCurrencyLabels(this.Grid.cp_CurrencyCodeAndSymbolAtPageLoad); }

        this.DrpCurrencies.SelectedIndexChanged.AddHandler(function (s, e) {

            that.UpdateNewCurrencyLabels(s.GetSelectedItem().value);

            DocLayoutJSObj.CDH.Currency = s.GetSelectedItem().value;

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.CurrencyUpdated = true;

        });

    }

    if (this.DrpTerms != null) {

        this.DrpTerms.SelectedIndexChanged.AddHandler(function (s, e) {

            DocLayoutJSObj.CDH.Terms = s.GetSelectedItem().value;

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.TermsUpdated = true;

        });

    }

    /* Add handler to the Show Contacts Image */
    $(this.ShowContactImgID).on('click', function (e) { that.ShowContacts(); });

    /* Assign values to the Common Header variable */
    DocLayoutJSObj.CDH.ID = o.FObj.DocRelated.ID;

    DocLayoutJSObj.CDH.TypeID = o.FObj.DocRelated.TypeID;

    DocLayoutJSObj.CDH.EntityID = o.FObj.DocRelated.EntityID;

    DocLayoutJSObj.CDH.DocumentChoice = o.DocumentChoice;

    if (this.DrpCurrencies != null && this.DrpCurrencies.GetSelectedItem() != null) DocLayoutJSObj.CDH.Currency = this.DrpCurrencies.GetSelectedItem().value;

    if (this.DrpTerms != null && this.DrpTerms.GetSelectedItem() != null) DocLayoutJSObj.CDH.PaymentTerms = this.DrpTerms.GetSelectedItem().value;

    DocLayoutJSObj.CDH.FetchProductPricing = o.FObj.DocRelated.FetchProductPricing;

    DocLayoutJSObj.CDH.IssueDate = $(this.DocDateTxtBoxID).val();

    DocLayoutJSObj.CDH.ParentDocumentID = o.FObj.DocRelated.ParentID;

    DocLayoutJSObj.CDH.TypeSupRestriction = o.FObj.DocRelated.DTypeSupRstrctn;

    DocLayoutJSObj.CDH.ValidityID = o.FObj.DocRelated.ValidityID;

    DocLayoutJSObj.CDH.UsesExpectedDates = o.FObj.DocRelated.UsesExpectedDates;

    this.ExpectedDateEarliest = '#' + o.FObj.HFldIDs.ExpectedDateEarliest;

    this.ExpectedDateLatest = '#' + o.FObj.HFldIDs.ExpectedDateLatest;

    $(this.ExpectedDateEarliest).off('change').on('change', function (event) {

        DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

        DocLayoutJSObj.InDocument.ExpectedDateEarliestUpdated = true;

    });

    $(this.ExpectedDateLatest).off('change').on('change', function (event) {

        DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

        DocLayoutJSObj.InDocument.ExpectedDateLatestUpdated = true;

    });

    if (o.FObj.DocRelated.DTypeNumbering === 'Manual') {

        DocLayoutJSObj.CDH.TypeNumberingIsManual = true;

    }

    if (DocLayoutJSObj.CDH.ID < 0) {

        DocLayoutJSObj.CDH.InvLocID = 0;

        DocLayoutJSObj.CDH.Status = DocumentStages.Pending;

    }
    else {

        DocLayoutJSObj.CDH.InvLocID = o.FObj.DocRelated.InvLocID;

        DocLayoutJSObj.CDH.Status = o.FObj.DocRelated.Status;

    }

    $('#lbl_revealEditableDate').off('click').on('click', function () {

        that.ShowEditableDocumentDate();

    });

/* Specific initializations based on Document choice */
    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote) {

        this.AddDocTypeChoice();

    }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

        this.AddDocTypeChoice();

        this.ShipWFAreaID = '#' + o.FObj.HFldIDs.ShipWFArea;

        this.InvWFAreaID = '#' + o.FObj.HFldIDs.InvWFArea;

    }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

        this.AddDocTypeChoice();

        this.RcvWFAreaID = '#' + o.FObj.HFldIDs.RcvWFArea;

        this.InvWFAreaID = '#' + o.FObj.HFldIDs.InvWFArea;

    }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer) {

        this.AddDocTypeChoice();

        this.RcvWFAreaID = '#' + o.FObj.HFldIDs.RcvWFArea;

    }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit) {

        this.AddDocTypeChoice();

    }

    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) {
        if (this.DrpInvLocations != null) { this.DrpInvLocations.SelectedIndexChanged.AddHandler(function (s, e) { that.DoAvlblQtyChk(s.GetSelectedItem().value); }); }
    }

    /* Assign handlers to More Option DIV and common activities like Copy/Notes */
    $(this.MoreOptElemID).on({
        mouseenter: function (e) { that.MoreOptTrkClk = 1; },
        mouseleave: function (e) { that.MoreOptTrkClk = 0; }
    });

    this.CommonOprHdElemID = '#' + $(this.CommonOprDivID).find('div:eq(0)').find('span:eq(0)').attr('id');

    this.CommonOprMsgElemID = '#' + $(this.CommonOprDivID).find('span:eq(1)').attr('id');

    this.CommonOprCancelImgID = '#' + $(this.CommonOprDivID).find('div:eq(0)').find('i:eq(0)').attr('id');

    $(this.CommonOprCancelImgID).off('click').on('click', function (s, e) {

        that.HideCommonOprPanel();

    });

    /* Enable JQuery tabs and assign handlers for each tab */
    $(this.TabsDivID).tabs();

    $(this.TabsDivID).on('tabsactivate', function (event, ui) {
        
        if (ui.newTab.data('documenttabid') == 'uploaded_files') {

            if (DocLayoutJSObj.CDH.ID > 0) {

                that.SendJQAjaxRequest('/inventory/WebServices/MegaventoryWebServices.asmx/GetDocFiles',
                    {
                        'DocID': DocLayoutJSObj.CDH.ID,
                        'DocChoice': DocLayoutJSObj.CDH.DocumentChoice
                    },
                    function (response) { that.OnGetDocFilesSuccess(response) });
            }

        } else if (ui.newTab.data('documenttabid') == 'related_docs') {

            that.RltdDocObj.Show(DocLayoutJSObj.CDH.ID, DocLayoutJSObj.CDH.ParentDocumentID, '');

        } else if (ui.newTab.data('documenttabid') == 'doc_history') {

            that.DocHistObj.Show(DocLayoutJSObj.CDH.ID,
                DocLayoutJSObj.CDH.DocumentChoice,
                DocLayoutJSObj.CDH.ValidityID);

        } else if (ui.newTab.data('documenttabid') == 'shipment_tracking') {

        } else if (ui.newTab.data('documenttabid') == 'serial_numbers') {

            docSNosObj.Show(DocLayoutJSObj.CDH.ID, "");

        } else if (ui.newTab.data('documenttabid') == 'batch_numbers') {

            docBNosObj.Show(DocLayoutJSObj.CDH.ID, "");

        } else if (ui.newTab.data('documenttabid') == 'costs_profits') {

            docCostingObj.Show(DocLayoutJSObj.CDH.ID, "");

        } else if (ui.newTab.data('documenttabid') == 'handling_costs_overhead') {

            docHandlingCostsObj.Show(DocLayoutJSObj.CDH.ID, "");

        }

    });

    this.OnDocLoadUpdateClientWF();

    // create the scroll event for showing the heading & buttons div on top
    this.InitTop = $(this.HdDivID).offset().top;

    $(this.HdDivID).parent('div').css('height', $(this.HdDivID).outerHeight(true));

    $(window).off('scroll').on('scroll', function (e) {

        if (!(window.matchMedia("(max-width: 70em)").matches)) {//don't do nothing while on mobile

            var wTop = $(this).scrollTop() + 70 + 30;

            if (wTop >= that.InitTop && that.HdDivFxd === false) {

                that.HdDivFxd = true; $(that.HdDivID).addClass('mdocScrl');

                //fix document header position according to menu
                if ($('#menu').width() > 0) {
                    $('#div_DocumentHeading').addClass('pushHeader');
                    $('.pushHeader').css('left', $('#menu').width());
                    $('.pushHeader').css('width', 'calc(100% - ' + $('#menu').width() + 'px)');

                } else {
                    $('.pushHeader').css('left', '');
                    $('.pushHeader').css('width', '');
                    $('#div_DocumentHeading').removeClass('pushHeader');

                }

            }
            else if (wTop < that.InitTop && that.HdDivFxd === true) {

                $('.mdocScrl').css('width', '');

                $('.mdocScrl').css('left', '');

                that.HdDivFxd = false; $(that.HdDivID).removeClass('mdocScrl');

                if ($('#menu').width() > 0) {
                    $('.pushHeader').css('left', '');
                    $('.pushHeader').css('width', '');
                    $('#div_DocumentHeading').removeClass('pushHeader');
                }
                else {
                    $('.pushHeader').css('left', '');
                    $('.pushHeader').css('width', '');
                    $('#div_DocumentHeading').removeClass('pushHeader');


                }
            }

            //if dropdown menu is open while we scroll we need to place it under the label
            if (that.DocChoicesElemID != '' && $(that.DocChoicesElemID).css('display') !== 'none' && $(that.DocChoicesElemID).css('display') !== undefined) {

                $(that.DocChoicesElemID).position({
                    'my': 'left top',
                    'at': 'left bottom',
                    'of': $('#' + o.FObj.HFldIDs.DocNoLabel)
                });

            }
            
            if (o.FObj.HFldIDs.MoreOptElem != '' &&
                o.FObj.HFldIDs.MoreOptElem != null &&
                o.FObj.OprRtdIDs.MoreBtn != null &&
                $('#' + o.FObj.HFldIDs.MoreOptElem).css('display') !== 'none') {

                $('#' + o.FObj.HFldIDs.MoreOptElem).position({
                    'my': 'right top-1',
                    'at': 'right bottom',
                    'of': o.FObj.OprRtdIDs.MoreBtn.GetMainElement()
                });

            }

            if ($('.P') != undefined && $('.P').css('display') !== 'none') {

                $('.P').position({ my: "right top", at: "right bottom", of: o.FObj.OprRtdIDs.PrintOpBtn });

            }

            if ($('.E') != undefined && $('.E').css('display') !== 'none') {

                $('.E').position({ my: "right top", at: "right bottom", of: o.FObj.OprRtdIDs.EmailOpBtn });

            }


        } else {
            that.HdDivFxd = true; $(that.HdDivID).removeClass('mdocScrl');
            if ($('#menu').width() > 0) {
                $('.pushHeader').css('left', '');
                $('.pushHeader').css('width', '');
                $('#div_DocumentHeading').removeClass('pushHeader');
            }
            else {
                $('.pushHeader').css('left', '');
                $('.pushHeader').css('width', '');
                $('#div_DocumentHeading').removeClass('pushHeader');


            }

        }

    });

    DocLayoutJSObj.CDH.ReferenceNumber = $(this.DocRefNumID).val();

    DocLayoutJSObj.CDH.ReferenceApplication = $(this.DocRefAppID).html();

};

MVDocumentJSObject.prototype = {

    /* Document Number related */
    DocNumTxtBoxID: '',
    DocNumLabelID: '',
    DocNumLabelDropDown: '',
    DocRefNumID: '',
    DocRefAppID: '',
    DocChoicesElemID: '',
    DocChoicesTrkClk: 1,
    DocChoicesFOTxtElem: '',
    DocHdrInvLocLabelID: '',

    /* Elements for populating Entity selection details */
    DrpEntities: null,
    EntityAuCmTxtID: '',
    EntityLabelID: '',
    BillAddressTxtBoxID: '',
    ShipAddressTxtBoxID: '',
    ShipAddressListElID: '',
    ShowShipInfoElID: '',
    ContactTxtBoxID: '',
    EntityInfoLoaderImgID: '',
    ShowContactImgID: '',

    /* Label Elements for completed state */
    ContactLblID: '',
    CustomDate1LblID: '',
    CustomDate2LblID: '',
    ExpectedDateEarliestForNonEditingLblID: '',
    ExpectedDateLatestForNonEditingLblID: '',
    lbl_DocHeaderTermsID: '',
    drp_DocHeaderTermsID: '',

    /*shipment/Tracking related */
    DrpShippingProviders: null,
    TxtTrackingID: null,

    /* Other Document Header fields */
    DocDateTxtBoxID: '',
    DocDateLblID: '',
    CommentsTxtBoxID: '',
    DrpTerms: null,
    CDate1TxtBoxID: '',
    CDate2TxtBoxID: '',
    ExpectedDateEarliest: '',
    ExpectedDateLatest: '',
    TagsTxtBoxID: '',
    CustomTField1TxtBoxID: '',
    CustomFlagsHdnID: '',

    /* Tabs */
    TabsDivID: '',
    FilesTabID: '',

    /* Work Flow related fields */
    DraftWFAreaID: '',
    ConfirmWFAreaID: '',
    CloseWFAreaID: '',
    ShipWFAreaID: '',
    RcvWFAreaID: '',
    InvWFAreaID: '',
    DocStatusLabelID: '',
    retryLimitForWebServices: 10,

    /* Common Operations Pop up related */
    CommonOprDivID: '',
    CommonOprCancelImgID: '',
    CommonOprHdElemID: '',
    CommonOprMsgElemID: '',
    DrpInvLocations: null,
    OprCommentsTxtBoxID: null,
    chkReOpenOrCloseRelatedDocs: false,
    CommonOprOKBtn: null,
    CommonOprNum: 0,
    CommonOprs: {
        'Created': 1,
        'Accepted': 2,
        'AcceptReverted': 3,
        'SavedAndUpdated': 4,
        'Closed': 5,
        'Cancelled': 6,
        'Deleted': 7,
        'Copied': 8,
        'ProductsPinned': 9,
        'PostComment': 10,
        'ReOpened': 11,
        'IssueHandlingInvoice': 12
    },

    /*The numbers are the order of the tr in the table*/
    CommonOprFields: { 
        'DocumentIssueDate': 0,
        'InvLoc': 1,
        'SODocType': 2,
        'ClsInp': 3,
        'CpyInp': 4,
        'QtyChkArea': 5,
        'ShipingProviders': 6,
        'TrackingID': 7,
        'ReOpenOrCloseDoc': 8,
        'RelatedDocument': 9
    },
    AftConfSpecifcFunc: function (opr) { },

    /* Currency related */
    DrpCurrencies: null,
    CurrencyLabelID: '',
    UnitPriceCurrencyLabelID: '',
    TotalAmountCurrencyLabelID: '',
    FooterCurrencySymbolLabelID: '',

    /* Document specific info */
    DocumentEntityName: '',
    DocumentContactName: '',
    DocumentEntityID: 0,
    DocInvLocName: '',
  
    /* Notification Area related */
    NotificationDivID: '',
    NotificationTextElemID: '',
    NotificationHideElemID: '',
    NotificationTimer: null,

    /* More options related */
    MoreOptElemID: '',
    MoreOptEClass: 'docMOptItemE',
    MoreOptDClass: 'docMOptItemD',
    MoreOpts: {
        'Cancel': 0,
        'Delete': 1,
        'UnConfirm': 2,
        'Copy': 3,
        'Pin': 4,
        'Return': 5,
        'Handling': 6,
        'ReOpen': 7
    },
    MoreOptOprs: {
        'show': 1,
        'hide': 2,
        'enable': 3,
        'disable': 4
    },
    MoreOptTrkClk: 0,

    /* Grid related */
    Grid: null,
    GridEditorObj: null,    //This is the Grid Editor object that will also be created in the Documents, this will be used to check for any edited & unsaved rows
    MGTable: null,  // Main Grid table

    /* Ajax Upload related */
    FUploadObj: null,

    /* Operation buttons related */
    SaveBtn: null,
    NewBtn: null,
    ListBtn: null,
    DocEmailWrapper: null,
    DocPrintWrapper: null,
    PrintBtn: null,
    PrintOpBtn: null,
    EmailBtn: null,
    EmailOpBtn: null,
    ConfirmBtn: null,
    MoreBtn: null,
    ShipBtn: null,
    ReceiveBtn: null,
    InvBtn: null,
    CloseBtn: null,
    CommonOprCancelBtn: null,

    /* Print Obj related */
    PrintObj: null,

    /* Related Documents Object */
    RltdDocObj: null,

    /* Document history Object */
    DocHistObj: null,

    TextStrings: {
        'Notifications': {
            'DocCreated': '',
            'DocSaved': '',
            'DocConfirmed': '',
            'DocUnConfirmed': '',
            'DocCancelled': '',
            'DocDeleted': '',
            'FileUploaded': '',
            'DocClosed': '',
            'DocOpened': '',
            'DocCopied': '',
            'ChldDocCrtd': '',
            'AllisSaved': ''
        },
        'Warnings': {
            'EntityRequired': '',
            'AtleastOneRow': '',
            'PageWillRefreshPinProds': '',
            'NumRequired': '',
            'DateRequired': '',
            'RowNotUpdated': '',
            'InvLocRequired': '',
            'PendingDocChanges': '',
            'SaveBeforePin': '',
            'ProdDoesNotHaveAvail': ''
        },
        'CommonOprMsgs': {
            'DocCrtConfirm': '',
            'ConfirmHd': '',
            'ConfirmMsg': '',
            'UnConfirmHd': '',
            'UnConfirmMsg': '',
            'CancelHd': '',
            'CancelMsg': '',
            'DeleteHd': '',
            'DeleteMsg': '',
            'CloseHd': '',
            'CloseMsg': '',
            'ReOpenHd': '',
            'ReOpenMsg': '',
            'CopyHd': '',
            'CopyMsg': '',
            'DeleteUploadedFile': ''
        }
    },

    /* Showing error messages */
    ErrorPanelDivID: '',

    ErrorMessageDivID: '',

    DocReadOnly: 0,

    /* Effect from Scroll related */
    HdDivID: '#' + 'div_DocumentHeading',

    HdDivFxd: false,

    InitTop: 0,

    /* Modal div background */
    ModalBackDivID: '',

    /* Redirection URL related */
    RedirectParam: '',

    WSObj: null,

    SendJQAjaxRequest: function (url, data, onSuccess) {

        var that = this;

        this.ShowLoading();

        $.ajax({

            'url': url,

            'type': 'GET',

            'data': data,

            'dataType': 'xml',

            'success': function (response, status) {

                that.HideLoading();

                var resultJSON = JSON.parse($('string', response).text());

                if (resultJSON.status == 'S') {

                    onSuccess(resultJSON);

                } else {

                    that.ShowNotification('f', resultJSON.errMsg);

                }

            },

            'error': function (xhr, err) {

                that.HideLoading();

            }

        });

    },

    AddDocTypeChoice: function () {

        var that = this;

        if (DocLayoutJSObj.CDH.ID < 0) {

            this.DocChoicesFOTxtElem = $(this.DocChoicesElemID).children('tbody').first('td').find('input[type=text]');

            $(this.DocNumLabelID).off('click').on('click', function (e) {
               
                if (that.DocChoicesTrkClk === 1) {

                    that.ShowDocTypeChoices();
                    
                }

            });

            $(this.DocNumLabelDropDown).off('click').on('click', function (e) {

                if (that.DocChoicesTrkClk === 1) {

                    that.ShowDocTypeChoices();
                    
                }

            });

            $(this.DocChoicesFOTxtElem).off('focusout').on('focusout', function (e) { if (that.DocChoicesTrkClk === 0) { that.HideDocTypeChoices(); } });

            //Add handlers for Document Choices
            $(this.DocChoicesElemID).on({

                mouseover: function (e) { that.DocChoicesTrkClk = 1;},

                mouseout: function (e) { that.DocChoicesTrkClk = 0; $(that.DocChoicesFOTxtElem).trigger('focus');}

            });

            $(this.DocChoicesElemID).find('td:gt(0)').off('click').on('click', function (e) {
               
                var DocChoiceID = parseInt($(this).find('input[type=hidden]:eq(0)').val(), 10);

                var DocChoiceDescription = $(this).find('input[type=hidden]:eq(1)').val();

                var DocChoiceEnum = $(this).find('input[type=hidden]:eq(2)').val() * 1;

                that.HideDocTypeChoices();

                that.WSObj.SetCurrentDocumentTypeChoiceInSession(DocChoiceEnum, DocChoiceID, function (response) {

                    if (response !== "S") { return; }

                    if (that.GridEditorObj.GridRowCount > 1) { //user has added at least one product in the grid
                           
                        if (!confirm(that.TextStrings.Warnings.PageWillRefreshPinProds)) {

                            $(that.DocChoicesFOTxtElem).trigger('focusout');

                            return;

                        }

                        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
                            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientWithCredit ||
                            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientNoCredit ||
                            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier ||
                            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierWithCredit ||
                            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierNoCredit) {

                            LoadDocument(GetDocumentTypeFromDocumentChoice(DocChoiceEnum),
                                '',
                                DocChoiceDescription,
                                GetMenuSelectionFromDocumentChoice(DocChoiceEnum),
                                false,
                                $('#hdn_documentReturnParamers').val());

                        } else {

                            LoadDocument(GetDocumentTypeFromDocumentChoice(DocChoiceEnum),
                                '',
                                DocChoiceDescription,
                                GetMenuSelectionFromDocumentChoice(DocChoiceEnum),
                                false,
                                '');

                        }

                            // Enhancement: PinToClipboard must also accept negative DocLayoutJSObj.CDH.ID and then execute window.location.href only on response = 'S'
                            //that.WSObj.PinToClipboard(DocLayoutJSObj.CDH.ID, function (response) { that.OnWSSuccess(response, that.CommonOprs.ProductsPinned); });

                        return;

                    } 

                    if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
                        DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier) {

                        LoadDocument(GetDocumentTypeFromDocumentChoice(DocChoiceEnum),
                            '',
                            DocChoiceDescription,
                            GetMenuSelectionFromDocumentChoice(DocChoiceEnum),
                            false,
                            $('#hdn_documentReturnParamers').val());

                    } else {

                        LoadDocument(GetDocumentTypeFromDocumentChoice(DocChoiceEnum),
                            '',
                            DocChoiceDescription,
                            GetMenuSelectionFromDocumentChoice(DocChoiceEnum),
                            false,
                            '');

                    }

                });

            });

        }

    },

    RemoveDocTypeChoice: function () {
        
        $(this.DocNumLabelID).off().removeClass();

        $(this.DocNumLabelDropDown).off().hide();

        $(this.DocChoicesFOTxtElem).off();

        if (this.DocChoicesElemID != '#') $(this.DocChoicesElemID).find('td:gt(0)').off();

    },

    ShowDocTypeChoices: function () {

        $(this.DocChoicesElemID).show();

        $(this.DocChoicesElemID).position({

            'my': 'left top',

            'at': 'left bottom',

            'of': $(this.DocNumLabelID)

        });
       
        this.DocChoicesTrkClk = 0;

        $(this.DocChoicesFOTxtElem).trigger('focus');

    },

    HideDocTypeChoices: function () {
        
        $(this.DocChoicesElemID).hide();

        this.DocChoicesTrkClk = 1;

    },

    SetEntityImgAsAddEntity: function () {

        var that = this;

        $(this.EntityInfoLoaderImgID).removeClass('fa-circle-notch fa-spin').addClass('fa-user-plus');

        $(this.EntityInfoLoaderImgID).off('click').on('click', function (e) {

            var url;

            var v = that.GetEntityAutoCompTxtVal();

            switch (DocLayoutJSObj.CDH.DocumentChoice) {

                case DocumentChoices.SalesQuote:

                case DocumentChoices.SalesOrder:

                case DocumentChoices.GoodsOutbound:
                case DocumentChoices.GoodsOutboundAndSalesInvoice:

                    url = '/inventory/Popups/SupplierClientEdit_PopUp.aspx?EntityType=2';

                    break;

                case DocumentChoices.PurchaseOrder:

                case DocumentChoices.GoodsInbound:
                case DocumentChoices.GoodsInboundAndPurchaseInvoice:
                case DocumentChoices.HandlingInvoice:

                    url = '/inventory/Popups/SupplierClientEdit_PopUp.aspx?EntityType=1';

                    break;

            }

            if (v !== '')
                url = url + '&n=' + v;

            that.ShowLoading();

            var newwindow = window.open(url, 'name', 'height=735,width=850,top=0,left=200,resizable=yes,scrollbars=yes');

            that.HideLoading();

        });

        $(this.EntityInfoLoaderImgID).off('mouseenter').on('mouseenter', function (e) { Tip('Add new', OFFSETY, -15, DADELEMENTID, $(this).attr('id')); });

    },

    SetEntityImgAsLoading: function () {

        $(this.EntityInfoLoaderImgID).addClass('fa-circle-notch fa-spin').removeClass('fa-user-plus');

        $(this.EntityInfoLoaderImgID).off();

    },

    GetEntityAutoCompTxtVal: function () {

        if ($(this.EntityAuCmTxtID).data('state') !== 0) {  // means if it has something other than NullText

            return $(this.EntityAuCmTxtID).val();

        }

        return '';

    },

    GetContactTxtBoxVal: function () {

        if ($(this.ContactTxtBoxID).data('state') !== 0) {  // means if it has something other than NullText

            return $(this.ContactTxtBoxID).val();

        }

        return '';

    },
        
    GetEntityDetails: function (EntityName, fillPrimaryDetails, currentEntityId) {   //Should always be called with (fillPrimaryDetails = false) if we only want to get entity's Addresses.
    
        var that = this;

        $(this.ShowContactImgID).hide();

        if (EntityName !== '') {

            this.SetEntityImgAsLoading();

            this.WSObj.GetEntityDetails(EntityName,
                DocLayoutJSObj.CDH.DocumentChoice,
                currentEntityId,
                function (response) { that.OnGetEntityWSsuccess(response, fillPrimaryDetails); },
                function () { that.OnGetEtDtWSError(); });

        } else {

            DocLayoutJSObj.CDH.EntityID = 0;

        }

    },

    GetBatchNumberDetails: function (currentBatchId, expiryInputSelector) {
        
        var that = this;

        if (expiryInputSelector.data('bnId') == currentBatchId) { return; }  // this is to prevent accidentally reseting the expiryDate,

        expiryInputSelector.data('bnId', currentBatchId);   

        if (currentBatchId !== '' && currentBatchId !== null) {
            
            this.WSObj.GetBatchNumberDetails(currentBatchId,
                function (response) { that.OnGetBatchNumberDetailsSuccess(response, expiryInputSelector); },
                function () { alert('Unexpected error occurred'); });
        }

    },

    GetContactDetails: function (ContactID) {
     
        var that = this;
              
        if (ContactID !== '') {

            if (isNaN(ContactID)) { return; }

            this.SetEntityImgAsLoading();

            this.WSObj.GetContactDetails(ContactID,
                function (response) { that.OnGetContactWSsuccess(response); },
                function () { that.OnGetEtDtWSError(); });

        } else {

            $('#tbl_ShipToAddressesContact').remove();

        }

    },

    SetNewEntity: function (id, name) {   
       
        $(this.EntityAuCmTxtID).val(name);

        $(this.EntityAuCmTxtID).css("color", "black");

        $(this.EntityAuCmTxtID).trigger('blur');

    },

    CloseAddListIfEmpty: function () {
       
        if (!$('> table', this.ShipAddressListElID).length) {

            $(this.ShipAddressListElID).hide().css({ 'top': '0px', 'left': '0px' }); // hide outer div

            $(this.ShowShipInfoElID).hide(); // Hide Arrow Img

        }
    },

    ShowAddListIfNotEmpty: function (setShippingAddressField) {

        var shipAddElId = this.ShipAddressTxtBoxID;

        var ShipAddListElId = this.ShipAddressListElID;
        
        if ($(this.ShipAddressListElID + ' > table tr').length > 0) {

            $(this.ShowShipInfoElID).off('click').on('click', function (e) {

                $(ShipAddListElId).show().position({
                    my: 'left top',
                    at: 'left bottom',
                    of: shipAddElId
                });

            }).show();

        }

        if (!setShippingAddressField) { return; }

        var shippingAddress = $(this.ShipAddressListElID + ' > table tr:eq(0) td:eq(0)').length == 0 ? '' : htmlDecode($(this.ShipAddressListElID + ' > table tr:eq(0) td:eq(0)').html());
        
        if ($('#tbl_ShipToAddressesContact').length || $('#tbl_ShipToAddressesEntity').length) {

            $(shipAddElId).val(shippingAddress);

            $(shipAddElId).trigger('change');

        }

        else {

            $(shipAddElId).val('');

            $(shipAddElId).trigger('change');

        }
    },
        
    OnGetContactWSsuccess: function (response) {
     
        var that = this;
               
        this.SetEntityImgAsAddEntity();
              
        if (response.ca != null && response.ca != '') {

            that.FillAddressTable(response.ca, true);

            that.ShowAddListIfNotEmpty(false);

        } else {

            $('#tbl_ShipToAddressesContact').remove();

        }
        
    },

    OnGetBatchNumberDetailsSuccess: function (response, expiryInputSelector) {

        if (response !== null) {
            
            var dateToShow = MV_DateFormatter(response.ExpiryDate);

            expiryInputSelector.val(dateToShow);

        }

    },

    OnGetEntityWSsuccess: function (response, fillPrimaryDetails) {
       
        var that = this;

        $(this.EntityAuCmTxtID).removeClass('ErrTextbox').off('mouseenter mouseleave');
               
        this.SetEntityImgAsAddEntity();

        $(this.ShowShipInfoElID).hide().off();

        if (this.SaveBtn) this.SaveBtn.SetEnabled(true);

        if (this.ConfirmBtn) this.ConfirmBtn.SetEnabled(true);

        if (response.requestResult !== 'S') {

            that.DisplayErrorMessage(response.errMsg, $(this.EntityAuCmTxtID))

            $(this.EntityAuCmTxtID).trigger('focus');

            return;

        }

        if (fillPrimaryDetails) {

            $(this.BillAddressTxtBoxID).val(response.ba);
                
            $(this.ContactTxtBoxID).val(htmlDecode(response.pc));

            that.DocumentContactName = htmlDecode(response.pc);

            $(this.ContactTxtBoxID).trigger('change');      

            $('#tbl_ShipToAddressesContact').remove();

            if (this.DrpCurrencies != null) {

                if (this.DrpCurrencies.GetValue() != response.currency) {

                    this.DrpCurrencies.SetValue(response.currency);

                    this.UpdateNewCurrencyLabels(response.currency);

                    DocLayoutJSObj.CDH.Currency = response.currency;

                    DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

                    DocLayoutJSObj.InDocument.CurrencyUpdated = true;

                }

            }

            if (this.DrpTerms != null) {

                if (this.DrpTerms.GetValue() != response.paymentTerms) {

                    this.DrpTerms.SetValue(response.paymentTerms);

                    DocLayoutJSObj.CDH.Terms = response.paymentTerms;

                    DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

                    DocLayoutJSObj.InDocument.TermsUpdated = true;

                }

            }

        }

        DocLayoutJSObj.CDH.EntityID = response.id;

        $(this.ShowContactImgID).show();

        if (response.sa != null && response.sa != '') {

            that.FillAddressTable(response.sa, false);

        }

        if (response.ca != null && response.ca != '' && fillPrimaryDetails) {
                                            
            that.FillAddressTable(response.ca, true); 
            
        }           

        that.ShowAddListIfNotEmpty(true);
                                  
    },
    
    FillAddressTable: function (response, isContact) {
                                                     
        var shipAddElId = this.ShipAddressTxtBoxID;

        var shipAddListElId = this.ShipAddressListElID;
  
        var numberOfAddresses = response.length;

        var tableElement = null;

        var tableHeader = null;

        var idExtension = isContact ? 'Contact' : 'Entity';

        var headerContent = isContact ? TranslationsObj.ContactAddress : TranslationsObj.Address;

        var tbl_ShipToAddressesId = 'tbl_ShipToAddresses' + idExtension;

        $('#' + tbl_ShipToAddressesId).remove();

        if (!isContact) { $(shipAddElId).val(''); }

        for (var i = 0; i < numberOfAddresses; i++) {

            if (response[i] == '' || response[i] == null) { continue; }

            if (i === 0) {

                tableElement = document.createElement('table');

                tableElement.id = tbl_ShipToAddressesId;

                tableElement.setAttribute('cellspacing', '0');

                tableElement.setAttribute('cellpadding', '0');

                tableElement.style.marginBottom = '10px';

                tableElement.style.borderCollapse = 'collapse';

                tableElement.style.fontSize = '12px';

                tableElement.style.width = "100%";

                tableHeader = tableElement.createTHead();

                tableHeader.textContent = headerContent;

                tableHeader.style.fontWeight = 'bold';

                tableHeader.style.fontSize = '12px';

                tableHeader.style.borderBottom = '1px solid #d5d5d5'

                $(tableElement).appendTo(shipAddListElId);

            }

            if (tableElement != null) {

                var newRow = tableElement.insertRow(i);

                var dataCell = newRow.insertCell(0);

                dataCell.style.padding = '10px 5px';

                $(dataCell).html(htmlEncode(response[i]));

                $(newRow).addClass('extraAddressesInDoc');

                $(newRow).off('click').on('click', function (e) {

                    if ($(this).find('td:eq(0)').html() != htmlEncode($(shipAddElId).val())) {

                        $(shipAddElId).val(htmlDecode($(this).find('td:eq(0)').html()));

                        $(shipAddElId).trigger('change');

                    }

                    $(shipAddListElId).hide().css({ 'top': '0px', 'left': '0px' });

                });

            }

        }

    },

    OnGetEtDtWSError: function () {
        
        this.HideLoading();

        this.ShowNotification('f', 'The operation failed to complete. Please contact Technical Support if the issue perists.');

    },

    DisplayErrorMessage: function (Message, ObjectToPositionAgainst) {

        var that = this;

        this.HideErrorMessage();

        $(this.ErrorMessageDivID).html(Message);

        $(that.ErrorPanelDivID).css('z-index', '1000').css('display', '');

        $(that.ErrorPanelDivID).position({
            my: 'left bottom-5px',
            at: 'left top',
            of: ObjectToPositionAgainst,
            collision: 'fit'
        });

    },

    HideErrorMessage: function () {

        var ErrorMessageDivID = '#' + $(this.ErrorPanelDivID).find('div:first').attr('id');

        $(this.ErrorPanelDivID).css('display', 'none').css('z-index', '0').css({ top: 0, left: 0 });

        $(ErrorMessageDivID).html('');

    },

    DoAvlblQtyChk: function (l) {

        var that = this;

        this.CommonOprOKBtn.SetEnabled(false);

        this.GetCommonOprFieldAreaElem(this.CommonOprFields.InvLoc).find('i.fa-spin').last().show();

        if ((DocLayoutJSObj.CDH.ID) > 0 && DocLayoutJSObj.InDocument.DocumentRowsUpdated == true) {
            /* /Megaventory-Issues/issues/612 */

            let InDocumentDummy = this.GetDummyInDocument(); /*We should not save any updates in the CheckAllProductsOnHandQty service yet because user may cancel */

            this.WSObj.DocumentSaveOperation(DocLayoutJSObj.CDH,
                InDocumentDummy, 
                '',
                function (response) {

                    if (response.OperationStatus == 'F') {

                        /* /Megaventory-Issues/issues/1276 */

                        ShowNotification('f', response.ErrorMessage);

                        that.HideCommonOprPanel();

                        return false;

                    }

                    DocLayoutJSObj.InDocument.DocumentRowsUpdated = false; /*Reset documentRow*/

                    that.UpdateRowsRealIDs(response.DocumentNewRealIDs);

                    that.WSObj.CheckAllProductsOnHandQty(DocLayoutJSObj.CDH.ID, l, function (response) { that.OnQtyChkWSSuccess(response); });

                },
                function (response) {

                    that.HideLoading();

                    ShowNotification('f', response.ErrorMessage);

                }
            );

        } else {

            this.WSObj.CheckAllProductsOnHandQty(DocLayoutJSObj.CDH.ID, l, function (response) { that.OnQtyChkWSSuccess(response); });

        }

    },

    OnQtyChkWSSuccess: function (response) {

        this.GetCommonOprFieldAreaElem(this.CommonOprFields.InvLoc).find('i.fa-spin').last().hide();

        if (response.requestStatus == 'S') {

            var qtyDetails = response.NotAvlblProdList;

            var pCount = qtyDetails.length;

            var QtyChkArea = this.GetCommonOprFieldAreaElem(this.CommonOprFields.QtyChkArea).find('div');

            if (pCount > 0) {   //show the list
            
                this.ShowCommonOprField(this.CommonOprFields.QtyChkArea);

                var HeadingHTML = '<span>' + this.TextStrings.Warnings.ProdDoesNotHaveAvail + '</span>'

                var ListHTMLPre = '<ul>';

                var ListHTML = '';

                var LostHTMLPost = '</ul>';

                for (var i = 0; i < pCount; i++) {
                    ListHTML = ListHTML + '<li>' + qtyDetails[i][0] + ' - ' + qtyDetails[i][1] + '</li>';
                }

                QtyChkArea.html(HeadingHTML + ListHTMLPre + ListHTML + LostHTMLPost);

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

                    QtyChkArea.addClass('message');

                    this.CommonOprOKBtn.SetEnabled(true);

                }
                else {

                    QtyChkArea.addClass('errors');
                   
                }

            }
            else {

                this.HideCommonOprField(this.CommonOprFields.QtyChkArea);

                QtyChkArea.html('');

                this.CommonOprOKBtn.SetEnabled(true);

            }

        }
        else {

            alert(response.errMsg);
           
        }

    },

    ShowContacts: function () {

        if (DocLayoutJSObj.CDH.EntityID > 0) {

            DocLayoutJSObj.ShowContactsGrid(this.DocumentEntityName, DocLayoutJSObj.CDH.EntityID);

        }

    },

    UpdateNewCurrencyLabels: function (SelectedValue) {

        if (this.UnitPriceCurrencyLabelID.length > 0 &&
            this.TotalAmountCurrencyLabelID.length > 0 &&
            this.FooterCurrencySymbolLabelID.length > 0 &&
            SelectedValue.length > 0) {

            var my_array = SelectedValue.split('###');

            var CurrencyCode = my_array[0];

            var CurrencySymbol = my_array[1];

            $('#' + this.UnitPriceCurrencyLabelID).html(' (' + CurrencyCode + ')');

            $('#' + this.TotalAmountCurrencyLabelID).html(' (' + CurrencyCode + ')');

            $('#' + this.FooterCurrencySymbolLabelID).html(CurrencySymbol);

        }

    },

    BasicDocumentFieldChks: function () {

        //If the status is Pending

        if (DocLayoutJSObj.CDH.Status == DocumentStages.Pending && $(this.EntityAuCmTxtID).length > 0 && DocLayoutJSObj.CDH.EntityID === 0) { //this.DocumentEntityID
            alert(this.TextStrings.Warnings.EntityRequired);
            $(this.EntityAuCmTxtID).trigger('focus');
            Clipboard.Hide();
            return false;
        }

        if (DocLayoutJSObj.CDH.ID < 0) {   // Check for validity conditions

            if (DocLayoutJSObj.CDH.TypeNumberingIsManual == true && $(this.DocNumTxtBoxID).val() == '') {    // Check if the Manual number has been provided
                alert(this.TextStrings.Warnings.NumRequired);
                $(this.DocNumTxtBoxID).trigger('focus');
                Clipboard.Hide();
                return false;
            }

            if ($(this.DocDateTxtBoxID).val() == '') {
                alert(this.TextStrings.Warnings.DateRequired);
                $(this.DocDateTxtBoxID).trigger('focus');
                Clipboard.Hide();
                return false;
            }
        }
        return true;
    },

    ExtraGrdChks: function () { // CHeck for number of rows and any edited but non-saved rows in the grid
        if (this.GridEditorObj.GridRowCount <= 1) {
            alert(this.TextStrings.Warnings.AtleastOneRow);
            Clipboard.Hide();
            return false;
        }

        if (this.GridEditorObj.CheckRowEditedAndLeft() == true) {
            Clipboard.Hide();
            return false;
        }

        if (this.GridEditorObj.EditorsAreHidden === false) {
            this.GridEditorObj.HideAllEditors();
            this.GridEditorObj.PutOriginalValuesBack();
        }

        return true;

    },

    SaveDocument: function () {

        var that = this;

        if (!this.BasicDocumentFieldChks() || !this.ExtraGrdChks()) { return; }

        if (DocLayoutJSObj.CDH.ID < 0) {

            if (confirm(this.TextStrings.CommonOprMsgs.DocCrtConfirm) == false) return;

        }

        // Call the save document web service
        if (DocLayoutJSObj.InDocument.DocumentHeaderUpdated == true || DocLayoutJSObj.InDocument.DocumentRowsUpdated == true) {

            this.SetCommonHeaderValues();   //Now we fetch the currenct values of all the header fields in the Common Document Header object

            this.ShowLoading();

            this.WSObj.DocumentSaveOperation(DocLayoutJSObj.CDH,
                DocLayoutJSObj.InDocument,
                '',
                function (response) { that.OnSaveWSSuccess(response) },
                function (response) { that.OnWSError() }
            );

        } else {

            this.ShowNotification('s', this.TextStrings.Notifications.AllisSaved);

        }

    },

    OnSaveWSSuccess: function (response) {  // Handle the response, common things to be done plus any specific function

        this.HideLoading();

        if (response.OperationStatus == 'S') {

            if (DocLayoutJSObj.CDH.ID < 0) {

                if (response.DocumentNumber.indexOf('# --') === -1) {

                    this.ShowNotification('s', response.DocumentNumber + ' ' + this.TextStrings.Notifications.DocCreated)

                    this.SetDocumentNumberLabel(response.DocumentNumber);   //Update the document number

                }
                else {

                    this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocCreated)

                }

                //Update the Document ID, Validity ID
                DocLayoutJSObj.CDH.ID = response.DocumentID;

                DocLayoutJSObj.CDH.ValidityID = response.ValidityID;

                RedirectParam = window.location.search;   //this is to load the page with the correct url if the session expires

                this.OnDocCreateClientWFChanges();

                var mydocument = "&id=" + DocLayoutJSObj.CDH.ID + '&name=' + urlencode(response.DocumentNumber);

                window.history.replaceState('document*' + $('#hdn_documentType').val() + '*' + DocLayoutJSObj.CDH.ID + '*' + response.DocumentNumber, '', '?document=' + $('#hdn_documentType').val() + mydocument); // Changes the URL of the browser so, we can navigate back/forth

                $('#hdn_currentURL').val('?document=' + $('#hdn_documentType').val() + mydocument);

                document.title = urldecode(htmlDecode(response.DocumentNumber));

            }
            else {

                this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocSaved);

            }

            //Equalizing the custom flags hidden field: 010000000000#111000000000 should be made 111000000000#111000000000
            $(this.CustomFlagsHdnID).val($(this.CustomFlagsHdnID).val().split('#')[1] + '#' + $(this.CustomFlagsHdnID).val().split('#')[1]);

            this.UpdateRowsRealIDs(response.DocumentNewRealIDs);

            this.ResetInDocument(); //Reset the InDocument variable

            Clipboard.Hide();

        }
        else {

            this.ShowNotification('f', response.ErrorMessage);

        }

    },

    OnDocCreateClientWFChanges: function () {   // These are the changes made to the Work Flow, once the document is created

        var that = this;

        this.UpdateWFProgressArea(this.DraftWFAreaID, 'F', DocStatusMsgs.Draft);    //Update the Draft Area

        this.ShowOprBtn(this.DocPrintWrapper, this.DocEmailWrapper, this.PrintBtn, this.PrintOpBtn, this.EmailBtn, this.EmailOpBtn, this.MoreBtn);  // show the Print/Email/More btns

        // enable Print/Email btns
        if (this.PrintBtn != null) { this.PrintBtn.onclick = function () { that.PrintObj.OpenWindow(0, DocLayoutJSObj.CDH.DocumentChoice, DocLayoutJSObj.CDH.ID, 'P') } }

        if (this.EmailBtn != null) { this.EmailBtn.onclick = function () { that.PrintObj.OpenWindow(0, DocLayoutJSObj.CDH.DocumentChoice, DocLayoutJSObj.CDH.ID, 'E') } }

        //enable Print/Email option btns
        this.PrintObj.AdjustDLDropDownPrintOptions(DocLayoutJSObj.CDH.DocumentChoice, DocLayoutJSObj.CDH.ID, this.PrintOpBtn, this.EmailOpBtn);

        this.ManageMoreOpt(this.MoreOpts.Copy, this.MoreOptOprs.enable);  // enable the copy function

        this.ManageMoreOpt(this.MoreOpts.Pin, this.MoreOptOprs.enable); //eanble the Clipboard function

        this.GridEditorObj.DisableEntityAndCurrencySelection();

        //Enable the comments adding fields
        this.DocHistObj.ShowCommentArea();

        //Enable the file upload button and hide the label if present
        $(this.FilesTabID).find('span:eq(0)').html('').css('display', 'none');

        $(this.FilesTabID).find('span:eq(1)').css('display', '');

        if (DocLayoutJSObj.CDH.ValidityID != '') {

            $(this.FilesTabID).find('table:eq(1)').css('display', '');  // show the upload file button only when the document is not read-only

            this.FUploadObj = new qq.FileUploaderBasic({    // create the file upload obj here
                element: document.getElementById('Doc_fileUploader'),
                action: '/inventory/UserControls/documents/DocFileUploadHandler.ashx',
                button: document.getElementById('div_FUButton'),
                multiple: false,
                allowedExtensions: ['pdf', 'jpg', 'jpeg', 'png', 'gif'],
                sizeLimit: 3000 * 1024,
                minSizeLimit: 1,
                onSubmit: function (id, fileName) {
                    that.FUploadObj.setParams({
                        qid: DocLayoutJSObj.CDH.ID,
                        st: DocLayoutJSObj.CDH.Status,
                        ClVlId: DocLayoutJSObj.CDH.ValidityID,
                        sessionid: $('#hdn_formValidity').val()
                    });
                    that.ShowLoading();
                },
                onProgress: function (id, fileName, loaded, total) { },
                onComplete: function (id, fileName, responseJSON) {

                    that.HideLoading();

                    if (responseJSON.success == true) {
                        that.ShowNotification('s', responseJSON.filename + ' ' + that.TextStrings.Notifications.FileUploaded);
                        that.SendJQAjaxRequest('/inventory/WebServices/MegaventoryWebServices.asmx/GetDocFiles',
                            {
                                'DocID': DocLayoutJSObj.CDH.ID,
                                'DocChoice': DocLayoutJSObj.CDH.DocumentChoice
                            },
                            function (response) { that.OnGetDocFilesSuccess(response) })
                    }
                    else {
                        that.ShowNotification('f', responseJSON.error);
                    }
                },
                onCancel: function (id, fileName) { },
                // messages                
                messages: {
                    typeError: "{file} " + "has invalid extension. Allowed extensions are {extensions}.",
                    sizeError: "{file} is too large. Maximum file size is {sizeLimit}.",
                    minSizeError: "{file} is too small. Minimum file size is {minSizeLimit}.",
                    emptyError: "{file} is empty. Please select another file.",
                    onLeave: "The files are still being uploaded, if you leave now the upload will be cancelled."
                },
                showMessage: function (message) {
                    alert(message);
                }
            });

            //Show/Hide Un Confirm option, and add handler to the Cancel option
            if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesQuote ||
                DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesOrder ||
                DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.PurchaseOrder) {  // In these cases we show the Un-Confirm & Cancel option

                this.ManageMoreOpt(this.MoreOpts.UnConfirm, this.MoreOptOprs.show);

                this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.enable);

            }
            else {  // For Item Movement/Invoice transactions we only show Delete option (only when Pending)

                this.ManageMoreOpt(this.MoreOpts.Delete, this.MoreOptOprs.enable);

            }

            this.RemoveDocTypeChoice();

            this.ShowOprBtn(this.ConfirmBtn);   //Show Verify button

        }

    },

    OnGetDocFilesSuccess: function (response) {

        var that = this;

        var fileNum = response.filesNum;

        $('#tbl_UploadedFiles tr:not(:first-child)').remove();

        $('#deleteUploadedFiles').hide();

        $('#tbl_UploadedFiles').find('i.deleteUploadedfile').hide();  // hide bin icon

        if (fileNum > 0) {

            var i;

            var fileCount = 0;

            var dummyRow = $('#tbl_UploadedFiles').find('tr').first();

            var lastRow = $('#tbl_UploadedFiles').find('tr').last();

            for (i = 0; i < fileNum; i++) {

                let showFileRow = false;

                if (typeof response.files[i] != 'undefined' && response.files[i].name.length > 0) { showFileRow = true; }

                if (showFileRow) {

                    fileCount = fileCount + 1;

                    var newRow = dummyRow.clone(true);

                    $(newRow).insertAfter(lastRow);

                    $(newRow).find('td:eq(0)').find('span').html(fileCount);

                    $(newRow).find('td:eq(1)').find('a').html(response.files[i].name).attr('href', response.files[i].path);

                    $('#tbl_UploadedFiles').find('i.deleteUploadedfile').show();

                    $(newRow).find('.deleteUploadedfile.fal.fa-trash-alt').off('click').on('click', function () {

                        let rowToDelete = $(this).closest('tr');

                        let fileAndPathToDelete = rowToDelete.find('td > a').attr('href');

                        let fileToDelete = rowToDelete.find('td > a').html();

                        if (confirm(TranslationsObj.DeleteUploadedFile) == true) {

                            Megaventory.WebApplication.MegaventoryWebServices.DeleteUploadedFileFromDocument(
                                fileAndPathToDelete,
                                DocLayoutJSObj.CDH.ID,
                                $('#hdn_formValidity').val(),
                                function (response) {

                                    if (response.Status == '0') {

                                        ShowNotification('s', fileToDelete + ' ' + TranslationsObj.DeletedFileSuccessfully);

                                        that.SendJQAjaxRequest('/inventory/WebServices/MegaventoryWebServices.asmx/GetDocFiles',
                                            {
                                                'DocID': DocLayoutJSObj.CDH.ID,
                                                'DocChoice': DocLayoutJSObj.CDH.DocumentChoice
                                            },
                                            function (response) {

                                                that.OnGetDocFilesSuccess(response);

                                            })

                                    } else {

                                        ShowNotification('f', response.MessageList[0]);

                                    }

                                },
                                function (response) {

                                    ShowNotification('f', response.MessageList[0]);

                                })

                        }

                    });

                }

                $(newRow).find('')

                $(newRow).css('display', 'block');

                lastRow = newRow;
            }

            $(that.FilesTabID).find('span:eq(1)').css('display', 'none');   //hide the 0 files uploaded span

        }
        else {

            $(that.FilesTabID).find('span:eq(1)').css('display', 'block');

        }

    },

    ManageMoreOpt: function (t, o) {

        if (!this.MoreBtn) return;

        var that = this;

        var moElId = $(this.MoreOptElemID).find('td:eq(' + t + ')');

        if (moElId.text().trim() === '') { o = this.MoreOptOprs.hide; }

        switch (o) {
            case this.MoreOptOprs.show:
                moElId.css('display', '').removeClass(this.MoreOptEClass).addClass(this.MoreOptDClass);
                break;

            case this.MoreOptOprs.hide:
                moElId.css('display', 'none').off();
                break;

            case this.MoreOptOprs.enable:
                moElId.css('display', '').removeClass(this.MoreOptDClass).addClass(this.MoreOptEClass);

                if (t === this.MoreOpts.Cancel) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.Cancelled); that.HideMoreOpts(); });
                }
                else if (t === this.MoreOpts.Delete) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.Deleted); that.HideMoreOpts(); });
                }
                else if (t === this.MoreOpts.UnConfirm) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.AcceptReverted); that.HideMoreOpts(); });
                }
                else if (t === this.MoreOpts.Copy) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.Copied); that.HideMoreOpts(); });
                }
                else if (t === this.MoreOpts.Pin) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.ProductsPinned); that.HideMoreOpts(); });
                }
                else if (t === this.MoreOpts.Return) {
                    moElId.off('click').on('click', function (e) { that.HideMoreOpts(); }); // Do nothing here. Just hide the More option.
                }
                else if (t === this.MoreOpts.Handling) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.IssueHandlingInvoice); that.HideMoreOpts();
                    });
                }
                else if (t === this.MoreOpts.ReOpen) {
                    moElId.off('click').on('click', function (e) { that.CommonOperations(that.CommonOprs.ReOpened); that.HideMoreOpts(); });
                }

                break;

            case this.MoreOptOprs.disable:

                moElId.removeClass(this.MoreOptEClass).addClass(this.MoreOptDClass).off();

                break;

        }

        /* here we check the conditions for showing or hiding the More Options button */
        switch (o) {
            case this.MoreOptOprs.show:
            case this.MoreOptOprs.enable:

                if (this.MoreBtn.GetVisible() === true) break;

                var showMoreBtn = false;

                for (opt in this.MoreOpts) {
                    var moTDElId = $(this.MoreOptElemID).find('td:eq(' + this.MoreOpts[opt] + ')');

                    if (moTDElId.css('display') !== 'none') {
                        showMoreBtn = true;
                        break;
                    }
                }

                if (showMoreBtn === true) { this.ShowOprBtn(this.MoreBtn); }

                break;

            case this.MoreOptOprs.hide:

                if (this.MoreBtn.GetVisible() === false) break;

                var hideMoreBtn = true;
                for (opt in this.MoreOpts) {
                    var moTDElId = $(this.MoreOptElemID).find('td:eq(' + this.MoreOpts[opt] + ')');

                    if (moTDElId.css('display') !== 'none') {
                        hideMoreBtn = false;
                        break;
                    }
                }

                if (hideMoreBtn === true) { this.HideOprBtn(this.MoreBtn); }

                break;
        }

    },

    ShowMoreOpts: function (s) {
        $(this.MoreOptElemID).show();
        $(this.MoreOptElemID).position({
            'my': 'right top-1',
            'at': 'right bottom',
            'of': s
        });
        this.MoreOptTrkClk = -1;
    },

    HideMoreOpts: function () {
        $(this.MoreOptElemID).hide();
        this.MoreOptTrkClk = 0;
    },

    CommonOperations: function (o) {

        this.CommonOprNum = o;

        var hd, msg;

        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices["GoodsInbound"] &&
            $('#hdn_documentType').val() == 'HandlingInvoice') {

            // In the Page Load, the DocLayoutJSObj.CDH.DocumentChoice comes as GoodsInbound. We need to update it here.
            DocLayoutJSObj.CDH.DocumentChoice = DocumentChoices["HandlingInvoice"];

        }

        switch (o) {

            case this.CommonOprs.Accepted:

                if (!this.BasicDocumentFieldChks() || !this.ExtraGrdChks()) return;

                hd = this.TextStrings.CommonOprMsgs.ConfirmHd;

                msg = this.TextStrings.CommonOprMsgs.ConfirmMsg;

                if (DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.HandlingInvoice) {

                    this.ShowCommonOprField(this.CommonOprFields.InvLoc);

                    if (this.DrpInvLocations.GetSelectedIndex() > -1 &&
                        (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit)) {

                        this.DoAvlblQtyChk(this.DrpInvLocations.GetSelectedItem().value);

                    }

                }

                if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) && DocLayoutJSObj.CDH.TypeNumberingIsManual === true) {

                    this.ShowCommonOprField(this.CommonOprFields.CpyInp);

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice) {

                    this.ShowCommonOprField(this.CommonOprFields.DocumentIssueDate);

                    this.ShowCommonOprField(this.CommonOprFields.ShipingProviders);

                    this.ShowCommonOprField(this.CommonOprFields.TrackingID);

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice) {

                    this.ShowCommonOprField(this.CommonOprFields.DocumentIssueDate);

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice) {

                    this.ShowCommonOprField(this.CommonOprFields.DocumentIssueDate);

                    this.ShowCommonOprField(this.CommonOprFields.RelatedDocument);

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) {

                    this.ShowCommonOprField(this.CommonOprFields.DocumentIssueDate);

                }

                break;

            case this.CommonOprs.AcceptReverted:

                hd = this.TextStrings.CommonOprMsgs.UnConfirmHd;

                msg = this.TextStrings.CommonOprMsgs.UnConfirmMsg;

                break;

            case this.CommonOprs.Cancelled:

                if (DocLayoutJSObj.CDH.Status === DocumentStages.Pending && !this.ExtraGrdChks()) return;

                hd = this.TextStrings.CommonOprMsgs.CancelHd;

                msg = this.TextStrings.CommonOprMsgs.CancelMsg;

                break;

            case this.CommonOprs.Deleted:

                if (DocLayoutJSObj.CDH.Status !== DocumentStages.Pending) { return; }

                hd = this.TextStrings.CommonOprMsgs.DeleteHd;

                msg = this.TextStrings.CommonOprMsgs.DeleteMsg;

                break;

            case this.CommonOprs.Closed:

                hd = this.TextStrings.CommonOprMsgs.CloseHd;

                msg = this.TextStrings.CommonOprMsgs.CloseMsg;

                this.ShowCommonOprField(this.CommonOprFields.ClsInp);

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote) {

                    this.ShowCommonOprField(this.CommonOprFields.InvLoc);

                    this.ShowCommonOprField(this.CommonOprFields.SODocType);

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

                    this.ShowCommonOprField(this.CommonOprFields.ReOpenOrCloseDoc);

                }

                break;

            case this.CommonOprs.ReOpened:

                if (DocLayoutJSObj.CDH.Status !== DocumentStages.Completed) { return; }

                hd = this.TextStrings.CommonOprMsgs.ReOpenHd;

                msg = this.TextStrings.CommonOprMsgs.ReOpenMsg;

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

                    this.ShowCommonOprField(this.CommonOprFields.ReOpenOrCloseDoc);

                }

                break;

            case this.CommonOprs.Copied:

                if (!IgnorePendingDocChanges()) return;

                hd = this.TextStrings.CommonOprMsgs.CopyHd;

                msg = this.TextStrings.CommonOprMsgs.CopyMsg;

                //The PO/SO/Quote may have manual numbering even in the Pending state
                if (DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsInbound
                    && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsInboundAndPurchaseInvoice
                    && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsOutbound
                    && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsOutboundAndSalesInvoice
                    && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsTransfer
                    && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.HandlingInvoice) {

                    this.ShowCommonOprField(this.CommonOprFields.CpyInp);

                }

                break;

            case this.CommonOprs.ProductsPinned:

                if (DocLayoutJSObj.InDocument.DocumentRowsUpdated) {

                    alert(this.TextStrings.Warnings.SaveBeforePin);

                    Clipboard.Hide();

                    return;

                }

                this.CommonOprOKBtnClick(0);

                return;

            case this.CommonOprs.IssueHandlingInvoice:

                if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound) &&
                    DocLayoutJSObj.CDH.FetchProductPricing == true &&
                    (DocLayoutJSObj.CDH.Status == DocumentStages.Accepted ||
                    DocLayoutJSObj.CDH.Status == DocumentStages.Completed)) {

                    LoadDocument(GetDocumentTypeFromDocumentChoice(DocumentChoices.HandlingInvoice),
                        '',
                        TranslationsObj.NewShippingHandlingServicesInvoice,
                        GetMenuSelectionFromDocumentChoice(DocumentChoices.HandlingInvoice),
                        true,
                        '&pid=' + DocLayoutJSObj.CDH.ID);

                    return;

                }

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder &&
                    (DocLayoutJSObj.CDH.Status == DocumentStages.PartiallyInvoiced ||
                     DocLayoutJSObj.CDH.Status == DocumentStages.PartiallyReceivedInvoiced ||
                     DocLayoutJSObj.CDH.Status == DocumentStages.FullyInvoiced)) {

                    this.ShowLoading();

                    that = this;

                    this.WSObj.IssueHandlingInvoiceGetPurchaseInvoiceIDsAsCommaSeparatedString(
                        DocLayoutJSObj.CDH,
                        function (response) {

                            that.HideLoading();

                            LoadDocument(GetDocumentTypeFromDocumentChoice(DocumentChoices.HandlingInvoice),
                                '',
                                TranslationsObj.NewShippingHandlingServicesInvoice,
                                GetMenuSelectionFromDocumentChoice(DocumentChoices.HandlingInvoice),
                                true,
                                '&pid=' + response);

                        },
                        function (response) {

                            that.HideLoading();

                            that.DObj.ShowNotification('f', response);

                        });

                    return;

                }

        }

        this.ShowCommonOprPanel(hd, msg);

    },

    CommonOprOKBtnClick: function () {

        var that = this;

        // Add any checks for common operations
        switch (this.CommonOprNum) {

            case this.CommonOprs.Accepted:

                if (DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.HandlingInvoice) { // Inventory Location is required for every document except Sales Quote and Handling Invoice

                    if (!this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.InvLoc)) return;

                    if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit) && !this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.CpyInp)) return;

                }

                break;

            case this.CommonOprs.Closed:

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote &&
                    (!this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.InvLoc) ||
                    !this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.ClsInp) ||
                    !this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.SODocType))) return;

                break;

            case this.CommonOprs.Copied:
                if (DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsInbound &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsInboundAndPurchaseInvoice &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsOutbound &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsOutboundAndSalesInvoice &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsTransfer &&
                    DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.HandlingInvoice &&
                    !this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.CpyInp)) return;

                break;

            default:

                if (typeof this.defaultCOprOkBtnClkChk != 'undefined' && !this.defaultCOprOkBtnClkChk()) return;

                break;

        }

        if (this.CommonOprNum != this.CommonOprs.Copied) {

            this.SetCommonHeaderValues();   //Now we fetch the current values of all the header fields in the Common Document Header object

        }

        if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice) && this.CommonOprNum === this.CommonOprs.Accepted) {

            if (this.DrpShippingProviders != null && this.DrpShippingProviders.GetSelectedIndex() === -1 && $(this.TxtTrackingID).val() !== '') {

                alert('The Shipping Provider is mandatory if the tracking ID is inserted');

                return;

            }

            if (this.DrpShippingProviders != null && this.DrpShippingProviders.GetSelectedIndex() > -1) {

                DocLayoutJSObj.CDH.ShippingProviderID = this.DrpShippingProviders.GetSelectedItem().value;

            }

            DocLayoutJSObj.CDH.TrackingID = $(this.TxtTrackingID).val();

            DocLayoutJSObj.CDH.IssueDate = txt_DocIssueDateClientName.GetText();

        }

        if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice) &&
            this.CommonOprNum === this.CommonOprs.Accepted) {

            DocLayoutJSObj.CDH.IssueDate = txt_DocIssueDateClientName.GetText();

        }

        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice &&
            this.CommonOprNum === this.CommonOprs.Accepted) {

            if (drp_RelatedPurchaseInvoiceDocumentsClient.GetSelectedValues().length == 0) {

                this.ShowNotification('f', TranslationsObj.AtLeasOnePIDocMustBeAssociatedWithThisHandlingDocument);

                return;

            }

            DocLayoutJSObj.CDH.RelatedDocumentsArray = drp_RelatedPurchaseInvoiceDocumentsClient.GetSelectedValues().toString();

            DocLayoutJSObj.CDH.IssueDate = txt_DocIssueDateClientName.GetText();

        }

        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) {

            DocLayoutJSObj.CDH.IssueDate = txt_DocIssueDateClientName.GetText();

        }

        this.ShowLoading();

        // Call the specific web service
        switch (this.CommonOprNum) {
            
            case this.CommonOprs.Accepted:

                this.WSObj.DocumentConfirmOperation(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.OprCommentsTxtBoxID.GetText(),
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.Accepted); },
                    function (response) { that.OnWSError(); }
                );

                break;

            case this.CommonOprs.AcceptReverted:

                this.WSObj.DocumentUnConfirmOperation(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.OprCommentsTxtBoxID.GetText(),
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.AcceptReverted); },
                    function (response) { that.OnWSError(); });

                break;

            case this.CommonOprs.Cancelled:

                this.WSObj.DocumentCancelOperation(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.OprCommentsTxtBoxID.GetText(),
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.Cancelled); },
                    function (response) { that.OnWSError(); });

                break;

            case this.CommonOprs.Deleted:

                this.WSObj.DocumentDeleteOperation(DocLayoutJSObj.CDH,
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.Deleted); },
                    function (response) { that.OnWSError(); });

                break;

            case this.CommonOprs.Closed:

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote) {

                    var SODocTypeId = this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.SODocType, true);

                    var SOManNum = this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.ClsInp, true);

                    DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true; /* because the inventory location ID changes*/

                    this.WSObj.DocumentCloseOperation(DocLayoutJSObj.CDH,
                        DocLayoutJSObj.InDocument,
                        this.OprCommentsTxtBoxID.GetText(),
                        this.DrpInvLocations.GetSelectedItem().value,
                        SODocTypeId,
                        SOManNum,
                        function (response) { that.OnWSSuccess(response, that.CommonOprs.Closed); },
                        function (response) { that.OnWSError(); });

                }
                else {

                    let paymentTermsValue = this.DrpTerms;

                    var reOpenOrCloseRelatedDocs = this.chkReOpenOrCloseRelatedDocs === undefined ? false : this.chkReOpenOrCloseRelatedDocs.checked;

                    this.WSObj.DocumentCloseOperation(DocLayoutJSObj.CDH,
                        DocLayoutJSObj.InDocument,
                        this.OprCommentsTxtBoxID.GetText(),
                        reOpenOrCloseRelatedDocs,
                        function (response) { that.OnWSSuccess(response, that.CommonOprs.Closed); },
                        function (response) { that.OnWSError(); });

                }

                break;

            case this.CommonOprs.ReOpened:

                var reOpenOrCloseRelatedDocs = this.chkReOpenOrCloseRelatedDocs === undefined ? false : this.chkReOpenOrCloseRelatedDocs.checked;

                this.WSObj.DocumentReOpenOperation(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.OprCommentsTxtBoxID.GetText(),
                    reOpenOrCloseRelatedDocs,
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.ReOpened); },
                    function (response) { that.OnWSError(); })

                break;

            case this.CommonOprs.Copied:

                var DocManNum = this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.CpyInp, true);

                this.WSObj.DocumentCopyOperation(DocLayoutJSObj.CDH.ID,
                    DocLayoutJSObj.CDH.TypeID,
                    DocLayoutJSObj.CDH.Status,
                    DocLayoutJSObj.CDH.DocumentChoice,
                    DocManNum,
                    this.OprCommentsTxtBoxID.GetText(),
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.Copied); },
                    function (response) { that.OnWSError(); });

                break;

            case this.CommonOprs.ProductsPinned:

                this.WSObj.PinToClipboard(DocLayoutJSObj.CDH.ID,
                    function (response) { that.OnWSSuccess(response, that.CommonOprs.ProductsPinned); },
                    function (response) { that.OnWSError(); });

                break;

            default:

                if (typeof this.defaultCOprOkBtnClkAct != 'undefined' && !this.defaultCOprOkBtnClkAct()) { return; }

                break;

        }

    },

    OnWSSuccess: function (response, opr) {

        this.HideLoading();

        if (response.OperationStatus == 'S') {

            this.HideCommonOprPanel(); // This resets the this.CommonOprNum variable

            switch (opr) {

                case this.CommonOprs.Accepted:

                    this.SetDocumentNumberLabel(response.DocumentNumber);

                    if (DocLayoutJSObj.CDH.ID < 0) {   //Call the Saving Only response function first

                        this.OnSaveWSSuccess(response);

                    }
                    else {
                        /* the if condition is needed because we check for qty when the user clicks Verify and updates the Inventory Location. So, the
                        UpdateRowsRealIDs function is called there as well. If this check does not happen, an js error is thrown upon reverting to pending
                        and adding new rows in the grid. This is related to issue #612 */
                        if (response.DocumentNewRealIDs.length > 0) { this.UpdateRowsRealIDs(response.DocumentNewRealIDs); }

                        /* Updating the history entry with replaceState (not pushState) */
                        var mydocument = "&id=" + DocLayoutJSObj.CDH.ID + '&name=' + urlencode(response.DocumentNumber);

                        window.history.replaceState('document*' + $('#hdn_documentType').val() + '*' + DocLayoutJSObj.CDH.ID + '*' + response.DocumentNumber, '', '?document=' + $('#hdn_documentType').val() + mydocument); // Changes the URL of the browser so, we can navigate back/forth

                        $('#hdn_currentURL').val('?document=' + $('#hdn_documentType').val() + mydocument);

                        document.title = urldecode(htmlDecode(response.DocumentNumber));

                        //Equalizing the custom flags hidden field: 010000000000#111000000000 should be made 111000000000#111000000000
                        $(this.CustomFlagsHdnID).val($(this.CustomFlagsHdnID).val().split('#')[1] + '#' + $(this.CustomFlagsHdnID).val().split('#')[1]);

                    }

                    this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocConfirmed);   //Notifications

                    if (DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.SalesQuote) {

                        if (DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.HandlingInvoice) {

                            $(this.DocHdrInvLocLabelID).html(' (' + this.DocInvLocName.split(" (")[1]); // Display the iventory abrev in the header label

                        }

                        if (DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
                            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder) {

                            // update the date label for Stock Change transaction types
                            if (response.DocumentDate != '') {

                                //if the user chooses a goods in/out custom date, it will be available in the response stream
                                $(this.DocDateLblID).html(response.DocumentDate);

                            } else {

                                $(this.DocDateLblID).html($(this.DocDateTxtBoxID).val()); // Current date

                            }

                        }

                    }

                    DocLayoutJSObj.CDH.Status = DocumentStages.Accepted;

                    this.OnDocConfirmClientWFChanges();

                    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                        DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice) {

                        $('#lbl_EditTrackingAfter').hide();

                        $('#div_updateTrackingPanelContainerId').show();

                        if (DocLayoutJSObj.CDH.ShippingProviderID > 0) {  // The WS runs only when a shipment provider is selected

                            tabs_DocShipment_drp_ShippingProviders.SetValue(DocLayoutJSObj.CDH.ShippingProviderID);

                            $.ajax({
                                'url': '/inventory/WebServices/MegaventoryWebServices.asmx/GetShippingProvider',
                                'type': 'GET',
                                'data': { shippingProviderID: DocLayoutJSObj.CDH.ShippingProviderID },
                                'dataType': 'xml',
                                'success': function (response, status) {
                                    var resultJSON = JSON.parse($('string', response).text());
                                    var trackingUrl = resultJSON.ShippingProviderTrackingURL;
                                    if (DocLayoutJSObj.CDH.TrackingID.trim().length > 0) {
                                        if (trackingUrl.indexOf('http') == -1)
                                            trackingUrl = 'http://' + trackingUrl;
                                        $('#trackingLink').attr('href', trackingUrl + DocLayoutJSObj.CDH.TrackingID);
                                    } else {
                                        $('#trackingLink').hide();
                                    }
                                },
                                'error': function (xhr, err) {
                                    that.ShowNotification('f', 'error');
                                }
                            });

                        }

                        $('#tabs_DocShipment_txt_TrackingID').val(DocLayoutJSObj.CDH.TrackingID);

                        if (DocLayoutJSObj.CDH.TrackingID.trim().length == 0 || DocLayoutJSObj.CDH.ShippingProviderID === 0)
                            $('#trackingLink').hide();

                        $('#tabs_DocShipment_DocumentId').val(DocLayoutJSObj.CDH.ID);

                    }

                    break;

                case this.CommonOprs.AcceptReverted:

                    this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocUnConfirmed);   //Notifications

                    DocLayoutJSObj.CDH.Status = DocumentStages.Pending;

                    $(this.DocHdrInvLocLabelID).html('');    // remove the inventory abrev in the header label

                    this.OnDocUnConfirmClientWFChanges();

                    //Equalizing the custom flags hidden field: 010000000000#111000000000 should be made 111000000000#111000000000
                    $(this.CustomFlagsHdnID).val($(this.CustomFlagsHdnID).val().split('#')[1] + '#' + $(this.CustomFlagsHdnID).val().split('#')[1]);

                    break;

                case this.CommonOprs.Cancelled:

                    this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocCancelled);   //Notifications

                    this.OnDocCancelClientWFChanges();

                    DocLayoutJSObj.CDH.Status = DocumentStages.Cancelled;

                    //Equalizing the custom flags hidden field: 010000000000#111000000000 should be made 111000000000#111000000000
                    $(this.CustomFlagsHdnID).val($(this.CustomFlagsHdnID).val().split('#')[1] + '#' + $(this.CustomFlagsHdnID).val().split('#')[1]);

                    break;

                case this.CommonOprs.Deleted:

                    this.ShowNotification('s', this.TextStrings.Notifications.DocDeleted);

                    setTimeout(function () {

                        window.location.href = window.location.href.replace(window.location.search, '');

                    }, 2000); //will call the function after 2 secs.

                    break;

                case this.CommonOprs.Closed:

                    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote) {

                        this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocClosed + ' ' + this.TextStrings.Notifications.ChldDocCrtd + ': ' + htmlEncode(response.DocumentNumber));   //Notifications

                        // Reload related documents because sales order was created
                        if ($('#li_doctabs_AssociatedTrans').hasClass('ui-state-active')) {

                            DocJSObj.RltdDocObj.Show(DocLayoutJSObj.CDH.ID, DocLayoutJSObj.CDH.ParentDocumentID, '');

                        }

                    }
                    else {

                        this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocClosed);

                    }

                    this.OnDocCloseClientWFChanges();

                    DocLayoutJSObj.CDH.Status = DocumentStages.Completed;

                    //Equalizing the custom flags hidden field: 010000000000#111000000000 should be made 111000000000#111000000000
                    $(this.CustomFlagsHdnID).val($(this.CustomFlagsHdnID).val().split('#')[1] + '#' + $(this.CustomFlagsHdnID).val().split('#')[1]);

                    break;

                case this.CommonOprs.ReOpened:

                    this.ShowNotification('s', htmlEncode(htmlDecode($(this.DocNumLabelID).html())) + ' ' + this.TextStrings.Notifications.DocOpened);

                    DocLayoutJSObj.CDH.Status = response.DocumentStatus;

                    this.OnDocReOpenClientWFChanges();

                    break;

                case this.CommonOprs.Copied:

                    this.ShowNotification('s', this.TextStrings.Notifications.DocCopied + ': ' + htmlEncode(response.DocumentNumber));   //Notifications

                    break;

                case this.CommonOprs.ProductsPinned:

                    if (response.SetClipboardItemsResponse.Notification !== '') {
                        if (response.SetClipboardItemsResponse.Status === 'S')
                            this.ShowNotification('s', response.SetClipboardItemsResponse.Notification);
                        else
                            this.ShowNotification('f', response.SetClipboardItemsResponse.Notification);
                    }

                    Clipboard.SetItemCountLabel(response.SetClipboardItemsResponse.ClipboardItemCount);

                    break;
            }

            this.ResetInDocument();

            Clipboard.Hide();

        } else {

            this.ShowNotification('f', response.ErrorMessage);

        }

    },

    OnWSError: function () {

        this.HideLoading();

        this.ShowNotification('f', 'The operation failed to complete. Please contact Technical Support if the issue persists.');

    },

    OnDocConfirmClientWFChanges: function () {  // These are the changes made to the Work Flow, once the document is verified/approved

        var that = this;

        this.UpdateWFProgressArea(this.DraftWFAreaID, 'U');

        this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'F', DocStatusMsgs.Confirmed);  //Update the Confirm Area, //Update the status

        if (DocLayoutJSObj.CDH.ValidityID != '') {

            this.HideOprBtn(this.ConfirmBtn);   //hide the Confirm button as the document has been confirmed

            //disable the Entity & Currency drop downs
            if (DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.GoodsTransfer &&
                DocLayoutJSObj.CDH.Status != DocumentStages.Completed) {

                $(this.EntityLabelID).html(htmlEncode(this.GetEntityAutoCompTxtVal()));

            }

            $(this.EntityAuCmTxtID).hide();

            $(this.EntityInfoLoaderImgID).hide();

            if (this.DrpCurrencies != null && this.DrpCurrencies.GetSelectedItem() != null) {

                $(this.CurrencyLabelID).html(htmlEncode(this.DrpCurrencies.GetSelectedItem().text));

                this.DrpCurrencies.SetVisible(false);

            }

            if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {  // In these cases we show the Un-Confirm option

                this.ManageMoreOpt(this.MoreOpts.UnConfirm, this.MoreOptOprs.enable);

            }
            else {  // For all the Stock Change transactions we hide the Delete option at this point, and show the Cancel option

                this.ManageMoreOpt(this.MoreOpts.Delete, this.MoreOptOprs.hide);

                this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.show);

                this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.enable);

                if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseInvoice ||
                    DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound) &&
                    DocLayoutJSObj.CDH.FetchProductPricing == true) {

                    this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.show);
                    this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.enable);

                }

            }

            if (this.GridEditorObj) this.GridEditorObj.makeGridReadOnly(); //make the grid read only at this point, to edit the grid specifically for orders we will explore some other way

        }

        this.AftConfSpecifcFunc(this.CommonOprs.Accepted); //call specific function to do additional things

    },

    OnDocUnConfirmClientWFChanges: function () {

        this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'U');  //Update the Confirm Area, //Update the status 

        this.UpdateWFProgressArea(this.DraftWFAreaID, 'F', DocStatusMsgs.Draft);

        this.ShowOprBtn(this.ConfirmBtn);   //show the Confirm button as the document has been un-confirmed

        //enable the Entity & Currency drop downs
        $(this.EntityLabelID).html('');

        $(this.EntityAuCmTxtID).show();

        $(this.EntityInfoLoaderImgID).show();

        $(this.CurrencyLabelID).html('');

        this.DrpCurrencies.SetVisible(true);

        //disable and remove the  the un-confirm option in the More options DIV
        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesQuote ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesOrder ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.PurchaseOrder) {  // In these cases we disable the Un-Confirm option

            this.ManageMoreOpt(this.MoreOpts.UnConfirm, this.MoreOptOprs.disable);

        }

        this.GridEditorObj.makeGridEditable();                  //make the grid editable at this point

        this.AftConfSpecifcFunc(this.CommonOprs.AcceptReverted);    //call specific function to do additional things

    },

    OnDocCancelClientWFChanges: function () {

        this.UpdateWFProgressArea(this.DraftWFAreaID, 'U', DocStatusMsgs.Cancelled);    // update the draft area, status

        this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'U', DocStatusMsgs.Cancelled);  //Update the Confirm Area

        this.HideOprBtn(this.ConfirmBtn);

        //disable the Entity & Currency drop downs
        $(this.EntityLabelID).html(this.GetEntityAutoCompTxtVal());

        $(this.EntityAuCmTxtID).hide();

        $(this.EntityInfoLoaderImgID).hide();

        if (this.DrpCurrencies != null && this.DrpCurrencies.GetSelectedItem() != null) $(this.CurrencyLabelID).html(this.DrpCurrencies.GetSelectedItem().text);

        if (this.DrpCurrencies != null) { this.DrpCurrencies.SetVisible(false); }

        this.AftConfSpecifcFunc(this.CommonOprs.Cancelled); //call specific function to do additional things

        this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.hide);

        this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.hide);

        this.ManageMoreOpt(this.MoreOpts.Delete, this.MoreOptOprs.hide);

        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesQuote ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.SalesOrder ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.PurchaseOrder) {

            if (DocLayoutJSObj.CDH.Status == DocumentStages.Pending) {

                this.GridEditorObj.makeGridReadOnly();

            }

            this.ManageMoreOpt(this.MoreOpts.UnConfirm, this.MoreOptOprs.hide);  // Disable the Un-Confirm option from More options

        }

        this.MakeFormElementsReadOnlyForCancelAndCloseActions();

    },

    MakeFormElementsReadOnlyForCancelAndCloseActions: function () {

        $(this.FilesTabID).find('table:eq(1)').css('display', 'none');  // hide the upload file button

        $(this.FilesTabID).find('i.deleteUploadedfile').css('display', 'none');  // hide bin icon

        $('#div_FUButton').find('input[type=file]').hide();       //hide the file input from the upload file button for added security

        this.HideOprBtn(this.CloseBtn, this.SaveBtn);   //hide the Close/Save buttons as the document has been cancelled

        var elementsToMakeReadonly = this.BillAddressTxtBoxID + ',' +
            this.ShipAddressTxtBoxID + ',' +
            this.TagsTxtBoxID + ',' +
            this.CommentsTxtBoxID + ',' +
            this.CDate1TxtBoxID + ',' +
            this.CDate2TxtBoxID + ',' +
            this.ContactTxtBoxID + ',' +
            '#txt_DocumentRefNo';

        $(elementsToMakeReadonly).attr('readonly', 'readonly');

        var elementsToMakeDisabled = this.CustomFlagsHdnID + ',' +
            '#chk_CustomFlag1' + ',' +
            '#chk_CustomFlag2' + ',' +
            '#chk_CustomFlag3' + ',' +
            '#chk_CustomFlag4' + ',' +
            '#chk_CustomFlag5' + ',' +
            '#chk_CustomFlag6' + ',' +
            '#chk_CustomFlag7' + ',' +
            '#chk_CustomFlag8' + ',' +
            '#chk_CustomFlag9' + ',' +
            '#chk_CustomFlag10';

        $(elementsToMakeDisabled).attr('disabled', 'disabled');

        var elementsToDisplay = this.ContactLblID + ',' +
            this.CustomDate1LblID + ',' +
            this.CustomDate2LblID + ',' +
            this.ExpectedDateLatestForNonEditingLblID + ',' +
            this.ExpectedDateEarliestForNonEditingLblID;

        $(elementsToDisplay).css('display', '');

        var elementsToHide = this.ContactTxtBoxID + ',' +
            this.CDate1TxtBoxID + ',' +
            this.CDate2TxtBoxID + ',' +
            this.ExpectedDateLatest + ',' +
            this.ExpectedDateEarliest;

        $(elementsToHide).css('display', 'none');

        if ($(this.ContactTxtBoxID).val() == '') {

            $(this.ContactLblID).text('-');

        } else {

            $(this.ContactLblID).text(htmlEncode($(this.ContactTxtBoxID).val()));

        }

        if ($(this.CDate1TxtBoxID).val() == '') {

            $(this.CustomDate1LblID).text('-');

        } else {

            $(this.CustomDate1LblID).text($(this.CDate1TxtBoxID).val());

        }

        if ($(this.CDate2TxtBoxID).val() == '') {

            $(this.CustomDate2LblID).text('-');

        } else {

            $(this.CustomDate2LblID).text($(this.CDate2TxtBoxID).val());

        }

        if ($(this.ExpectedDateLatest).val() == '') {

            $(this.ExpectedDateLatestForNonEditingLblID).text('-');

        } else {

            $(this.ExpectedDateLatestForNonEditingLblID).text($(this.ExpectedDateLatest).val());

        }

        if ($(this.ExpectedDateEarliest).val() == '') {

            $(this.ExpectedDateEarliestForNonEditingLblID).text('-');

        } else {

            $(this.ExpectedDateEarliestForNonEditingLblID).text($(this.ExpectedDateEarliest).val());

        }

        if (DocLayoutJSObj.CDH.FetchProductPricing == true) {

            $(this.drp_DocHeaderTermsID).css('display', 'none');

            $(this.lbl_DocHeaderTermsID).css('display', '');

            if (drp_DocHeaderTerms.GetText() == '') {

                $(this.lbl_DocHeaderTermsID).text('-');

            } else {

                $(this.lbl_DocHeaderTermsID).html(drp_DocHeaderTerms.GetText());

            }

        }

    },

    OnDocReOpenClientWFChanges: function () {

        if (!this.ReOpenDocPerm) { return; }

        this.ManageMoreOpt(this.MoreOpts.ReOpen, this.MoreOptOprs.disable);

        this.ManageMoreOpt(this.MoreOpts.ReOpen, this.MoreOptOprs.hide);

        this.UpdateWFProgressArea(this.CloseWFAreaID, 'U');    // update the closed area

        this.ShowOprBtn(this.CloseBtn, this.SaveBtn);   //show the Close button as the document has been re-opened

        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

            if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyShipped) {

                this.UpdateWFProgressArea(this.ShipWFAreaID, 'P', DocStatusMsgs.PShipped);

                this.ShowOprBtn(this.InvBtn, this.ShipBtn);    // show invoice button

            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyShippedInvoiced) {

                this.UpdateWFProgressArea(this.ShipWFAreaID, 'P', DocStatusMsgs.PSPI); // update the ship area

                this.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PSPI); // update the invoice area

                this.ShowOprBtn(this.InvBtn, this.ShipBtn);    // show invoice button
            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyShipped) {

                this.UpdateWFProgressArea(this.ShipWFAreaID, 'F', DocStatusMsgs.FShipped); // update the ship area

                this.ShowOprBtn(this.InvBtn);    // show invoice button

            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyReceived) {

                this.UpdateWFProgressArea(this.RcvWFAreaID, 'P', DocStatusMsgs.PReceived); // update the ship area

                this.ShowOprBtn(this.InvBtn, this.ReceiveBtn);    // show invoice button

            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyReceivedInvoiced) {

                this.UpdateWFProgressArea(this.RcvWFAreaID, 'P', DocStatusMsgs.PRPI); // update the receive area

                this.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PRPI); // update the invoice area

                this.ShowOprBtn(this.InvBtn, this.ReceiveBtn);    // show invoice button
            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyReceived) {

                this.UpdateWFProgressArea(this.RcvWFAreaID, 'F', DocStatusMsgs.FReceived); // update the receive area

                this.ShowOprBtn(this.InvBtn);    // show invoice button

            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyInvoiced) {

                this.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PInvoiced); // update the invoice area

                this.ShowOprBtn(this.InvBtn);    // show invoice button // show close button

            }
            else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyInvoiced) {

                this.UpdateWFProgressArea(this.InvWFAreaID, 'F', DocStatusMsgs.FInvoiced); // update the invoice area

            }

        } else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer) {

            this.OnGoodsTransferReceiveItmsClientWFChanges();

        } else { //GO, GI, GOSI, GIPI

            this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'F', DocStatusMsgs.Confirmed);  //Update the Confirm Area, //Update the status

            this.ManageMoreOpt(this.MoreOpts.Delete, this.MoreOptOprs.hide);
            this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.show);
            this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.enable);

        }

        $(this.FilesTabID).find('table:eq(1)').css('display', '');  // show the upload file button 

        $(this.FilesTabID).find('i.deleteUploadedfile').css('display', '');  // show bin icon

        $('#div_FUButton').find('input[type=file]').show();       //show the file input from the upload file button for added security

        /*docheader*/

        var elementsToRemoveReadonlyFrom = this.BillAddressTxtBoxID + ',' +
            this.ShipAddressTxtBoxID + ',' +
            this.TagsTxtBoxID + ',' +
            this.CommentsTxtBoxID + ',' +
            this.CDate1TxtBoxID + ',' +
            this.CDate2TxtBoxID + ',' +
            this.ContactTxtBoxID + ',' +
            '#txt_DocumentRefNo';

        $(elementsToRemoveReadonlyFrom).removeAttr("readonly");

        var elementsToRemoveDisabledFrom = this.CustomFlagsHdnID + ',' +
            '#chk_CustomFlag1' + ',' +
            '#chk_CustomFlag2' + ',' +
            '#chk_CustomFlag3' + ',' +
            '#chk_CustomFlag4' + ',' +
            '#chk_CustomFlag5' + ',' +
            '#chk_CustomFlag6' + ',' +
            '#chk_CustomFlag7' + ',' +
            '#chk_CustomFlag8' + ',' +
            '#chk_CustomFlag9' + ',' +
            '#chk_CustomFlag10';

        $(elementsToRemoveDisabledFrom).removeAttr("disabled");

        var elementsToHide = this.ContactLblID + ',' +
            this.CustomDate1LblID + ',' +
            this.CustomDate2LblID + ',' +
            this.ExpectedDateLatestForNonEditingLblID + ',' +
            this.ExpectedDateEarliestForNonEditingLblID;

        $(elementsToHide).css('display', 'none');

        var elementsToDisplay = this.ContactTxtBoxID + ',' +
            this.CDate1TxtBoxID + ',' +
            this.CDate2TxtBoxID + ',' +
            this.ExpectedDateLatest + ',' +
            this.ExpectedDateEarliest;

        if (DocLayoutJSObj.CDH.FetchProductPricing == true) {

            $(this.drp_DocHeaderTermsID).css('display', '');

            $(this.lbl_DocHeaderTermsID).css('display', 'none');

        }

        $(elementsToDisplay).css('display', '');

    },

    OnDocCloseClientWFChanges: function () {

        this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'U');
        this.UpdateWFProgressArea(this.CloseWFAreaID, 'F', DocStatusMsgs.Completed);    // update the closed area, status

        // update the shipping/receiving/invoicing areas
        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {
            this.UpdateWFProgressArea(this.ShipWFAreaID, 'U');
            this.UpdateWFProgressArea(this.InvWFAreaID, 'U');
        }
        else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {
            this.UpdateWFProgressArea(this.RcvWFAreaID, 'U');
            this.UpdateWFProgressArea(this.InvWFAreaID, 'U');
        }
        else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer) {
            this.UpdateWFProgressArea(this.RcvWFAreaID, 'U');
        }

        $(this.ShowContactImgID).off().hide();   //hide the SHow Contact Image after closing

        this.HideOprBtn(this.CloseBtn, this.SaveBtn, this.ConfirmBtn);   //hide the Close button as the document has been closed

        if (this.ReOpenDocPerm && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.SalesQuote) {

            this.ManageMoreOpt(this.MoreOpts.ReOpen, this.MoreOptOprs.show);

            this.ManageMoreOpt(this.MoreOpts.ReOpen, this.MoreOptOprs.enable);
        }

        this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.hide);

        this.AftConfSpecifcFunc(this.CommonOprs.Closed); //call specific function to do additional things

        /*docheader*/
        this.MakeFormElementsReadOnlyForCancelAndCloseActions();

    },

    NewDocument: function () {
        var that = this;
        if (IgnorePendingDocChanges() == true) {   // Check for any changes made, DocLayoutJSObj.CDH.ValidityID == '' || 
            this.ShowLoading();
            this.WSObj.PerformDocumentUserCancelRedirect(DocLayoutJSObj.CDH.ID,
                DocLayoutJSObj.CDH.ValidityID,
                DocLayoutJSObj.CDH.DocumentChoice,
                1,
                function (response) { that.OnCancelRedirectWSSuccess(response); });
        }
    },

    DocumentList: function () {
        var that = this;
        if (IgnorePendingDocChanges() == true) {   // Check for any changes made, DocLayoutJSObj.CDH.ValidityID == '' || 
            this.ShowLoading();
            this.WSObj.PerformDocumentUserCancelRedirect(DocLayoutJSObj.CDH.ID,
                DocLayoutJSObj.CDH.ValidityID,
                DocLayoutJSObj.CDH.DocumentChoice,
                2,
                function (response) {

                    LoadGrid(gup('grid', $('#hdn_previousURL').val()),
                        gup('id', $('#hdn_previousURL').val()),
                        gup('name', $('#hdn_previousURL').val()),
                        '',
                        true);

            });
        }
    },

    OnCancelRedirectWSSuccess: function (response) {

        if (response.requestStatus == 'S') {

            LoadDocument(response.redirectURL,
                "",
                response.redirectTitle,
                GetMenuSelectionFromDocumentChoice(DocLayoutJSObj.CDH.DocumentChoice),
                true,
                '');

        }
        else if (response.requestStatus == 'F') {

            this.HideLoading();

            alert(response.errMsg);

        }

    },

    OnDocLoadUpdateClientWF: function () {

        if (DocLayoutJSObj.CDH.ID > 0) {

            this.OnDocCreateClientWFChanges();

            var that = this;

            if (DocLayoutJSObj.CDH.Status == DocumentStages.Cancelled) {

                this.OnDocCancelClientWFChanges();

                /* all rows will get the image handler but only doc types that are set as show image = true will display it when hover or in edit mode*/
                $(this.GridEditorObj.GridClientID).find('tr.InVoiceRows').slice(0).each(function (i) { that.GridEditorObj.AddImageDisplayHandlerToRow(this); });

            }

            if (DocLayoutJSObj.CDH.Status == DocumentStages.Pending) {

                if (DocLayoutJSObj.CDH.ValidityID != '') { // This should be the case when the Document is Read-Only i.e. ValidityID = ''

                    this.GridEditorObj.makeGridEditable();

                    /* in Pending, the last row is dummy so we do not call  the AddImageDisplayHandlerToRow */
                    $(this.GridEditorObj.GridClientID).find('tr.InVoiceRows').slice(0, -1).each(function (i) { that.GridEditorObj.AddImageDisplayHandlerToRow(this); });

                }

            }

            if (DocLayoutJSObj.CDH.Status != DocumentStages.Pending &&
                DocLayoutJSObj.CDH.Status != DocumentStages.Cancelled) {

                this.OnDocConfirmClientWFChanges();

                if (DocLayoutJSObj.CDH.Status != DocumentStages.Accepted) {    // hide the un-confirm & cancel options from More

                    this.UpdateWFProgressArea(this.ConfirmWFAreaID, 'U');

                    this.ManageMoreOpt(this.MoreOpts.Cancel, this.MoreOptOprs.hide);

                    this.ManageMoreOpt(this.MoreOpts.UnConfirm, this.MoreOptOprs.hide);

                }

                this.ManageMoreOpt(this.MoreOpts.Delete, this.MoreOptOprs.hide);    //hide the Delete option from More

                if (DocLayoutJSObj.CDH.Status === DocumentStages.Completed) { this.OnDocCloseClientWFChanges(); }

                /* all rows will get the image handler but only doc types that are set as show image = true will display it when hover or in edit mode*/
                $(this.GridEditorObj.GridClientID).find('tr.InVoiceRows').slice(0).each(function (i) { that.GridEditorObj.AddImageDisplayHandlerToRow(this); });

            }

            if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseInvoice ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound) &&
                DocLayoutJSObj.CDH.FetchProductPricing == true &&
                (DocLayoutJSObj.CDH.Status == DocumentStages.Accepted ||
                DocLayoutJSObj.CDH.Status == DocumentStages.Completed)) {

                this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.show);
                this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.enable);

            }

            if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder &&
                (DocLayoutJSObj.CDH.Status == DocumentStages.PartiallyInvoiced ||
                DocLayoutJSObj.CDH.Status == DocumentStages.FullyInvoiced ||
                DocLayoutJSObj.CDH.Status == DocumentStages.PartiallyReceivedInvoiced)) {

                this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.show);
                this.ManageMoreOpt(this.MoreOpts.Handling, this.MoreOptOprs.enable);

            }

        } else {

            this.GridEditorObj.makeGridEditable();  // Since the ID is negative it should be a new document in edit mode, the grid should be initialized

            $(this.EntityAuCmTxtID).trigger('focus'); //set the focus on the entity selection

        }

    },

    UpdateRowsRealIDs: function (realIDs) { //Update the real ids in the Grid

        var GObj = this.GridEditorObj;

        if (realIDs === '') {

            this.MGTable.find('tr.InVoiceRows').each(function (index) {

                if ($(this).css('display') === 'none') return;

                GObj.SetRowTempDtID(this, -1);

            });

            return;

        }

        var RealIDsArray = realIDs.split('|');

        var RealIDArrayCounter = 0;

        if (RealIDsArray.length > 0) {

            this.MGTable.find('tr.InVoiceRows').each(function (index) {

                if ($(this).css('display') === 'none') return;

                GObj.SetRowTempDtID(this, -1);

                var CurRealTableID = GObj.GetRowRealDtID(this);

                if (CurRealTableID === -1 && RealIDArrayCounter < RealIDsArray.length) {

                    GObj.SetRowRealDtID(this, RealIDsArray[RealIDArrayCounter]);

                    RealIDArrayCounter = RealIDArrayCounter + 1;

                }

            });

        }

    },

    SetDocumentNumberLabel: function (n) {

        if (n != '') $(this.DocNumLabelID).html(htmlEncode(n));

        $(this.DocNumTxtBoxID).hide();     //Hide the document number textbox

    },

    SetCommonHeaderValues: function () {

        DocLayoutJSObj.CDH.Number = $(this.DocNumLabelID).html();

        if (DocLayoutJSObj.CDH.TypeNumberingIsManual == true) {
            if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInbound ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsInboundAndPurchaseInvoice ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.HandlingInvoice ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) &&
                DocLayoutJSObj.CDH.Status === DocumentStages.Pending && this.CommonOprNum === this.CommonOprs.Accepted) {
                DocLayoutJSObj.CDH.Number = this.CheckAndGetCommonOprFieldVal(this.CommonOprFields.CpyInp, true);
            }
            else if (DocLayoutJSObj.CDH.ID < 0) {
                DocLayoutJSObj.CDH.Number = $(this.DocNumTxtBoxID).val();
            }
        }

        //'TypeID': 0, for inbound and outbound we will have to add this value as well

        DocLayoutJSObj.CDH.ReferenceNumber = $(this.DocRefNumID).val();
        DocLayoutJSObj.CDH.ReferenceApplication = $(this.DocRefAppID).html();
        DocLayoutJSObj.CDH.ContactPerson = $(this.ContactTxtBoxID).val();
        DocLayoutJSObj.CDH.BillingAddress = $(this.BillAddressTxtBoxID).val();
        DocLayoutJSObj.CDH.ShippingAddress = $(this.ShipAddressTxtBoxID).val();
        DocLayoutJSObj.CDH.CustomTField1 = $(this.CustomTField1TxtBoxID).val();
        DocLayoutJSObj.CDH.IssueDate = $(this.DocDateTxtBoxID).val();

        if (DocLayoutJSObj.CDH.Status == DocumentStages.Pending) {
            if (this.DrpInvLocations != null) {
                if (this.DrpInvLocations.GetSelectedItem() != null) {
                    DocLayoutJSObj.CDH.InvLocID = this.DrpInvLocations.GetSelectedItem().value;
                    this.DocInvLocName = this.DrpInvLocations.GetSelectedItem().text;
                }
                else {
                    DocLayoutJSObj.CDH.InvLocID = 0;
                    this.DocInvLocName = '';
                }
            }
            else {
                DocLayoutJSObj.CDH.InvLocID = 0;
                this.DocInvLocName = '';
            }
        }

        if (this.DrpTerms != null) {
            DocLayoutJSObj.CDH.PaymentTerms = (this.DrpTerms.GetSelectedItem() == null ? 0 : this.DrpTerms.GetSelectedItem().value);
        }
        else {
            DocLayoutJSObj.CDH.PaymentTerms = '0';
        }
        DocLayoutJSObj.CDH.Comments = $(this.CommentsTxtBoxID).val();
        DocLayoutJSObj.CDH.CustomDate1 = $(this.CDate1TxtBoxID).val();
        DocLayoutJSObj.CDH.CustomDate2 = $(this.CDate2TxtBoxID).val();
        DocLayoutJSObj.CDH.Tags = $(this.TagsTxtBoxID).val();
        if ($(this.CustomFlagsHdnID) === null) { DocLayoutJSObj.CDH.CustomFlags = ''; }
        else { DocLayoutJSObj.CDH.CustomFlags = $(this.CustomFlagsHdnID).val(); }

        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

            DocLayoutJSObj.CDH.ExpectedDateEarliest = htmlEncode($(this.ExpectedDateEarliest).val());
            DocLayoutJSObj.CDH.ExpectedDateLatest = htmlEncode($(this.ExpectedDateLatest).val());
        }
    },

    ResetInDocument: function () {
        DocLayoutJSObj.InDocument.DocumentHeaderUpdated = false;
        DocLayoutJSObj.InDocument.BillingAddressUpdated = false;
        DocLayoutJSObj.InDocument.ShippingAddressUpdated = false;
        DocLayoutJSObj.InDocument.CommentsUpdated = false;
        DocLayoutJSObj.InDocument.ContactPersonUpdated = false;
        DocLayoutJSObj.InDocument.TermsUpdated = false;
        DocLayoutJSObj.InDocument.CustomDate1Updated = false;
        DocLayoutJSObj.InDocument.CustomDate2Updated = false;
        DocLayoutJSObj.InDocument.ExpectedDateEarliestUpdated = false;
        DocLayoutJSObj.InDocument.ExpectedDateLatestUpdated = false;
        DocLayoutJSObj.InDocument.TagsUpdated = false;
        DocLayoutJSObj.InDocument.DocumentRowsUpdated = false;
        DocLayoutJSObj.InDocument.CustomTField1Updated = false;
        DocLayoutJSObj.InDocument.DocRefNumIDUpdated = false;
        DocLayoutJSObj.InDocument.CustomFlagsUpdated = false;
        DocLayoutJSObj.InDocument.DateUpdated = false;
        DocLayoutJSObj.InDocument.CurrencyUpdated = false;
        DocLayoutJSObj.InDocument.EntityUpdated = false;
    },


    GetDummyInDocument: function () {
        var InDocument = {
            DocumentHeaderUpdated: false,
            BillingAddressUpdated: false,
            ShippingAddressUpdated: false,
            CommentsUpdated: false,
            ContactPersonUpdated: false,
            TermsUpdated: false,
            CustomDate1Updated: false,
            CustomDate2Updated: false,
            ExpectedDateEarliestUpdated: false,
            ExpectedDateLatestUpdated: false,
            TagsUpdated: false,
            DocumentRowsUpdated: true,
            CustomTField1Updated: false,
            DocRefNumIDUpdated: false,
            CustomFlagsUpdated: false,
            DateUpdated: false,
            CurrencyUpdated: false,
            EntityUpdated: false
        }
        return InDocument;
    },

    ShowCommonOprPanel: function (hd, msg) {

        $(this.CommonOprHdElemID).html(hd);

        $(this.CommonOprMsgElemID).html(msg);

        $(this.ModalBackDivID).show();

        $(this.CommonOprDivID).show();

        if (drp_RelatedDocumentsContainerClient.IsVisible() == true) {

            if (drp_RelatedPurchaseInvoiceDocumentsClient.GetSelectedValues().length == 0) {

                btn_DocOprConfirmOK.SetEnabled(false);

            }

        }

        window.scrollTo(0, 0);

    },

    HideCommonOprPanel: function () {

        this.CommonOprNum = 0;

        this.HideAllCommonOprFields();

        this.HideEditableDocumentDate();

        this.OprCommentsTxtBoxID.SetText('');

        $(this.ModalBackDivID).hide();

        $(this.CommonOprDivID).hide();

    },

    ShowEditableDocumentDate: function () {

        $('#lbl_revealEditableDate').hide();

        $('#lbl_DocIssueDatePlaceHolder').hide();

        txt_DocIssueDateClientName.SetVisible(true);

    },

    HideEditableDocumentDate: function () {

        $('#lbl_revealEditableDate').show();

        $('#lbl_DocIssueDatePlaceHolder').show().text(txt_DocIssueDateClientName.GetText());

        txt_DocIssueDateClientName.SetVisible(false);

    },

    ShowCommonOprField: function (f) {

        this.GetCommonOprFieldAreaElem(f).show();

    },

    HideCommonOprField: function (f) {

        this.GetCommonOprFieldAreaElem(f).hide();

    },

    HideAllCommonOprFields: function () {

        if (this.DrpInvLocations != null && this.DrpInvLocations.GetItemCount() > 1) {

            this.DrpInvLocations.SetSelectedIndex(-1);

            if (typeof this.DrpInvLocations.onLostFocusHandler != 'undefined') this.DrpInvLocations.onLostFocusHandler.call();

        }

        this.HideCommonOprField(this.CommonOprFields.InvLoc);

        this.HideCommonOprField(this.CommonOprFields.SODocType);

        this.HideCommonOprField(this.CommonOprFields.ClsInp);

        this.HideCommonOprField(this.CommonOprFields.CpyInp);

        this.HideCommonOprField(this.CommonOprFields.QtyChkArea);

        this.GetCommonOprFieldAreaElem(this.CommonOprFields.ClsInp).find('input[type=text]').val('');

        this.GetCommonOprFieldAreaElem(this.CommonOprFields.CpyInp).find('input[type=text]').val('');

        this.HideCommonOprField(this.CommonOprFields.ShipingProviders);

        this.HideCommonOprField(this.CommonOprFields.TrackingID);

        this.HideCommonOprField(this.CommonOprFields.DocumentIssueDate);

        this.HideCommonOprField(this.CommonOprFields.ReOpenOrCloseDoc);

        this.HideCommonOprField(this.CommonOprFields.RelatedDocument);

    },

    GetCommonOprFieldAreaElem: function (f) {

        return $(this.CommonOprDivID).find('table:eq(0)').children('tbody').children('tr').eq(f);

    },

    CheckAndGetCommonOprFieldVal: function (f, onlyGet) {

        if (f === this.CommonOprFields.InvLoc) {

            if (this.DrpInvLocations.GetSelectedIndex() == -1) {

                alert(this.TextStrings.Warnings.InvLocRequired);

                return false;

            }

            return this.DrpInvLocations.GetSelectedItem().value;

        }

        if (f === this.CommonOprFields.SODocType) {

            if (drp_DocTypesForClosingSQs.GetSelectedIndex() == -1) {

                alert(this.TextStrings.Warnings.SODocTypeRequired);

                return false;

            }

            return drp_DocTypesForClosingSQs.GetValue();

        }

        var v = $(this.CommonOprDivID).find('table:eq(0)').children('tbody').children('tr').eq(f).find('input[type=text]');

        if (v.length > 0) {

            if (v.val() === '' && (!onlyGet || onlyGet === false)) {

                alert(this.TextStrings.Warnings.NumRequired);

                return false;

            }

            return v.val();

        }

        return '--';

    },

    ShowLoading: function () {

        ShowLoading();

    },

    HideLoading: function () {

        HideLoading();

    },

    ShowNotification: function (type, message) {

        var that = this;

        var DialogDIVId = this.NotificationDivID;

        var DialogTextElemID = this.NotificationTextElemID;

        $(DialogTextElemID).html(message);

        if (type == 's') {

            $(DialogDIVId).removeClass('errors').addClass('success'); //we need the remove class here because maybe the times does not expire and the user clicks again for an action

        }
        else if (type == 'f') {

            if (this.NotificationTimer) clearTimeout(this.NotificationTimer);

            $(DialogDIVId).removeClass('success').addClass('errors'); //we need the remove class here because maybe the times does not expire and the user clicks again for an action

        }

        $(DialogDIVId).css('top', 70).css('left', '50%').css('margin-left', -$(DialogDIVId).width() / 2);

        $(DialogDIVId).fadeIn(700);

        if (type == 's') {
            if (this.NotificationTimer) { clearTimeout(this.NotificationTimer); }

            this.NotificationTimer = setTimeout(function () { that.HideNotification(); }, 7000);

        }

    },

    HideNotification: function () {

        if (this.NotificationTimer) { clearTimeout(this.NotificationTimer); }

        var DialogDIVId = this.NotificationDivID;

        $(DialogDIVId).fadeOut(700, function () {

            $(DialogDIVId).css({ 'top': '0', 'left': '0' }).removeClass('success').removeClass('errors').find('span:eq(0)').html('');

        });

    },

    ShowOprBtn: function (args) {

        var count = arguments.length;

        for (var i = 0; i < count; i++) {

            if (typeof arguments[i] != 'undefined' && arguments[i] != null) {

                if (typeof arguments[i].SetVisible == 'function') {

                    arguments[i].SetVisible(true); /* devexpress control with SetVisible function exists */

                } else {

                    $(arguments[i]).show();

                    if ($(arguments[i]).hasClass('fal')) {

                        $(arguments[i]).css('display', 'inline-block')

                    }

                }

            }

        }

    },

    HideOprBtn: function (args) {

        var count = arguments.length;

        for (var i = 0; i < count; i++) {

            if (typeof arguments[i] != 'undefined' && arguments[i] != null) {

                if (typeof arguments[i].SetVisible == 'function') {

                    arguments[i].SetVisible(false); /* devexpress control with SetVisible function exists */

                } else {

                    $(arguments[i]).hide();

                }

            }

        }

    },

    UpdateWFProgressArea: function (a, t, msg) {

        //t = F -> Fulfilled, P -> Partially Fulfilled, U -> Un-Fulfilled (basically reversal, can happen only for Confirm-Unconfirm
        var bI = $(a).find('i');

        bI.removeClass('ImgBullGreen ImgBullYellow ImgBullGray');

        if (t === 'F') { bI.addClass('ImgBullGreen'); }

        else if (t === 'P') { bI.addClass('ImgBullYellow'); }

        else if (t === 'U') { bI.addClass('ImgBullGray'); }

        if (msg) {

            $(this.DocStatusLabelID).html(msg); // update the status label

            if (msg === DocStatusMsgs.Cancelled) {    // update the status

                $(this.DocStatusLabelID).css('color', 'Red');

            }

        }

    },

    WSErrorHandler: function (error) {

        var stackTrace = error.get_stackTrace();

        var message = error.get_message();

        var statusCode = error.get_statusCode();

        var exceptionType = error.get_exceptionType();

        var timedout = error.get_timedOut();

        if (statusCode === 401) {   // Authentication failed, hence redirect

            window.location.href = window.location.href + RedirectParam;

        }
        else if (statusCode === 500) {  // Internal Server Error

            alert('The following error has occurred, please contact Megaventory Support: ' + message);

        }

    }

};

var MVItmMvmntsObj = function (o) {
    
    var that = this;

    /* Shipping/Receiving/Invoicing buttons */
    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

        this.ShipBtn = o.FObj.OprRtdIDs.ShipBtn;

    }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

        this.ReceiveBtn = o.FObj.OprRtdIDs.ReceiveBtn;

    }
    else {

        return false;

    }

    /* Document Object */
    this.DObj = o.DObj;

    /* DevExpress Grid Client Instance */
    this.Grid = o.FObj.GFIDs.GridID;

    this.InvBtn = o.FObj.OprRtdIDs.InvBtn;

    this.ClsBtn = o.FObj.OprRtdIDs.CloseBtn;

    this.DocReadOnly = o.FObj.DocRelated.DocReadOnly;

    /* For shipping/receiving/invoicing */
    this.ItmMvmntsDivID = '#' + o.FObj.OprRtdIDs.ItmMvmntsDiv;
    this.ItmMvmntsDocNumTR = $('#divTransactionNumber');
    this.ItmMvmntsDocIssueDateDiv = $('#divTransactionIssueDate');
    this.DrpDocTypes = o.FObj.OprRtdIDs.DrpDocTypes;
    this.DocTypeItems = [];
    this.DrpDocHeaderTermsInPopUp = o.FObj.OprRtdIDs.DrpDocHeaderTermsInPopUp;
    this.DrpShippingProviders = o.FObj.OprRtdIDs.ItmMvmntsDiv_DrpShippingProviders;
    this.TxtTrackingID = '#' + o.FObj.OprRtdIDs.ItmMvmntsDiv_TxtTrackingID;
    this.ItmMvmntsTableID = '#tbl_ItmMvmntsGrid';
    this.ItmMvmntsTableWrapperID = '#div_ItmMvmntsGrid_tbl_wrapper';
    this.ItmMvmntsClsImg = $(this.ItmMvmntsDivID).children('div:eq(0)').find('i:eq(0)');
    this.ItmMvmntsHdMsgID = '#' + $(this.ItmMvmntsDivID).children('div:eq(0)').find('span:eq(0)').attr('id');

    this.ItmMvmntsCrtBtn = o.FObj.OprRtdIDs.CrtDocBtn;
    this.ItmMvmntsClsBtn = o.FObj.OprRtdIDs.ClsCrtBtn;
    this.ItmMvmntsCmnts = o.FObj.OprRtdIDs.CrtDocCmnts;
    this.NumFD = o.FObj.DocRelated.NFD;
    this.CheckBoxSerialCodeScanner = '#chk_SerialNumbersBarcodeScanner';

    /* Work Flow related fields */
    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) { this.ShipWFAreaID = '#' + o.FObj.HFldIDs.ShipWFArea; }
    else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) { this.RcvWFAreaID = '#' + o.FObj.HFldIDs.RcvWFArea; }
    this.InvWFAreaID = '#' + o.FObj.HFldIDs.InvWFArea;

    /* Texts */
    this.Texts = o.Texts;

    /* Web Service Object */
    this.WSObj = o.WSObj;

/* For shipping/receiving/invoicing */
    if (this.DocReadOnly == 1) {

        this.DObj.HideOprBtn(this.ReceiveBtn, this.ShipBtn, this.InvBtn);

    } else {

        if (this.ShipBtn != null) { this.ShipBtn.Click.AddHandler(function (s, e) { that.ShowItmMvmntsPanel(that.Oprs.Ship); }); }

        if (this.ReceiveBtn != null) { this.ReceiveBtn.Click.AddHandler(function (s, e) { that.ShowItmMvmntsPanel(that.Oprs.Receive); }); }

        if (this.InvBtn != null) { this.InvBtn.Click.AddHandler(function (s, e) { that.ShowItmMvmntsPanel(that.Oprs.Invoice); }); }

    }

    if (this.DrpDocTypes != null) {

        this.DrpDocTypes.SelectedIndexChanged.AddHandler(function (s, e) {

            var valArr = s.GetSelectedItem().value.split('#');

            if (parseInt(valArr[3], 10) === -1) {

                that.ShowDocNumRow(); // Manual numbering

            } else {

                that.HideDocNumRow(); // Auto numbering

            }

            if (parseInt(valArr[1], 10) === 1 || parseInt(valArr[2], 10) === 1) {

                $('#div_paymentTermsPopUp').show();

            } else {

                that.DrpDocHeaderTermsInPopUp.SetValue(null);

                $('#div_paymentTermsPopUp').hide(); // DocType that ships/receives only - no invoice

            }

        });

        // we get all the items in the Doc Type drop down and then clear it!
        var iCnt = this.DrpDocTypes.GetItemCount();

        var i = 0;

        for (i = 0; i < iCnt; i++) { this.DocTypeItems[i] = this.DrpDocTypes.GetItem(i); }

    }

    if (this.ItmMvmntsClsImg != null) { this.ItmMvmntsClsImg.off('click').on('click', function (e) { that.HideItmMvmntPanel(); }); }

    if (this.ItmMvmntsClsBtn != null) { this.ItmMvmntsClsBtn.Click.AddHandler(function (s, e) { that.HideItmMvmntPanel(); }); }

    if (this.ItmMvmntsCrtBtn != null) { this.ItmMvmntsCrtBtn.Click.AddHandler(function (s, e) { that.CreateDocument(0); }); }

    if (DocLayoutJSObj.CDH.Status != DocumentStages.Pending &&
        DocLayoutJSObj.CDH.Status != DocumentStages.Accepted &&
        DocLayoutJSObj.CDH.Status != DocumentStages.Completed) {

        this.UpdateClientWF();

    }

    $('#lbl_revealEditableDate_ItmMvmnts').off('click').on('click', function () {

        that.ShowEditableDocumentDateInItemMovements();

    });

};

MVItmMvmntsObj.prototype = {
    /* Document Object */
    DObj: null,

    /* DevExpress Grid Client Instance */
    Grid: null,

    /* Shipping/Receiving/Invoicing Div Pop Up related */
    ItmMvmntsDivID: '',
    ItmMvmntsDocNumTR: null,
    DrpDocTypes: null,
    DrpShippingProviders: null,
    TxtTrackingID: null,
    DrpDocHeaderTermsInPopUp: null,
    DocTypeItems: [],
    ChkAvlbltyBtn: null,
    ItmMvmntsClsImg: null,
    ItmMvmntsTableID: '',
    ItmMvmntsTableWrapperID: '',
    ItmMvmntsHdMsgID: '',
    ItmMvmntsGrdGnrtd: false,
    ItmMvmntsCrtBtn: null,
    ItmMvmntsClsBtn: null,
    ItmMvmntsCmnts: null,
    ItmMvmntsOpr: 0,
    OnHandQtyHash: {},
    NumFD: '',
    prodQtyDts: [],
    crtDocDts: {
        'dTdt': '',
        'dNum': '',
        'docIssueDate': '',
        'dCmnts': '',
        'dTags': '',
        'dShipID': 0,
        'dTrackNo': '',
        'dTrackNotify': 0,
        'dCustomFlags': '',
        'dCustomDate1': '',
        'dCustomDate2': '',
        'dRefNo': '',
        'dPaymentTerms': 0
    },

    /* Counters for errors */
    errTot: 0,
    errOHTot: 0,

    /* Shipping/Receiving/Invoicing buttons */
    ShipBtn: null,
    ReceiveBtn: null,
    InvBtn: null,
    ClsBtn: null,

    DocReadOnly: 0,

    /* Operations */
    Oprs: {
        'Ship': 1,
        'Receive': 2,
        'Invoice': 3,
        'Error': 4
    },

    /* Work Flow related fields */
    ShipWFAreaID: '',
    RcvWFAreaID: '',
    InvWFAreaID: '',
    retryLimitForWebServices: 10,

    Timers: { 'BarCodeInItemMovementsTimer': null },

    /* Texts */
    Texts: {
        'Msgs': {
            'ShpItmsHd': '',
            'RvcItmsHd': '',
            'InvItmsHd': '',
            'FtchOhQty': '',
            'MulShpQtyOrdQty': '',
            'ShpQtyOrdQty': ''
        },
        'Hdrs': {
            'InvLocHdr': '',
            'ProductSupplierClientCode': '',
            'OrddQty': '',
            'ShpdQty': '',
            'RcvdQty': '',
            'InvdQty': '',
            'QtyToShp': '',
            'QtyToRcv': '',
            'QtyToInv': ''
        },
        'Wrngs': {
            'QtyUnAvlbl': '',
            'InvldQtys': '',
            'DocTypeReqd': '',
            'DocNumReqd': '',
            'AtleastOneRow': '',
            'PageWillRefreshPinProds': '',
            'NNDcmlsOnly': '',
            'ShpQtyOhQtyExc': '',
            'ShpQtyOhQty': '',
            'RcvQtyOrdQty': '',
            'InvQtyShpQty': '',
            'InvQtyRcvQty': '',
            'DocAffCostsStock': ''
        }
    },
    'ItmMvmntsRowIndexes': {

        'ProductNumber': 0,
        'ProductCode': 1,
        'ProductSupplierClientCode': 2,
        'ProductDescription': 3,
        'ProductInOutQTYLabel1': 4,
        'ProductInOutQTYLabel2': 5,
        'ProductInOutQTYOnHandInfo': 6,
        'ProductInOutQTYInputTextBox': 7,
        'ProductInOutQTYSerialNumberTextBox': 8,
        'ProductInOutQTYBatchNumberTextBox': 9,
        'ProductInOutQTYExpiryDateTextBox': 10
    },

    /* Web Service Object */
    WSObj: null,

    /* For shipping/receiving/invoicing */

    ShowItmMvmntsPanel: function (o) {
        
        window.scrollTo(0, 0);

        var that = this;

        var action = "";

        var HdMsg = $(this.DObj.DocNumLabelID).html() + " » ";

        var mQtyHd, aQtyHd, iQtyHd, scProdCodeHd;

        var unvlZeroQtyRadio = $('#unvlQtyZero_radio');

        var allZeroQtyRadio = $('#allQtyZero_radio');

        var allMaxQtyRadio = $('#allQtyMax_radio');

        var defaultQtyRadio = $('#defaultQtyMax_radio');

        $(this.DObj.ModalBackDivID).show();

        $(this.ItmMvmntsDivID).show();

        $(this.ItmMvmntsTableWrapperID).css('max-height', Math.max(300, $(window).innerHeight() - 500) + 'px');

        $('#tbl_ItmMvmntsGrid tbody tr').find('.inoutQtyInput').on('focus', function(){ $(this).select(); });
                     
        $('#scannerInput').off('input').on('input', function (e) {

            that.ScanValue(this);

        });

        switch (o) {

            case this.Oprs.Ship:

                action = "SO";

                HdMsg = HdMsg + this.Texts.Msgs.ShpItmsHd;

                mQtyHd = this.Texts.Hdrs.OrddQty;

                aQtyHd = this.Texts.Hdrs.ShpdQty;

                iQtyHd = this.Texts.Hdrs.QtyToShp;

                scProdCodeHd = this.Texts.Hdrs.ProductSupplierClientCode;

                $('#unvlQtyZero_div').show();

                $('#allQtyMax_div').show();

                $('#div_ItmMvmnts_tr_ShipmentInformation').show();

                if (DocLayoutJSObj.CDH.ReferenceApplication.toLowerCase().includes('magento') == true && DocLayoutJSObj.GlobalSettings.MagentoEnabled == 1) {

                    //Shopify???

                    $('#div_ItmMvmnts_tr_trackingNotify').show();

                    $('#div_ItmMvmnts_chk_trackingNotify').prop('checked', true);

                }

                $('#SetShipQtyOptions_btn').off('click').on('click', function (e) {

                    if (unvlZeroQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('zero', 'unavailable', 'ship');

                    }

                    else if (allZeroQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('zero', 'all', 'ship');

                    }

                    else if (allMaxQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('max', 'all', 'ship');

                    }

                    else if (defaultQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('reset', 'reset', null);

                    }

                });

                break;

            case this.Oprs.Receive:

                action = "PO";

                HdMsg = HdMsg + this.Texts.Msgs.RvcItmsHd;

                mQtyHd = this.Texts.Hdrs.OrddQty;

                aQtyHd = this.Texts.Hdrs.RcvdQty;

                iQtyHd = this.Texts.Hdrs.QtyToRcv;

                $('#unvlQtyZero_div').hide();

                $('#allQtyMax_div').hide();

                scProdCodeHd = this.Texts.Hdrs.ProductSupplierClientCode;

                $('#SetShipQtyOptions_btn').off('click').on('click', function (e) {

                    if (allZeroQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('zero', 'all', 'receive');

                    }

                    else if (defaultQtyRadio.prop('checked')) {

                        that.SetItemsQtyTo('max', 'all', 'receive');

                    }

                });

                break;

            case this.Oprs.Invoice:

                that.HideOhQMsgDiv();

                $('#unvlQtyZero_div').hide();

                $('#allQtyMax_div').hide();

                HdMsg = HdMsg + this.Texts.Msgs.InvItmsHd;

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

                    mQtyHd = this.Texts.Hdrs.ShpdQty;

                }
                else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

                    mQtyHd = this.Texts.Hdrs.RcvdQty;

                }

                aQtyHd = this.Texts.Hdrs.InvdQty;

                iQtyHd = this.Texts.Hdrs.QtyToInv;

                $('#div_ItmMvmnts_tr_ShipmentInformation').hide();

                $('#div_ItmMvmnts_tr_trackingID').hide();

                break;

            case this.Oprs.Error:

                return;

        }

        $('#qtyLabelInPopup').text(iQtyHd);

        $(this.ItmMvmntsHdMsgID).html(HdMsg);

        /* Set the Inventory Location name */
        $(this.ItmMvmntsDivID + ' #invLocHeader').html(this.Texts.Hdrs.InvLocHdr);

        $(this.ItmMvmntsDivID + ' #invLocName').html(htmlDecode(htmlEncode(this.DObj.DocInvLocName)));

        /* Adjust the Document Types drop down for the Shipping/Invoicing */
        var hdRow = $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr:eq(1)');
        
        hdRow.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYLabel1 + ')').html(mQtyHd);

        hdRow.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYLabel2 + ')').html(aQtyHd);

        hdRow.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').html(iQtyHd);

        hdRow.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductSupplierClientCode + ')').html(scProdCodeHd);

        if (this.ItmMvmntsOpr != o) {

            this.RemItmMvmntsGrid();

            this.ItmMvmntsOpr = o;

            this.AdjDocTypeForOpr(o);

        }

        this.GenItmMvmntsGrid();

        var CommentsTxtBoxID = this.DObj.CommentsTxtBoxID;

        var TagsTxtBoxID = this.DObj.TagsTxtBoxID;

        var DocumentExtraInformation = {
            'DocumentCustomFlagsCount': 10
        }

        var copyDocumentHeaderDetailsFromParentDocument = function () {

            $('#txtAreaDocComments').val($(CommentsTxtBoxID).val());

            $('#txtAreaDocTags').val($(TagsTxtBoxID).val());

            var i = 1;

            for (i = 1; i < DocumentExtraInformation.DocumentCustomFlagsCount + 1; i++) {

                var chkCustomFlagI = "#checkCustomDocFlag" + i;

                var chk_CustomFlagI = "#chk_CustomFlag" + i;

                $(chkCustomFlagI).prop('checked', $(chk_CustomFlagI).prop('checked'));

            }

            $('#hdn_CustomDocFlagStr').val($('#hdn_CustomFlagStr').val());

            $('#txt_DocHeaderCustomDate1lInPopUp').val($('#txt_DocHeaderCustomDate1').val());

            $('#txt_DocHeaderCustomDate2lInPopUp').val($('#txt_DocHeaderCustomDate2').val());

            $('#txt_DocumentRefNoInPopUp').val($('#txt_DocumentRefNo').val());

            if (that.DObj.DrpTerms.GetSelectedItem() != null && $('#div_paymentTermsPopUp').is(':visible')) { that.DrpDocHeaderTermsInPopUp.SetValue(that.DObj.DrpTerms.GetSelectedItem().value); }

        }

        var revertDocumentHeaderDetailsToDefault = function () {

            $('#txtAreaDocComments').val('');

            $('#txtAreaDocTags').val('');

            $('#hdn_CustomDocFlagStr').val('010000000000#010000000000'); //This is the default -all unchecked flags

            var i = 1;

            for (i = 1; i < DocumentExtraInformation.DocumentCustomFlagsCount + 1; i++) {

                var chkCustomFlagI = "#checkCustomDocFlag" + i;

                $(chkCustomFlagI).prop('checked', false);

            }

            $('#txt_DocHeaderCustomDate1lInPopUp').val('');

            $('#txt_DocHeaderCustomDate2lInPopUp').val('');

            $('#txt_DocumentRefNoInPopUp').val('');

            that.DrpDocHeaderTermsInPopUp.SetValue(0);

        }


        if ($(GE.chkCopyHeaderDetailsToDocID) != null) {

            let areAllCustomFlagsUnchecked = (
                $('#chk_CustomFlag1').prop('checked') == false &&
                $('#chk_CustomFlag2').prop('checked') == false &&
                $('#chk_CustomFlag3').prop('checked') == false &&
                $('#chk_CustomFlag4').prop('checked') == false &&
                $('#chk_CustomFlag5').prop('checked') == false &&
                $('#chk_CustomFlag6').prop('checked') == false &&
                $('#chk_CustomFlag7').prop('checked') == false &&
                $('#chk_CustomFlag8').prop('checked') == false &&
                $('#chk_CustomFlag9').prop('checked') == false &&
                $('#chk_CustomFlag10').prop('checked') == false
            );

            let areAllTextBoxesOrCustomDateEmpty = ($(CommentsTxtBoxID).val().length == 0 && $(TagsTxtBoxID).val().length == 0 && $('#txt_DocHeaderCustomDate1').val().length == 0 && $('#txt_DocHeaderCustomDate2').val().length == 0 && $('#txt_DocumentRefNo').val().length == 0);

            let isDrpTermsPopulatedWithZeroValue = (this.DObj.DrpTerms.GetSelectedItem() != null && this.DObj.DrpTerms.GetSelectedItem().value == 0);

            //display the checkbox if the controls have at least one value in them.
            if (areAllCustomFlagsUnchecked && areAllTextBoxesOrCustomDateEmpty && isDrpTermsPopulatedWithZeroValue) { $('label[for=chkCopyHeaderDetailsToDoc]').hide(); $(GE.chkCopyHeaderDetailsToDocID).hide(); } else { $('label[for=chkCopyHeaderDetailsToDoc]').show(); $(GE.chkCopyHeaderDetailsToDocID).show(); }

            $('label[for=chkCopyHeaderDetailsToDoc]').html(htmlEncode($('#hdn_chkCopyHeaderDetailsToDoc').html() + ' ' + $(DocJSObj.DocNumLabelID).html()));

            if ($(GE.chkCopyHeaderDetailsToDocID).prop('checked')) {

                copyDocumentHeaderDetailsFromParentDocument();

            } else {

                revertDocumentHeaderDetailsToDefault();

            }

            $(GE.chkCopyHeaderDetailsToDocID).off('change').on('change', function (e) {

                if ($(GE.chkCopyHeaderDetailsToDocID).prop('checked') == true) {

                    that.WSObj.SetUserUseCheckBoxCloneChoice('1');

                    copyDocumentHeaderDetailsFromParentDocument();

                } else {

                    that.WSObj.SetUserUseCheckBoxCloneChoice('0');

                    revertDocumentHeaderDetailsToDefault();
                }

            });

        }

        if (this.DrpDocTypes != null) {

            // Selecting the 1st item in the list when there is only one item
            if (this.DrpDocTypes.GetItemCount() == 1) {

                this.DrpDocTypes.SetSelectedIndex(0);

                var valArr = this.DrpDocTypes.GetSelectedItem().value.split('#');

                if (parseInt(valArr[3], 10) === -1) {
                    this.ShowDocNumRow();
                } else {
                    this.HideDocNumRow();
                }

                //DocType that ships/receives only - no invoice
                if (parseInt(valArr[1], 10) === 1 || parseInt(valArr[2], 10) === 1) {
                    $('#div_paymentTermsPopUp').show();
                } else {
                    this.DrpDocHeaderTermsInPopUp.SetValue(0);
                    $('#div_paymentTermsPopUp').hide();
                }

            }

        }

        this.DrpDocTypes.Focus();

        this.DrpShippingProviders.Focus();

        /* focussing on the first row with qty */
        var temp = setTimeout(function () { $(that.ItmMvmntsTableID).find('.itmMvmntsGrdtr:eq(2)').children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('input[type=text]').trigger('focus'); }, 200);

        var useScanner;

        if ($('#tbl_ItmMvmntsGrid tr.InVoiceRows').find('td.serialNumTd:visible input[type=text]').length == 0) {

            $("#SerialNumbersBarcodeScannerCheckBoxWrapper").hide();

        }

        $(this.CheckBoxSerialCodeScanner).off().on('change', function (e) {

            useScanner = $(this).is(':checked');

        });

        $('#tbl_ItmMvmntsGrid tr.InVoiceRows').each(function (index, invRow) {
            
            $(this).find('td.serialNumTd:visible input[type=text]').off('input').on('input', function () {

                if (useScanner == true) {

                    $(this).attr('disabled', 'disabled');

                    var that = $(this);

                    setTimeout(function () {

                        var ch = that.val().trim().slice(-1);

                        if (ch != ',') {

                            that.val(that.val() + ',');

                        }

                        if (that.val().charAt(0) == ',') {

                            var trimmed = that.val().substring(1);

                            that.val(trimmed);

                        }

                        that.removeAttr('disabled');

                    }, 500);

                }

            });

            // add batch number events

            var thisRow = $(invRow);

            var thisRowExpiryDate = thisRow.find('input.expiryDatePicker');
            
            //If its a PO we enable the datepicker - In SO we don't need datepicker because expiry date textbox is disabled
            if (action == "PO") {
                thisRowExpiryDate.datepicker({
                    dateFormat: "M dd, yy",
                    onSelect: (d, i) => {
                        $(this).focus();
                        if (d !== i.lastVal) {
                            $(this).change();
                            that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(thisRow);
                        }                        
                    }
                })
            }

            thisRow.find('td.batchNameTd i.showPickBatchIcon').off('click').on('click', function () {

                pickBatchNumber.ShowPickBatchPopUp(thisRow, thisRow.data('p'), DocLayoutJSObj.CDH.InvLocID);

            });            

            thisRow.find('td.batchNameTd input[type=text]').off('blur').on('blur', function () {

                var currentBatchNumberTxt = $(this).val();
                
                var selectedBatchId = $(this).data('id');

                if (currentBatchNumberTxt == '' || currentBatchNumberTxt == null)
                {
                    thisRowExpiryDate.val('');

                    that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(thisRow);
                }
                else
                {
                    that.GetBatchNumberDetailsFromWS(selectedBatchId, thisRow);
                }                     

            });

            thisRowExpiryDate.off('blur').on('blur', function () {

                that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(thisRow);       

            });

        });

    },
        
    GetBatchNumberDetailsFromWS: function (BatchNumberId, thisRow) {
        
        var that = this;

        that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(thisRow);

        if (thisRow.data('bnId') == BatchNumberId) { return; }  // this is to prevent accidentally reseting the expiryDate,
        thisRow.data('bnId', BatchNumberId);                    // once the user has changed it on an existing batch
        
        if (BatchNumberId !== '' && BatchNumberId !== null) {

            that.WSObj.GetBatchNumberDetails(BatchNumberId,
                function (response) { that.OnGetBatchNumberDetailsFromWSSuccess(response, thisRow); },
                function () { alert('Unexpected error occurred'); });
        }

    },

    OnGetBatchNumberDetailsFromWSSuccess: function (response, thisRow) {
        
        if (response !== null) {

            var dateToShow = MV_DateFormatter(response.ExpiryDate);

            var thisRowExpiryDate = thisRow.find('input.expiryDatePicker');

            thisRowExpiryDate.val(dateToShow);
            
        }

        this.GetBatchNumberDetailsFromRowAndSetRowDataAttr(thisRow);
    },

    /**
    * Gets the BatchNumber Details in the given $row and sets the $row's batchNumbers data attribute.
    * @param {jQuery} row  A $row element.
    */
    GetBatchNumberDetailsFromRowAndSetRowDataAttr: function (row) {

        var that = this;
        
        var separator = StaticObj.separatorString; 

        var compactString = ''; 

        var batchNameTxtBox = row.children('td.batchNameTd').find('input[type=text]');

        if (!batchNameTxtBox.length) { return; }

        var batchName = batchNameTxtBox.val();

        var productQty = row.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('input[type=text]').val();

        productQty = that.GetFltFrmStr(productQty);

        var expiryDate = MV_StringToDate(row.children('td.expiryTd').find('input.expiryDatePicker').val(), "MMM dd, YYYY");
        
        var expiryShortString = MV_GetSimpleDate(expiryDate); // string in "yyyy-MM-dd" format

        //commented out for future implementation - many batches in one row -
        //compactString += ',' + batchName + separator + productQty + separator + expiryShortString;
        
        //if (batchName != '') {

        //    row.data('batchNumbers', compactString);

        //}
        //else {

        //    row.data('batchNumbers', '');

        //}

        if (batchName !== '' && batchName !== undefined) {

            compactString += batchName + separator + productQty + separator + expiryShortString;

        }

        row.data('batchNumbers', compactString);

    },

    HideItmMvmntPanel: function () {

        $(this.ItmMvmntsDivID).hide();

        $(this.DObj.ModalBackDivID).hide();

        this.HideEditableDocumentDateInItemMovements();

        $('#scannerInput').off();

    },

    ShowEditableDocumentDateInItemMovements: function () {

        $('#lbl_revealEditableDate_ItmMvmnts').hide();

        $('#lbl_DocIssueDate_ItmMvmntsPlaceHolder').hide();

        txt_DocIssueDate_ItmMvmntsClientName.SetVisible(true);

    },

    HideEditableDocumentDateInItemMovements: function () {

        $('#lbl_revealEditableDate_ItmMvmnts').show();

        $('#lbl_DocIssueDate_ItmMvmntsPlaceHolder').show().text(txt_DocIssueDate_ItmMvmntsClientName.GetText());

        txt_DocIssueDate_ItmMvmntsClientName.SetVisible(false);

    },

    ShowTrackingRow: function () {

        $('#div_ItmMvmnts_tr_trackingID').val('');

        $('#div_ItmMvmnts_tr_trackingID').show();

    },

    HideTrackingRow: function () {

        $('#div_ItmMvmnts_tr_trackingID').val('');

        $('#div_ItmMvmnts_tr_trackingID').hide();

    },

    ShowDocNumRow: function () {

        $('#txt_ItmMvmntsNum').val('');

        this.ItmMvmntsDocNumTR.show();

    },

    HideDocNumRow: function () {

        this.ItmMvmntsDocNumTR.hide();

        $('#txt_ItmMvmntsNum').val('---');

    },

    AdjDocTypeForOpr: function (o) {

        var iCnt = this.DocTypeItems.length;
        var i, pos;
        this.DrpDocTypes.ClearItems();

        switch (o) {
            case this.Oprs.Ship:
            case this.Oprs.Receive:
                pos = 4;
                for (i = 0; i < iCnt; i++) {
                    var text, value;
                    text = this.DocTypeItems[i].text;
                    value = this.DocTypeItems[i].value;
                    let valueArray = value.split('#');
                    if (valueArray[pos] != 0) {
                        this.DrpDocTypes.AddItem(text, value);
                    }
                }
                break;
            case this.Oprs.Invoice:
                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {
                    pos = 1;
                }
                else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {
                    pos = 2;
                }
                for (i = 0; i < iCnt; i++) {

                    var text, value;
                    text = this.DocTypeItems[i].text;
                    value = this.DocTypeItems[i].value;
                    let valueArray = value.split('#');
                    if (valueArray[pos] != 0 && valueArray[4] == 0) {
                        this.DrpDocTypes.AddItem(text, value);
                    }
                }
                break;
        }
    },

    GenItmMvmntsGrid: function () {

        var that = this;

        var ItmMvmntsTable = $(this.ItmMvmntsTableID);

        var dummyRow = ItmMvmntsTable.find('tr.hdnInVoiceRow');

        var lastRow = ItmMvmntsTable.find('tr').last();

        var atLeastOneSNoProduct = false; //To check if there is at least one product which needs Serial Numbers, if there are none then the Serial Number column itself will be made hidden

        var atLeastOneBNoProduct = false; //To check if there is at least one product which needs Batch Numbers, if there are none then the Batch Number & Expiry date columns itself will be made hidden

        if (this.ItmMvmntsGrdGnrtd == false) {

            this.DObj.MGTable.find('tr.InVoiceRows').each(function (i) {  // we exclude the dummy row

                if ($(this).css('display') === 'none') return; // to exclude one empty row at the bottom
                
                var GObj = that.DObj.GridEditorObj;

                var maxQty = 0, alreadyQty = 0, inputQty = 0;

                var inpTxt = null;

                var newRow = dummyRow.clone(true);  // Add a TR in the list of uploaded documents

                newRow.removeClass('hdnInVoiceRow').addClass('InVoiceRows');
                
                var serialNumbersFlag = GObj.GetRowSerialNumbersFlag(this);

                var batchNumbersFlag = GObj.GetRowBatchNumbersFlag(this);

                $(newRow).insertAfter(lastRow);

                $(newRow).data({    // we define and save some data in the row object itself
                    'p': GObj.GetRowProdID(this),
                    'r': GObj.GetRowRealDtID(this),
                    'rN': i + 2,
                    'eT': 'N',
                    'batchNumbers': ''
                });

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductNumber + ')').html(String(GObj.GetSelectedRowNumber(this)) + '.');

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductCode + ')').html(htmlEncode(GObj.GetRowSKU(this)));

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductSupplierClientCode + ')').html(htmlEncode(GObj.GetRowSupplierSKU(this)));

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductDescription + ')').html(htmlEncode(GObj.GetRowProdDesc(this)));
                                
                switch (that.ItmMvmntsOpr) {
                    case that.Oprs.Ship:
                    case that.Oprs.Receive:
                        maxQty = GObj.GetMGMainQty(this);
                        alreadyQty = GObj.GetMGMovQty(this);
                        break;
                    case that.Oprs.Invoice:
                        maxQty = GObj.GetMGMovQty(this);
                        alreadyQty = GObj.GetMGInvQty(this);
                        break;
                }

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYLabel1 + ')').html(that.GetStrFrmFlt(maxQty));

                $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYLabel2 + ')').html(that.GetStrFrmFlt(alreadyQty));

                inputQty = parseFloat(maxQty - alreadyQty).toFixed(9) * 1;

                inpTxt = $(newRow).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('input[type=text]');

                if (inputQty <= 0) {    // this row is fully shipped/received/invoiced, so we change the background colour of the TR to something greeninsh

                    var stImg = inpTxt.parent().find('i');

                    stImg.removeClass('far fa-exclamation-triangle FontOrange').addClass('far fa-check FontGreen').css('margin', '3px 30px 3px').show();

                    $(newRow).css('background-color', '#F8F8F8');

                    inpTxt.val('0');

                    inpTxt.hide();

                } else {

                    inpTxt.val(that.GetStrFrmFlt(inputQty));

                }

                $(newRow).css('display', ''); // display the new row

                if (inpTxt != null) {   // Add events to TextBoxes

                    inpTxt.off('change').on('change', function (e) {

                        var row = $(this).closest('tr');

                        var stImg = $(this).parent().find('i');

                        var inpQty = 0;

                        switch (that.ItmMvmntsOpr) {
                            case that.Oprs.Ship:
                                if (row.find('td.batchNameTd input').prop('disabled') == false) {
                                    that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(row);
                                }
                                break;
                            case that.Oprs.Receive:
                                if (row.find('td.batchNameTd input').prop('disabled') == false) {
                                    that.GetBatchNumberDetailsFromRowAndSetRowDataAttr(row);
                                }
                                break;
                            case that.Oprs.Invoice:
                                break;
                        }
                          
                        that.HideRWarnImg(row, stImg);

                        that.HideMultipleLocationRowOHQty(row);

                        if ($(this).val() === '') {

                            $(this).val('0');

                        } else {

                            inpQty = that.GetFltFrmStr($(this).val());

                            if (isNaN(inpQty) === true) {

                                that.ShowRWarnImg(row, stImg, 'C');

                                inpQty = 0;

                            } else if (inpQty < 0) {  // 0 qty is allowed to remove the row from the document to be created

                                that.ShowRWarnImg(row, stImg, 'C');

                                inpQty = 0;

                            }

                        }

                        if (that.ItmMvmntsOpr === that.Oprs.Ship) { // here we compare with the On-Hand quantity
                            that.ChkUpdOnHandQty(0, inpQty, 2, row);
                            var avlblQ = that.GetDGMainQty(row) - that.GetDGAlrQty(row);
                            if (row.data('eT') === 'N') {
                                if (inpQty > 0 && inpQty > avlblQ) {
                                    that.ShowRInfoImg(row, stImg);
                                }
                                else {
                                    that.HideRInfoImg(row, stImg);
                                }
                            }
                        }
                        else if (that.ItmMvmntsOpr === that.Oprs.Invoice || that.ItmMvmntsOpr === that.Oprs.Receive) { // here we compare with the invoiced/received qty
                            var avlblQ = that.GetDGMainQty(row) - that.GetDGAlrQty(row);
                            if (inpQty > avlblQ) { that.ShowRWarnImg(row, stImg, 'Q'); }
                        }
                    });
                }

                //Serial Numbers related
                //Serial Numbers are required to be added only in case of inventory transactions.
                //Serial Numbers are not required to be added when creating just an Invoice or when Serial Numbers have not been enabled
                var serNumTxb = $(newRow).children('td.serialNumTd').find('input[type=text]');

                if (serialNumbersFlag === false || that.ItmMvmntsOpr === that.Oprs.Invoice)
                {
                    serNumTxb.remove();
                }
                else
                {
                    atLeastOneSNoProduct = true;
                }

                //Batch Numbers related

                var batchNumTxb = $(newRow).children('td.batchNameTd').find('input[type=text]');
                var pickBatchIcon = $(newRow).children('td.batchNameTd').find('i.showPickBatchIcon');
                var expDateTxb = $(newRow).children('td.expiryTd').find('input[type=text]');

                if (batchNumbersFlag === false || that.ItmMvmntsOpr === that.Oprs.Invoice)
                {
                    batchNumTxb.remove();
                    pickBatchIcon.remove();
                    expDateTxb.remove();
                }
                else
                {

                    atLeastOneBNoProduct = true;

                    if (that.ItmMvmntsOpr === that.Oprs.Ship) {
                        expDateTxb.prop('disabled', true);
                    }

                    if (inputQty <= 0) {    //if items are fully shipped/received we remove the batch controls.

                        batchNumTxb.remove();
                        pickBatchIcon.remove();
                        expDateTxb.remove();

                    }

                }               

                lastRow = newRow;

            });

            //If this is for just an Invoice or there are no products which require Serial Numbers, then hide the Serial Numbers column cell 
            //in all rows including the header row
            ItmMvmntsTable.find('tr:gt(0)').each(function (index) {

                var sNoCell = $(this).children('td.serialNumTd');

                if (atLeastOneSNoProduct === false)
                {
                    sNoCell.hide();
                }
                else
                {
                    sNoCell.show();
                }

            });

            //If this is for just an Invoice or there are no products which require Batch Numbers, then hide the Batch Numbers & Expiry dates column cell 
            //in all rows including the header row
            ItmMvmntsTable.find('tr:gt(0)').each(function (index) {

                var bNoCell = $(this).children('td.batchNameTd');

                var expDateCell = $(this).children('td.expiryTd');

                if (atLeastOneBNoProduct === false) {

                    bNoCell.hide();

                    expDateCell.hide();

                } else {

                    bNoCell.show();

                    expDateCell.show();

                }

            });

            this.ItmMvmntsGrdGnrtd = true;

            if (this.ItmMvmntsOpr === this.Oprs.Ship) {

                this.GetOnHandAvlblty();

            } else {

                this.HideOHQCol();

            }
        }
    },

    GetDGMainQty: function (row) {

        return this.GetFltFrmStr($(row).children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYLabel1 + ')').html());

    },

    GetDGAlrQty: function (row) {

        return this.GetFltFrmStr($(row).children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYLabel2 + ')').html());

    },

    RemItmMvmntsGrid: function () {

        $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr:gt(1)').remove(); //  remove all the rows

        // reset the document type drop down and the document number and comments fields
        this.DrpDocTypes.SetSelectedIndex(-1);

        this.HideDocNumRow();

        $('#txtAreaDocComments').val('');

        $('#txtAreaDocTags').val('');

        $('#hdn_CustomDocFlagStr').val('010000000000#010000000000'); //This is the default -all unchecked flags

        $('#checkCustomDocFlag1').prop('checked', false);

        $('#checkCustomDocFlag2').prop('checked', false);

        $('#checkCustomDocFlag3').prop('checked', false);

        $('#checkCustomDocFlag4').prop('checked', false);

        $('#checkCustomDocFlag5').prop('checked', false);

        $('#checkCustomDocFlag6').prop('checked', false);

        $('#checkCustomDocFlag7').prop('checked', false);

        $('#checkCustomDocFlag8').prop('checked', false);

        $('#checkCustomDocFlag9').prop('checked', false);

        $('#checkCustomDocFlag10').prop('checked', false);

        $('#txt_DocHeaderCustomDate1lInPopUp').val('');

        $('#txt_DocHeaderCustomDate2lInPopUp').val('');

        $('#txt_DocumentRefNoInPopUp').val('');

        this.DrpDocHeaderTermsInPopUp.SetValue(null);

        this.ItmMvmntsGrdGnrtd = false;

        // set the operation comments field as empty
        this.ItmMvmntsCmnts.SetText('');

        //Reset the Shipment Provider and tracking Id fields
        this.DrpShippingProviders.SetSelectedIndex(-1);
        $(this.TxtTrackingID).val('');

        // set the error counters as zero
        this.errTot = 0;
        this.errOHTot = 0;
    },

    ShowOHQCol: function () {

        $('#toggleExtraInvLocationsWrapper').show();

        let that = this;

        $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr:gt(0)').each(function (i) {

            $(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').css('display', '');

        });

    },

    HideOHQCol: function () {

        $('#toggleExtraInvLocationsWrapper').hide();

        let that = this;

        $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr:gt(0)').each(function (i) {

            $(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').css('display', 'none');

        });

    },

    GetOnHandAvlblty: function () {

        var that = this;

        this.ShowOhQMsgDiv('f');

        this.ShowOHQCol();

        this.WSObj.GetOnHandAllItems(DocLayoutJSObj.CDH.ID,
            0,
            function (response) {
                that.ShowOnHandAvlblty(response);
            });    //For Shipping, we fetch the current On-Hand avlblty for all items

    },

    ShowOnHandAvlblty: function (response) {

        var that = this;

        if (response.status == 'S') {

            that.HideOhQMsgDiv();

            that.OnHandQtyHash = {};

            var ItmMvmntsTableRows = $(that.ItmMvmntsTableID).find('.InVoiceRows');

            var qtyDetails = response.prodQtyDetails; /* Number of products */
                       
            var rowCount = qtyDetails.length;  /* Number of products */

            var invLocCount = qtyDetails[0].qtyDtls.length;

            ItmMvmntsTableRows.each(function () { $(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl').html(''); });

            var i = 0;
                              
            for (i = 0; i < rowCount; i++) {

                var curRow = ItmMvmntsTableRows.eq(i);

                var productId = curRow.data('p');

                var r = curRow.data('r');

                if (qtyDetails[i].isService == false && qtyDetails[i].prodID == productId && qtyDetails[i].realTblID == r) {

                    var inputQty = that.GetFltFrmStr(curRow.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('input[type=text]').val());

                    var j = 0;

                    for (j = 0; j < invLocCount; j++) {

                        if (qtyDetails[i].qtyDtls[j].wareID !== DocLayoutJSObj.CDH.InvLocID) {

                            this.ShowMultipleLocationRowOHQty(curRow, qtyDetails[i].qtyDtls[j].wAbrev, qtyDetails[i].qtyDtls[j].qty, qtyDetails[i].qtyDtls[j].nsQty);
                            
                        }

                        else if (qtyDetails[i].qtyDtls[j].wareID === DocLayoutJSObj.CDH.InvLocID) {

                            var onHandQty = that.ChkUpdOnHandQty(qtyDetails[i].qtyDtls[j].qty, inputQty, 1, curRow);

                            that.SetRowOHQty(curRow, onHandQty);

                            var totalOrderedQtyOfThisProdId = 0;

                            var totalAlreadyShippedQty = 0;

                            // To handle the case of the same product in the grid. We aggregate the quantities of same product.
                            ItmMvmntsTableRows.filter(function () {

                                return ($(this).data('p') == productId);

                            }).each(function () {

                                totalOrderedQtyOfThisProdId += that.GetFltFrmStr($(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYLabel1 + ')').html());

                                totalAlreadyShippedQty += that.GetFltFrmStr($(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYLabel2 + ')').html());

                            });

                            this.SetRowRVQty(curRow, qtyDetails[i].qtyDtls[j].nsQty - (totalOrderedQtyOfThisProdId * 1 - totalAlreadyShippedQty * 1));

                        }

                    }

                } else {

                    this.SetRowOHQty(curRow, '-');

                }

            }

            $('#toggleExtraInvLocationsEl').off('click').on('click', function () {              

                switch ($(this).data('state')) {

                    case 'extraLocShow':

                        $(this).data('state', 'extraLocHide');

                        $(this).text(TranslationsObj.HideText);

                        ItmMvmntsTableRows.each(function () { $(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl').show(); });

                        break;

                    case 'extraLocHide':

                        $(this).data('state', 'extraLocShow');

                        $(this).text(TranslationsObj.ShowText);

                        ItmMvmntsTableRows.each(function () { $(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl').hide(); });

                        break;

                }

            });

        }

    },

    ChkUpdOnHandQty: function (q, i, o, row) {
        var hash = this.OnHandQtyHash;
        var p = row.data('p');
        var r = row.data('r');
        var rN = row.data('rN');
        var inp = i;

        var rtQ = q;
        if (o == 1) {   // Set the initial On Hand qty

            if (typeof hash[p] == 'undefined') {
                hash[p] = [];
                hash[p][0] = { 'r': r, 'q': q, 'i': i, 'rN': rN };
            }
            else {  // Here we subtract the input qty for any existing rows and send the corrected OnHand Value for the current row
                var len = hash[p].length;

                var j = 0, totInpQty = 0;

                var qDecimalLength = 0;

                var totInpQtyDecimalLength = 0;

                var decimalToFixed = 0;

                for (j = 0; j < len; j++) {

                    totInpQty = totInpQty + hash[p][j].i;

                }

                rtQ = (q - totInpQty).toFixed(9) * 1; //javascript store numbers in binary form so 56.6-45.2 = 11.399999999999999 but the correct value is 11.4  https://javascript.info/number -- Since the DB field is Decimal(18.9) we round to 9 decimals.

                if (rtQ < 0) { rtQ = 0; }

                hash[p][len] = { 'r': r, 'q': rtQ, 'i': i, 'rN': rN };

            }

            if (row.data('eT') === 'Q') {
                this.HideRWarnImg(row, null);
                this.HideMultipleLocationRowOHQty(row);
            }

            if (rtQ < inp) {
                this.ShowRWarnImg(row, null, 'Q');
                this.ShowMultipleLocationRowOHQty(row);
            } else {
                this.HideMultipleLocationRowOHQty(row);
            }
        }
        else if (o == 2) {  // Check and Update the rows with the same product
            if (typeof hash[p] != 'undefined') {
                var len = hash[p].length;
                var j;
                var rf = false;

                for (j = 0; j < len; j++) {
                    if (hash[p][j].rN != rN && rf === false) continue;

                    rf = true;

                    if (hash[p][j].rN === rN) {
                        rtQ = hash[p][j].q;
                        hash[p][j].i = inp;
                        if (rtQ < inp) {
                            this.ShowRWarnImg(row, null, 'Q');
                            this.ShowMultipleLocationRowOHQty(row);
                        } else {
                            this.HideMultipleLocationRowOHQty(row);
                        }
                    }
                    else {   // update the following rows with the updated On-Hand
                        if (hash[p][j - 1].q - hash[p][j - 1].i < 0) {
                            hash[p][j].q = 0
                        }
                        else {
                            hash[p][j].q = hash[p][j - 1].q - hash[p][j - 1].i;
                        }

                        rtQ = hash[p][j].q;
                        inp = hash[p][j].i;

                        var curRow = $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr').eq(hash[p][j].rN);
                        this.SetRowOHQty(curRow, rtQ);   // update the visible On-Hand qty

                        if (curRow.data('eT') === 'Q') {
                            this.HideRWarnImg(curRow);
                            this.HideMultipleLocationRowOHQty(curRow);
                        }

                        if (rtQ < inp) {
                            this.ShowRWarnImg(curRow, null, 'Q');
                            this.ShowMultipleLocationRowOHQty(curRow);
                        } else {
                            this.HideMultipleLocationRowOHQty(curRow);
                        }
                    }
                }
            }
        }

        return rtQ;
    },

    SetRowOHQty: function (row, qty) {

        var qtyFigure = isNaN(qty) ? '-' : this.GetStrFrmFlt(qty);

        row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('span').html(qtyFigure);

    },

    SetRowRVQty: function (row, qty) {

        var sku = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductCode + ')').html();

        var a = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('a');

        a.html('(' + this.GetStrFrmFlt(qty) + ')');

        if (a.attr('href').indexOf(sku) === -1) {

            a.attr('href', a.attr('href') + sku);

        }

    },

    CheckIfAllExtraLocsAreVisible: function () {

        var that = this;

        var extraLocsAreVisible = true;

        $(that.ItmMvmntsTableID).find('.InVoiceRows').each(function () {

            if ($(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl').is(":visible")) {

                return;

            }

            else {

                extraLocsAreVisible = false;

                return false;

            }

        });

        return extraLocsAreVisible;

    },

    ChangeExtraLocLinkText: function () {
              
        var toggleExtraLocsEl = $('#toggleExtraInvLocationsEl');

        if (this.CheckIfAllExtraLocsAreVisible()) {
            
            toggleExtraLocsEl.data('state', 'extraLocHide');

            toggleExtraLocsEl.text(TranslationsObj.HideText);

        }

        else {
            
            toggleExtraLocsEl.data('state', 'extraLocShow');

            toggleExtraLocsEl.text(TranslationsObj.ShowText);

        }


    },
    
    ShowMultipleLocationRowOHQty: function (row, wAbrev, qty, nsQty) {

        var Wrngs = this.Texts.Wrngs;

        var that = this;

        var extraLocationsTable = row.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl');

        if (!(extraLocationsTable.length)) {

            row.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div').html('');

            row.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div').append('<table cellpadding="0" cellspacing="0" class="smallest Gray MarTop10 extraLocsTableEl"></table>');

            extraLocationsTable = row.children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl');

        }

        if (arguments.length === 1) {

            extraLocationsTable.show();
            
            this.ChangeExtraLocLinkText();

            return;

        }
        
        extraLocationsTable.append('<tr><td>' + wAbrev + ':</td><td class="PadLe10">' + qty + '</td><td class="PadLe10 nsQtyClass">(' + nsQty + ')</td></tr>');
               
        $('.nsQtyClass').off('mouseenter').on('mouseenter', function () { Tip(Wrngs.ShpQtyOhQty); });

        this.ChangeExtraLocLinkText();

    },

    HideMultipleLocationRowOHQty: function (row) {              
        
        row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYOnHandInfo + ')').find('div table.extraLocsTableEl').hide();

        this.ChangeExtraLocLinkText();

    },

    ShowRWarnImg: function (row, img, eT) {

        var stImg = img;

        var TipMsg = '';

        var Wrngs = this.Texts.Wrngs;

        if (img === null) {

            stImg = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('i');

        }

        this.HideRInfoImg(row, stImg);

        this.errTot = this.errTot + 1;

        if (eT === 'C') {

            TipMsg = Wrngs.NNDcmlsOnly;

        }
        else if (eT === 'Q') {

            if (this.ItmMvmntsOpr === this.Oprs.Ship) {

                this.errOHTot = this.errOHTot + 1;

                this.ShowOhQMsgDiv('e');

                TipMsg = Wrngs.ShpQtyOhQtyExc;

                this.ShowMultipleLocationRowOHQty(row);

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Receive) {

                TipMsg = Wrngs.RcvQtyOrdQty;

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Invoice) {

                if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {

                    TipMsg = Wrngs.InvQtyShpQty;

                }
                else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {

                    TipMsg = Wrngs.InvQtyRcvQty;

                }

            }

        }

        stImg.show().off('mouseenter').on('mouseenter', function () { Tip(TipMsg); });
        row.data({ 'eT': eT });
    },

    HideRWarnImg: function (row, img) {

        var stImg = img;

        if (img === null) {

            stImg = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('i');

        }

        $(stImg).hide().off();

        if (row.data('eT') != 'N') {
            this.errTot = this.errTot - 1;
            if (row.data('eT') === 'Q') {
                this.errOHTot = this.errOHTot - 1;
                if (this.errOHTot === 0) {
                    this.HideOhQMsgDiv();
                }
            }
            row.data({ 'eT': 'N' });
        }
    },

    ShowRInfoImg: function (row, img) {

        var stImg = img;

        if (img === null) {

            stImg = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('i');

        }

        var TipMsg = this.Texts.Msgs.ShpQtyOrdQty;

        $(stImg).removeClass('fa-exclamation-triangle FontOrange').addClass('fa-info-circle FontLightGray').show().off('mouseenter').on('mouseenter', function () { Tip(TipMsg); });

    },

    HideRInfoImg: function (row, img) {

        var stImg = img;

        if (img === null) {

            stImg = row.children('td:eq(' + this.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('i');

        }

        $(stImg).hide().removeClass('fa-info-circle FontLightGray').addClass('fa-exclamation-triangle FontOrange').off();

    },

    ShowOhQMsgDiv: function (m) {

        OhQMsgDiv = $(this.ItmMvmntsDivID).children('div:eq(1)');

        if (m === 'f') {    // fetch data

            OhQMsgDiv.find('i').removeClass('fa-exclamation-triangle FontOrange').addClass('fa-spin fa-circle-notch FontLightGray').show();

            OhQMsgDiv.find('span:eq(0)').html(this.Texts.Msgs.FtchOhQty + '...');

            OhQMsgDiv.find('span:eq(1)').hide();

        }
        else if (m === 'e') {

            if (OhQMsgDiv.find('span:eq(1)').is(':visible') === true) return;

            var that = this;

            OhQMsgDiv.find('i').removeClass('fa-spin fa-circle-notch FontLightGray').addClass('fa-exclamation-triangle FontOrange').show();

            OhQMsgDiv.find('span:eq(0)').html(this.Texts.Wrngs.QtyUnAvlbl);

            OhQMsgDiv.find('span:eq(1)').off('click').on('click', function (e) { that.GetOnHandAvlblty(); }).show();

            $('#unvlQtyZero_radio').prop('disabled', false);

            $('#unvlQtyMax_lbl, #unvlQtyZero_lbl').removeClass('RadioLabelDisabled');
            
        }

        OhQMsgDiv.show();

    },

    HideOhQMsgDiv: function () {

        OhQMsgDiv = $(this.ItmMvmntsDivID).children('div:eq(1)');

        OhQMsgDiv.hide();

        OhQMsgDiv.find('i').removeClass('fa-spin fa-circle-notch FontLightGray fa-exclamation-triangle FontOrange').hide();

        OhQMsgDiv.find('span:eq(0)').html('');

        OhQMsgDiv.find('span:eq(1)').hide().off();

        $('#unvlQtyZero_radio').prop('disabled', true);

        $('#unvlQtyMax_lbl, #unvlQtyZero_lbl').addClass('RadioLabelDisabled');

    },

    CreateDocument: function () {

        var that = this;

        var dNumTxt = $('#txt_ItmMvmntsNum');

        var dCmntsTxt = $('#txtAreaDocComments');

        // Check if the Doc Type, Doc Number and Rows are valid
        if (this.DrpDocTypes.GetSelectedIndex() === -1) {
            alert(this.Texts.Wrngs.DocTypeReqd);
            this.DrpDocTypes.SetFocus();
            return;
        }
        else if (dNumTxt.val() === '') {
            alert(this.Texts.Wrngs.DocNumReqd);
            dNumTxt.trigger('focus');
            return;
        }
        else if (this.DrpShippingProviders.GetSelectedIndex() === -1 && $(this.TxtTrackingID).val() !== '') {
            alert('The Shipping Provider is mandatory if the tracking ID is inserted');
            this.DrpShippingProviders.SetFocus;
            return;
        }
        else if (this.errTot > 0) {
            alert(this.Texts.Wrngs.InvldQtys);
            return;
        }

        // Calculate and form the prod, qty object
        this.prodQtyDts = [];

        var nZrws = 0;

        var mShQrws = 0;

        var batchQtyNotEqualToInput = false;

        $(this.ItmMvmntsTableID).find('.itmMvmntsGrdtr:visible').each(function (i) {

            if (i > 0) {    // to ignore the header row

                var inpQ = that.GetFltFrmStr($(this).children('td:eq(' + that.ItmMvmntsRowIndexes.ProductInOutQTYInputTextBox + ')').find('input[type=text]').val());

                //Get the Serial Numbers
                var serNumText = $(this).children('td.serialNumTd').find('input[type=text]').val();

                var serialNumbers = [];

                if (serNumText && (serNumText != '')) {

                    if (serNumText.charAt(0) == ',') {

                        serNumText = serNumText.slice(1, serNumText.length);

                    }

                    if (serNumText.charAt(serNumText.length - 1) == ',') {

                        serNumText = serNumText.slice(0, serNumText.length - 1);

                    }

                    serialNumbers = serNumText.split(',').map(function (item) {

                        return item.trim();

                    });

                }

                //Get Batch Number Text
                var batchNumbers = [];
                var batchQuantities = 0;

                var batchNumText = $(this).data('batchNumbers');
                
                if (batchNumText && (batchNumText !== '')) {
                                        
                    if (batchNumText.charAt(0) == ',') {

                        batchNumText = batchNumText.slice(1, batchNumText.length);

                    }

                    if (batchNumText.charAt(batchNumText.length - 1) == ',') {

                        batchNumText = batchNumText.slice(0, batchNumText.length - 1);

                    }

                    batchNumbers = batchNumText.split(',').map(function (item) {

                        return item.trim();

                    });                    

                    batchNumbers.forEach(batch => {

                        var thisQty = parseFloat(batch.split(StaticObj.separatorString)[1]);

                        batchQuantities = (batchQuantities + thisQty).toFixed(9) * 1;

                    });

                    if ((batchQuantities.toFixed(9) * 1) != parseFloat(inpQ)) {

                        batchQtyNotEqualToInput = true;

                    }

                }

                that.prodQtyDts[i - 1] = { 'prodID': $(this).data('p'), 'qty': inpQ, 'realTblID': $(this).data('r'), 'serialNumbers': serialNumbers, 'batchNumbers': batchNumbers };

                if (inpQ > 0) { nZrws = nZrws + 1; }

                if (inpQ > 0 && inpQ > (that.GetDGMainQty(this) - that.GetDGAlrQty(this))) { mShQrws = mShQrws + 1; }

            }

        });

        if (batchQtyNotEqualToInput) {

            alert('Quantity in batches for each row should be equal to the quantity to ship/receive.');
            return;

        }

        if (nZrws === 0) {

            alert(this.Texts.Wrngs.AtleastOneRow);

        } else {  // Call the webservice

            if (this.ItmMvmntsOpr === this.Oprs.Ship) {

                if (mShQrws > 0) {

                    if (confirm(this.Texts.Msgs.MulShpQtyOrdQty + ' ' + this.Texts.Wrngs.DocAffCostsStock) === false) { return; }

                }

            }

            this.crtDocDts.dTdt = this.DrpDocTypes.GetSelectedItem().value;

            this.crtDocDts.dNum = dNumTxt.val();

            this.crtDocDts.dCmnts = dCmntsTxt.val();

            this.crtDocDts.docIssueDate = txt_DocIssueDate_ItmMvmntsClientName.GetText();

            if (this.DrpShippingProviders.GetSelectedIndex() > -1) {

                this.crtDocDts.dShipID = this.DrpShippingProviders.GetSelectedItem().value;

                this.crtDocDts.dTrackNo = $(this.TxtTrackingID).val();

            } else {

                this.crtDocDts.dShipID = 0;

                this.crtDocDts.dTrackNo = '';

            }

            if ($("#div_ItmMvmnts_chk_trackingNotify").is(':checked')) {

                this.crtDocDts.dTrackNotify = 1;

            }

            this.HideItmMvmntPanel();

            this.DObj.ShowLoading();

            this.DObj.SetCommonHeaderValues();   //Now we fetch the currenct values of all the header fields in the Common Document Header object

            if ($('#hdn_CustomDocFlagStr') != null) {

                this.crtDocDts.dCustomFlags = $('#hdn_CustomDocFlagStr').val();

            }

            if ($('#txt_DocHeaderCustomDate1lInPopUp') != null) {

                this.crtDocDts.dCustomDate1 = $('#txt_DocHeaderCustomDate1lInPopUp').val();

            }

            if ($('#txt_DocHeaderCustomDate2lInPopUp') != null) {

                this.crtDocDts.dCustomDate2 = $('#txt_DocHeaderCustomDate2lInPopUp').val();

            }

            if ($('#txt_DocumentRefNoInPopUp') != null) {

                this.crtDocDts.dRefNo = $('#txt_DocumentRefNoInPopUp').val();

            }

            if ($('#txtAreaDocTags') != null) {

                this.crtDocDts.dTags = $('#txtAreaDocTags').val();

            }
  
            if (this.DrpDocHeaderTermsInPopUp != null && this.DrpDocHeaderTermsInPopUp.GetSelectedItem() != null) {

                this.crtDocDts.dPaymentTerms = this.DrpDocHeaderTermsInPopUp.GetSelectedItem().value;

            }

            if (this.ItmMvmntsOpr === this.Oprs.Ship) {

                this.WSObj.ShipItems(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.crtDocDts,
                    this.prodQtyDts,
                    that.ItmMvmntsCmnts.GetText(),
                    function (response) {
                        that.ItmMvmntsWSSuccess(response,
                            DocLayoutJSObj.CDH,
                            DocLayoutJSObj.InDocument,
                            that.crtDocDts,
                            that.prodQtyDts,
                            that.ItmMvmntsCmnts.GetText()
                        );
                    },
                    function (response) { that.ItmMvmntsWSError(response); });

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Receive) {

                this.WSObj.ReceiveItems(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.crtDocDts,
                    this.prodQtyDts,
                    that.ItmMvmntsCmnts.GetText(),
                    function (response) {
                        that.ItmMvmntsWSSuccess(response,
                            DocLayoutJSObj.CDH,
                            DocLayoutJSObj.InDocument,
                            that.crtDocDts,
                            that.prodQtyDts,
                            that.ItmMvmntsCmnts.GetText()
                        );
                    },
                    function (response) { that.ItmMvmntsWSError(response); });

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Invoice) {

                this.WSObj.InvoiceItems(DocLayoutJSObj.CDH,
                    DocLayoutJSObj.InDocument,
                    this.crtDocDts,
                    this.prodQtyDts,
                    this.ItmMvmntsCmnts.GetText(),
                    function (response) {
                        that.ItmMvmntsWSSuccess(response,
                            DocLayoutJSObj.CDH,
                            DocLayoutJSObj.InDocument,
                            that.crtDocDts,
                            that.prodQtyDts,
                            that.ItmMvmntsCmnts.GetText()
                        );
                    },
                    function (response) { that.ItmMvmntsWSError(response); });

            }

        }

    },

    ItmMvmntsWSSuccess: function (response,
        JSObjCDH,
        JSObjInDocument,
        crtDocDts,
        prodQtyDts,
        Cmnts) {

        // called only by services of SalesQuote/SalesOrder/PurchaseOrder

        responseCreatedDoc = response.Item2;

        response = response.Item1;

        var GObj = this.DObj.GridEditorObj;

        this.DObj.HideLoading();

        if (response.OperationStatus === 'S') {

            //We need to use the following line on condition after we get the response of the WS call. GH Issue - #1228
            this.RemItmMvmntsGrid();

            this.DObj.ShowNotification('s', this.DObj.TextStrings.Notifications.ChldDocCrtd + ': ' + htmlEncode(response.DocumentNumber));    // Show Notification

            DocLayoutJSObj.CDH.Status = response.DocumentStatus;

            this.DObj.ManageMoreOpt(this.DObj.MoreOpts.UnConfirm, this.DObj.MoreOptOprs.hide);

            this.DObj.ManageMoreOpt(this.DObj.MoreOpts.Cancel, this.DObj.MoreOptOprs.hide);

            this.UpdateClientWF();

            if (responseCreatedDoc.DocumentChoiceToReturn == DocumentChoices.PurchaseInvoice ||
                responseCreatedDoc.DocumentChoiceToReturn == DocumentChoices.GoodsInboundAndPurchaseInvoice) {

                this.DObj.ManageMoreOpt(this.DObj.MoreOpts.Handling, this.DObj.MoreOptOprs.show);

                this.DObj.ManageMoreOpt(this.DObj.MoreOpts.Handling, this.DObj.MoreOptOprs.enable);

            }
            
            // Update the Main Grid with updated Shipped/Received/Invoiced values
            var updInvQ = false;

            var updMovQ = true;

            if (this.ItmMvmntsOpr === this.Oprs.Ship) {

                if (this.crtDocDts.dTdt.split('#')[1] === '1') { updInvQ = true; }

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Receive) {

                if (this.crtDocDts.dTdt.split('#')[2] === '1') { updInvQ = true; }

            }
            else if (this.ItmMvmntsOpr === this.Oprs.Invoice) {

                updInvQ = true;

                updMovQ = false;

            }

            var that = this;

            this.DObj.MGTable.find('tr.InVoiceRows').each(function (i) {

                if ($(this).css('display') === 'none') return;

                if (updMovQ === true) {

                    GObj.SetMGMovQty(this, that.prodQtyDts[i].qty);

                    if (that.ItmMvmntsOpr === that.Oprs.Ship && GObj.GetMGMovQty(this) > GObj.GetMGMainQty(this)) {

                        GObj.SetMGMainQty(this, GObj.GetMGMovQty(this));

                    }

                }

                if (updInvQ === true) {

                    GObj.SetMGInvQty(this, that.prodQtyDts[i].qty);

                }

            });

            this.DObj.ResetInDocument();

        }
        else {

            this.DObj.ShowNotification('f', response.ErrorMessage);

            //re-show the PopDialog with the inputs the user has given so that he can rectify any mistakes faster
            this.ShowItmMvmntsPanel(this.Oprs.Error);

        }

    },

    ItmMvmntsWSError: function (response) {

        response = response.Item1;

        this.DObj.HideLoading();

        var errorMessage = response._message.length > 0 ? response._message : 'The operation failed to complete. Please contact Technical Support if the issue persists.'

        this.DObj.ShowNotification('f', errorMessage);

    },

    UpdateClientWF: function () {

        this.DObj.UpdateWFProgressArea(this.DObj.ConfirmWFAreaID, 'U');

        if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyShipped) {
            this.DObj.UpdateWFProgressArea(this.ShipWFAreaID, 'P', DocStatusMsgs.PShipped);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyShippedInvoiced) {
            this.DObj.UpdateWFProgressArea(this.ShipWFAreaID, 'P', DocStatusMsgs.PSPI);
            this.DObj.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PSPI);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyShipped) {
            this.DObj.UpdateWFProgressArea(this.ShipWFAreaID, 'F', DocStatusMsgs.FShipped);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
            this.DObj.HideOprBtn(this.ShipBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyReceived) {
            this.DObj.UpdateWFProgressArea(this.RcvWFAreaID, 'P', DocStatusMsgs.PReceived);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyReceivedInvoiced) {
            this.DObj.UpdateWFProgressArea(this.RcvWFAreaID, 'P', DocStatusMsgs.PRPI);
            this.DObj.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PRPI);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyReceived) {
            this.DObj.UpdateWFProgressArea(this.RcvWFAreaID, 'F', DocStatusMsgs.FReceived);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
            this.DObj.HideOprBtn(this.ReceiveBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.PartiallyInvoiced) {
            this.DObj.UpdateWFProgressArea(this.ShipWFAreaID, 'U');
            this.DObj.UpdateWFProgressArea(this.RcvWFAreaID, 'U');
            this.DObj.UpdateWFProgressArea(this.InvWFAreaID, 'P', DocStatusMsgs.PInvoiced);

            this.DObj.HideOprBtn(this.ShipBtn, this.ReceiveBtn);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.InvBtn, this.ClsBtn);
        }
        else if (DocLayoutJSObj.CDH.Status === DocumentStages.FullyInvoiced) {
            this.DObj.UpdateWFProgressArea(this.ShipWFAreaID, 'U');
            this.DObj.UpdateWFProgressArea(this.RcvWFAreaID, 'U');
            this.DObj.UpdateWFProgressArea(this.InvWFAreaID, 'F', DocStatusMsgs.FInvoiced);

            this.DObj.HideOprBtn(this.ReceiveBtn, this.ShipBtn, this.InvBtn);
            if (this.DocReadOnly != 1) this.DObj.ShowOprBtn(this.ClsBtn);
        }
    },

    GetStrFrmFlt: function (fNum) {   // converts a number to its locale representation, basically changing the decimal
        return String(parseFloat(fNum).toFixed(9) * 1).replace('.', this.NumFD);
    },

    GetFltFrmStr: function (str) {    // converts a locale string into floating number, basically changing the decimal
        return +(str.replace(this.NumFD, '#').replace('.', '|').replace(',', '|').replace('#', '.'));
    },

    SetItemsQtyTo: function (qtyVal, selectionCase, docType) {

        that = this;

        $('#tbl_ItmMvmntsGrid tbody tr.InVoiceRows').each(function () {

            var tr = $(this);

            var orderQtyInput = tr.find('.inoutQtyInput');

            var stockCols = tr.find('.inoutQTYColumn');

            var qtyOrdered = that.GetFltFrmStr(stockCols.eq(0).text());

            var qtyShipped = that.GetFltFrmStr(stockCols.eq(1).text());

            var avlStock = docType == 'ship' ? that.GetFltFrmStr(stockCols.eq(2).children('span').first().text()) : 0;

            switch (docType) {

                case 'ship':

                    if (orderQtyInput.length == 0 || orderQtyInput.is(':visible') == false) { break; }

                    if (selectionCase === 'unavailable') {

                        switch (qtyVal) {

                            case 'zero':

                                if (avlStock < qtyOrdered - qtyShipped) {

                                    orderQtyInput.val(0);

                                    orderQtyInput.trigger('change');

                                } else {

                                    orderQtyInput.val(that.GetStrFrmFlt(qtyOrdered - qtyShipped));

                                    orderQtyInput.trigger('change');

                                }

                                break;

                            default:

                                break;

                        }
                    }

                    if (selectionCase === 'all') {

                        switch (qtyVal) {

                            case 'zero':

                                orderQtyInput.val(0);

                                orderQtyInput.trigger('change');

                                break;

                            case 'max':

                                if (avlStock < qtyOrdered - qtyShipped) {

                                    avlStock = that.GetStrFrmFlt(avlStock);

                                    orderQtyInput.val(avlStock);

                                    orderQtyInput.trigger('change');

                                } else {

                                    orderQtyInput.val(that.GetStrFrmFlt(qtyOrdered - qtyShipped));

                                    orderQtyInput.trigger('change');

                                }

                                break;

                            default:

                                break;

                        }
                    }

                    if (qtyVal === 'reset' && selectionCase === 'reset') {

                        orderQtyInput.val(that.GetStrFrmFlt(qtyOrdered - qtyShipped));

                        orderQtyInput.trigger('change');

                    }

                    break;

                case 'receive':

                    if (orderQtyInput.length && orderQtyInput.is(':visible')) {

                        if (selectionCase === 'all') {

                            switch (qtyVal) {

                                case 'zero':

                                    orderQtyInput.val(0);

                                    orderQtyInput.trigger('change');

                                    break;

                                case 'max':                                                                     

                                    orderQtyInput.val(that.GetStrFrmFlt(qtyOrdered - qtyShipped));

                                    orderQtyInput.trigger('change');                                                                     

                                    break;

                                default:

                                    break;

                            }
                        }
                                                
                    }

                    break;

                default:

                    break;
                               
            }

            if (qtyVal === 'reset' && selectionCase === 'reset') {

                orderQtyInput.val(that.GetStrFrmFlt(qtyOrdered - qtyShipped));

                orderQtyInput.trigger('change');

            }

        });
       
    },

    ScanValue: function (element) {

        var that = this;

        if (this.Timers.BarCodeInItemMovementsTimer) { clearTimeout(this.Timers.BarCodeInItemMovementsTimer); }

        this.Timers.BarCodeInItemMovementsTimer = setTimeout(function () { // adds a delay to handle the physical delay in outputting the barcode charscters from the barcode device to the screen 

            that.WSObj.GetProductDetails(element.value, DocLayoutJSObj.CDH, function (productDetails) {

                var passAgain = true;

                var existsInOrder = false;

                $('#tbl_ItmMvmntsGrid tbody tr').each(function () {

                    var tr = $(this);

                    if (tr.is(":visible")) {

                        tdSku = tr.find(".inoutProdCodeColumn");

                        updateInput = tr.find('.inoutQtyInput');

                        if (productDetails.productSKUCode == tdSku.text() && updateInput.length && updateInput.is(':visible')) {

                            existsInOrder = true;

                            tdQuantities = tr.find('.inoutQTYColumn');

                            ordered = tdQuantities.eq(0).text();

                            receivedOrSent = tdQuantities.eq(1).text();

                            left = ordered - receivedOrSent;

                            if (left > 0) {

                                value = parseInt(updateInput.val());

                                newValue = value + 1;

                                if (newValue > left)
                                    return true;

                                updateInput.val(value + 1);

                                updateInput.trigger('change');

                                updateInput.addClass('flashInput');

                                var removeClassFlashInput = setTimeout(function () { updateInput.removeClass('flashInput'); }, 1000);
                                                                
                                //we use [0] to get the DOM element from a jQuery object. 
                                updateInput[0].scrollIntoView({ block: 'nearest' });
                                
                            }

                            passAgain = false;

                            //stop iterating
                            return false;

                        }

                    }

                });

                if (passAgain) {

                    $('#tbl_ItmMvmntsGrid tbody tr').each(function () {

                        var tr = $(this);

                        if (tr.is(":visible")) {

                            tdSku = tr.find(".inoutProdCodeColumn");

                            updateInput = tr.find('.inoutQtyInput');

                            if (productDetails.productSKUCode == tdSku.text() && updateInput.length && updateInput.is(':visible')) {

                                existsInOrder = true;

                                tdQuantities = tr.find('.inoutQTYColumn');

                                value = parseInt(updateInput.val());

                                newValue = value + 1;

                                updateInput.val(value + 1);

                                updateInput.trigger('change');

                                updateInput.addClass('flashInput');

                                var removeClassFlashInput = setTimeout(function () { updateInput.removeClass('flashInput'); }, 1000);
                                                                
                                //we use [0] to get the DOM element from a jQuery object. 
                                updateInput[0].scrollIntoView({ block: 'nearest' });
                                                                                                
                                //stop iterating
                                return false;

                            }

                        }

                    });
                }

                if (productDetails.productSKUCode != null && existsInOrder) {

                    element.value = productDetails.productSKUCode.trim();

                    element.value = '';

                    BeepSoundForScan();

                } else {

                    alert('product not found');

                }

            });

        }, 500);

    }

};

/* Javascript to manage client side editors for a grid using webservices and JQuery */
var MVGridEditorObject = function (o) {

    var that = this;

    /* --- Editor DIV IDS -- */
    this.SKUDivID = '#' + o.FObj.GFIDs.SKUDiv;
    this.SKUImageID = '#' + o.FObj.GFIDs.SKUImageId;
    this.SKUDescDivID = '#' + o.FObj.GFIDs.SKUDescDiv;
    this.QtyDivID = '#' + o.FObj.GFIDs.QtyDiv;
    this.UnitPriceDivID = '#' + o.FObj.GFIDs.UnitPriceDiv;
    this.DiscountDivID = '#' + o.FObj.GFIDs.DiscountDiv;
    this.TaxDivID = '#' + o.FObj.GFIDs.TaxDiv;
    this.RemarksDivID = '#' + o.FObj.GFIDs.RemarksDiv;
    this.ExpectedDatesDivID = '#' + o.FObj.GFIDs.ExpectedDatesDiv;
    this.RowActionDivID = '#' + o.FObj.GFIDs.RowActionDiv;
    this.ClickNewRowDivID = '#' + o.FObj.GFIDs.ClickNewRowDiv;
    this.AvlblQtyDivID = '#' + o.FObj.GFIDs.AvlblQtyDiv;

    /* Verify/Save buttons are needed here so we can enable/disable them PerformItemsOperation error 1 and error 2 #1537 */
    this.ConfirmBtn = o.FObj.OprRtdIDs.AcceptBtn;
    this.SaveBtn = o.FObj.OprRtdIDs.SaveBtn;

    this.LockGridWebServices = false;

    /* Row Editor Controls */
    this.UseBarcodeChk = $('#' + o.FObj.GFIDs.UseBCSChk);
    this.chkCopyHeaderDetailsToDocID = $('#' + o.FObj.GFIDs.chkCopyHeaderDetailsToDoc);
    this.SKUTxtBox = $('#' + o.FObj.GFIDs.SKUDiv).find('input.InvoiceGridFieldEditorTextBox');
    this.SKUDescTxtBox = $('#' + o.FObj.GFIDs.SKUDescDiv).find('input.InvoiceGridFieldEditorTextBox');
    this.QtyTxtBox = $('#' + o.FObj.GFIDs.QtyDiv).find('input.InvoiceGridFieldEditorTextBox');
    this.UnitPriceTxtBox = $('#' + o.FObj.GFIDs.UnitPriceDiv).find('input.InvoiceGridFieldEditorTextBox');
    this.RemarksTxtBox = $('#' + o.FObj.GFIDs.RemarksDiv).find('input.InvoiceGridFieldEditorTextBox');
    this.ExpectedDateEarliestTxtBox = $('#' + o.FObj.GFIDs.ExpectedDatesDiv).find('input.InvoiceGridFieldEditorTextBoxDateEarliest');
    this.ExpectedDateLatestTxtBox = $('#' + o.FObj.GFIDs.ExpectedDatesDiv).find('input.InvoiceGridFieldEditorTextBoxDateLatest');

    this.DrpTaxes = o.FObj.GFIDs.TaxesDrpDown;
    this.DrpDiscounts = o.FObj.GFIDs.DiscountsDrpDown;

    this.SNoTknBox = typeof tkboxDoccc == 'undefined' ? null : tkboxDoccc;

    /* Pricing Edit Permissions */
    this.PriceEditPermission = o.FObj.GFIDs.PriceEditPerm;
    this.SKUTextAutoCompleteID = '#' + o.FObj.GFIDs.AJTKAutoCompID;

    /* Grid Related */
    this.GridClientID = $(o.FObj.GFIDs.GridID.GetMainElement()).find('table.dxgvTable_MV');       //Client ID of the Grid
    this.GridRowCount = o.FObj.GFIDs.GridID.GetVisibleRowsOnPage() - 1;

    /* Tabs related - we need the ID of the Product Details tab */
    this.ProdDtlsTabID = '#' + o.FObj.HFldIDs.ProdTab;

    /* Totals related elements in the Grid Footer */
    this.GridTotalsElements.TotalQtyElem = o.FObj.GFIDs.FooterTotQtyElem;
    this.GridTotalsElements.TotalDiscountsElem = o.FObj.GFIDs.FooterTotDiscountsElem;
    this.GridTotalsElements.TotalTaxesElem = o.FObj.GFIDs.FooterTotTaxesElem;
    this.GridTotalsElements.TotalAmountElem = o.FObj.GFIDs.FooterPriceTotalElem;

    /* Number Format */
    this.NumberFormat.Decimal = o.FObj.DocRelated.NFD;
    this.NumberFormat.ThousandsSeparator = o.FObj.DocRelated.NFT;

    /* Focus Elements -> SKU Textbox and Qty TextBox primarily */
    this.FocusElements.SKUTxtBoxID = this.SKUTxtBox.attr('id');
    this.FocusElements.ProdDescTxtBoxID = this.SKUDescTxtBox.attr('id');
    this.FocusElements.QtyTxtBoxID = this.QtyTxtBox.attr('id');
    this.FocusElements.UnitPriceTxtBoxID = this.UnitPriceTxtBox.attr('id');

    /* Entity TextBox & Currency Drop Down */
    this.EntityAuCmTxtID = '#' + o.FObj.HFldIDs.Entity;
    this.EntityImgID = '#' + o.FObj.HFldIDs.EntityInfoLoaderImg;
    this.DrpCurrencies = o.FObj.HFldIDs.CurrencyDrpDown;

    /* Clipboard related */
    this.CBPasteElemID = '#' + o.FObj.GFIDs.CBPaste;

    /* Showing error messages */
    this.ErrorPanelDivID = '#' + o.FObj.GFIDs.ErrPanelDiv;
    this.ErrorMessageDivID = '#' + $(this.ErrorPanelDivID).find('div:first').attr('id');

    /* Set the error messages */
    this.TextStrings = o.TextStrings;

    /* This is the JS Class object which provides interface with the Web services */
    this.WSObj = o.WSFunctionsClassObject;
    /* ------------------ */
    this.LastEditorArray = document.getElementById(o.FObj.GFIDs.EditorsHDNField).value.split(',');

    this.EditorArrayIndices = { UnitPrice: 0, Discount: 1, Tax: 2, Remarks: 3, ExpectedDates: 4, RowAddField: 5, LineTotal: 6 };

};

MVGridEditorObject.prototype = {

    /* --- Editor DIV IDS -- */
    SKUDivID: '',
    SKUImageID: '',
    SKUDescDivID: '',
    QtyDivID: '',
    UnitPriceDivID: '',
    DiscountDivID: '',
    TaxDivID: '',
    RemarksDivID: '',
    ExpectedDatesDivID: '',
    RowActionDivID: '',
    SNoDivID: '#div_InvoiceRowSNos', //ID for the DIV containing the Input control for Serial Numbers
    BNoDivID: '#div_InvoiceRowBNos',
    ClickNewRowDivID: '',
    AvlblQtyDivID: '',

    /* Row Editor Controls */
    SKUTxtBox: null,
    SKUDescTxtBox: null,
    QtyTxtBox: null,
    UnitPriceTxtBox: null,
    RemarksTxtBox: null,
    ExpectedDateEarliestTxtBox: null,
    ExpectedDateLatestTxtBox: null,
    SNoTknBox: null,
    UseBarcodeChk: null,
    chkCopyHeaderDetailsToDocID: '',

    /* AjaxControlToolKit - Styled AutoCompleteBehaviour ID */
    SKUTextAutoCompleteID: '',

    /* Editor Drop Down IDs for Taxes & Discounts */
    DrpTaxes: null,
    DrpDiscounts: null,

    /* Price Edit Permissions */
    PriceEditPermission: false,

    /* Grid Related */
    GridClientID: '',       //Client ID of the Grid
    GridRowCount: 0,
    MGTable: null,

    /* Tabs related - we need the ID of the Product Details tab */
    ProdDtlsTabID: '',

    /* Totals related elements in the Grid Footer */
    GridTotalsElements: { 'TotalQtyElem': null, 'TotalDiscountsElem': null, 'TotalTaxesElem': null, 'TotalAmountElem': null },

    /* Number Format */
    NumberFormat: { 'Decimal': '', 'ThousandsSeparator': '' },

    /* Focus Elements -> SKU Textbox and Qty TextBox primarily */
    FocusElements: { 'SKUTxtBoxID': '', 'QtyTxtBoxID': '', 'ProdDescTxtBoxID': '', 'UnitPriceTxtBoxID': '' },

    /* various timers used in this implementation */
    Timers: { 'FetchQtyTimer': null, 'ShowQtyTimer': null, 'HideDisplayErrTimer': null, 'focusOutForBarcodeScannerTimer': null },

    /* Miscellaneous */
    Misc: { 'ShowQuantityDetailsWaitCount': 4 },
    LockGridWebServices: false,

    /* Entity TextBox & Currency Drop Down */
    EntityImgID: '',
    EntityAuCmTxtID: '',
    DrpCurrencies: null,

    LastEditorArray: [],
    EditorArrayIndices: null,
    IsRowNew: true,
    CurrentClickedRow: 0,
    ClickedInEditors: false,
    EditorsAreHidden: true,
    FetchAvailabilityInfo: false,
    CurrentRow: null,
    IsCurrentRowEdited: false,
    IsCurrentRowUpdating: false,
    CurrentRowProdID: 0,
    CurrentRowSKUCode: '',
    CurrentRowSKUDesc: '',
    CurrentRowQty: 0,
    CurrentRowQtyUnit: '',
    CurrentRowUnitPrice: 0,
    CurrentRowDiscount: 0,
    CurrentRowDiscountDetails: '',
    CurrentRowTax: 0,
    CurrentRowTaxDetails: '',
    CurrentRowLineTotal: 0,
    CurrentRowRemarks: '',
    CurrentRowExpectedDateEarliest: '',
    CurrentRowExpectedDateLatest: '',
    CurrentRowExpectedDatesToolTip: '',
    CurrentRowImage: '',
    CurrentRowSupplierSKU: '',
    CurrentRowSerialNumbers: '',
    CurrentRowBatchNumbers: '',

    /* Quantity Details related */
    ShowQDtls: false,
    CurrentRowSKUAvlbility: 0,
    CurrentRowSKUPrvQty: 0,
    CurrentRowSKUCurQty: 0,
    CurrentRowSKUQtyExhstd: 0,

    /* Pricing Details related */
    PricingDetails: [],
    SelectedPricing: null,

    TempProdID: 0,
    TempSKUCode: '',
    TempSKUDesc: '',
    TempQty: '',
    TempUOM: '',
    TempUnitPrice: '',
    TempDisID: 0,
    TempDisLabel: '',
    TempTaxID: 0,
    TempTaxLabel: '',
    TempRemarks: '',
    TempExpectedDateEarliest: '',
    TempExpectedDateLatest: '',
    TempExpectedDatesToolTip: '',
    TempImage: '',
    TempSupplierSKU: '',
    TempRequiresSerialNumbers: false,
    TempSerialNumbers: [],
    TempRequiresBatchNumbers: false,
    TempBatchNumber: '', //TODO: make a list of batch numbers for the future implementation of many batches in one row
    TempBatchNumberExpiryDate: '',
    SKUTextBoxVal: '',
    TextStrings: {
        'GetProdDetailsErrors': {
            'PNF': '',
            'PNFA': '',
            'PNB': '',
            'PNBA': '',
            'PNT': '',
            'MO': ''
        },
        'Warnings': {
            'ReqField': '',
            'UnitPriceErr': '',
            'TooManyDecimals': '',
            'TooLargeNumber': '',
            'QtyErr': '',
            'QtyGtr': '',
            'RowNotUpdated': '',
            'SelectEntity': '',
            'EntitySelectionDisabled': ''
        },
        'ProductCode': '',
        'ProductDesc': '',
        'Quantity': '',
        'UnitPrice': '',
        'QtyInDoc': '',
        'QtyAvlbl': '',
        'QDtlOrdd': '',
        'QDtlShpd': '',
        'QDtlRcvd': '',
        'QDtlInvd': ''
    },
    /* Showing error messages */
    ErrorPanelDivID: '',
    ErrorMessageDivID: '',

    /* Clipboard related */
    CBPasteElemID: '',
    GridRowUpdatingArray: [],
    /* Adding click events to the Grid and the Editors - This requires a ScriptManagerProxy (if there is a Master page) to include the Servicereference which in turn will create the JS Class object */
    WSObj: null,
    /* ------------------ */

    makeGridEditable: function () {

        var that = this;

        $(this.GridClientID).find('td.H_inoutCommandsColumn').removeClass('H_inoutProdPriceColumn_hidden').end().find('td.inoutCommandsColumn').removeClass('inoutProdPriceColumn_hidden').end().find('td.F_inoutTranspColumnComAll').removeClass('F_inoutGrayColumn_hidden');

        this.initializeGridRowHandlers();

        $(this.GridClientID).find('tr.InVoiceRows').last().show(); // show the new row

        this.ShowClickNewRow(false); //Show the Click New Row div

        this.initializeGridEditorHandlers();

        $('#div_barcode').show();

        this.UseBarcodeChk.off().on('change', function (e) {

            that.WSObj.SetUserUseBarcodeChoice($(this).is(':checked'));

            // disable autocomplete when barcode is checked
            if ($(this).is(':checked')) {

                DocLayoutJSObj.UnBindAutocompleteToSKUTextBox();

            }
            else {

                DocLayoutJSObj.BindAutocompleteToSKUTextBox();

            }

        });

        // enable autocomplete when barcode is not checked
        if (this.UseBarcodeChk.is(':checked') == false) {

            DocLayoutJSObj.BindAutocompleteToSKUTextBox();

        }

        // Set the click handler for the Paste button in the Clipboard
        $(this.CBPasteElemID).off().on('click', function (e) { that.PasteFromClipboard(); }).show();

        if ($(this.GridClientID).find('tr.InVoiceRows').length == 1 && (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit)) {  //Check if this is a new transaction and make the first row editable

            var t = setTimeout(function () { $(that.ClickNewRowDivID).trigger('click'); }, 20);

        }

    },

    makeGridReadOnly: function () {

        var that = this;

        $(this.GridClientID).find('tr.InVoiceRows').each(function () { that.RemoveHandlersFromRow(this); });    //Remove the editing capability of the grid when the quote has been accepted

        $(this.GridClientID).find('td.H_inoutCommandsColumn').addClass('H_inoutProdPriceColumn_hidden').end().find('td.inoutCommandsColumn').addClass('inoutProdPriceColumn_hidden').end().find('td.F_inoutTranspColumnComAll').addClass('F_inoutGrayColumn_hidden');

        if (DocLayoutJSObj.CDH.Status !== DocumentStages.Completed) { $(this.GridClientID).find('tr.InVoiceRows').last().hide(); }

        $(this.GridClientID).off();

        this.HideClickNewRow();

        if (this.DrpDiscounts) $(this.DrpDiscounts.GetInputElement());

        if (this.DrpTaxes) $(this.DrpTaxes.GetInputElement());

        //Remove any handlers for Serial Number input control
        if (this.SNoTknBox) $(this.SNoTknBox.GetInputElement()).off();

        // Remove the click handler for the Paste button in the Clipboard
        $(this.CBPasteElemID).off().hide();

        $('#div_barcode').hide();

        this.UseBarcodeChk.off();

    },

    initializeGridEditorHandlers: function () {

        var that = this;

        var lastEditorDesc = '';

        var focusOutForBarcodeScanner = function () {

            if (that.Timers.focusOutForBarcodeScannerTimer) clearTimeout(that.Timers.focusOutForBarcodeScannerTimer);

            if (that.IsRowNew && that.UseBarcodeChk.is(':checked') && that.SKUTxtBox.val() !== '') {

                that.Timers.focusOutForBarcodeScannerTimer = setTimeout(function () {

                    that.SKUTxtBox.trigger('blur');

                    BeepSoundForScan();

                }, 700);

            }

        }

        this.SKUTxtBox.off('focusout').on('focusout', function () {

            $(that.SKUTextAutoCompleteID).css('display', 'none');

            if ($(this).val() != that.SKUTextBoxVal) {

                that.GetProductDetails($(this).val());

                that.IsCurrentRowEdited = true;

            }

        }).on('keydown', function (e) { // don't do off('keydown') here in the SKUTxtBox;

            that.CheckKeyAndHideEditors(e, this);

        });

        if ("onpropertychange" in this.SKUTxtBox[0]) {    //For Internet Explorer

            this.SKUTxtBox[0].attachEvent("onpropertychange", $.proxy(function () {

                if (event.propertyName == "value") {

                    focusOutForBarcodeScanner();

                }

            }, this.SKUTxtBox[0]));

        } else {

            this.SKUTxtBox[0].addEventListener("input", function () {   //For other browsers

                focusOutForBarcodeScanner();

            }, false);

        }

        this.SKUDescTxtBox.off('change').on('change', function () {

            that.IsCurrentRowEdited = true;

        }).off('keydown').on('keydown', function (e) {

            that.CheckKeyAndHideEditors(e, this);

        });

        this.QtyTxtBox.off('change').on('change', function () {

            that.IsCurrentRowEdited = true;

        }).off('focusin').on('focusin', function () {

            if (($(this).val() == '' || $(this).val() == '0')) { $(this).val('1'); }

            $(this).trigger('select');

            if (that.SKUTxtBox.val() != '') { that.ShowAvailableQuantity(false); }

        }).off('focusout').on('focusout', function () { that.HideAvailableQuantity(); });

        this.UnitPriceTxtBox.off('change').on('change', function () { that.IsCurrentRowEdited = true; $(this).data('tip', 'Manually set'); });

        this.RemarksTxtBox.off('change').on('change', function () { that.IsCurrentRowEdited = true; });

        if (this.DrpDiscounts != null) { this.DrpDiscounts.SelectedIndexChanged.AddHandler(function (s, e) { that.IsCurrentRowEdited = true; that.UnitPriceTxtBox.data('tip', 'Manually set'); }); }

        if (this.DrpTaxes != null) { this.DrpTaxes.SelectedIndexChanged.AddHandler(function (s, e) { that.IsCurrentRowEdited = true; that.UnitPriceTxtBox.data('tip', 'Manually set'); }); }

        this.ExpectedDateEarliestTxtBox.off('change').on('change', function () {

            that.IsCurrentRowEdited = true;

        });

        this.ExpectedDateLatestTxtBox.off('change').on('change', function () {

            that.IsCurrentRowEdited = true;

        });

        $(that.RowActionDivID).find('i:nth-child(1)').on('click', function (event) { that.VerifyCheckPostAndShowNewRow(); }); //Row Add

        $(that.RowActionDivID).find('i:nth-child(2)').on('click', function (e) { that.HideAllEditors(); that.PutOriginalValuesBack(); }); //Row Cancel

        //Add event handlers for the Serial Number Token Box
        if (this.SNoTknBox) {

            var tokenQty = 0;

            var tokenBoxScanTimer = null;

            this.SNoTknBox.UserInput.AddHandler(function (s, e) {

                var useScanner = that.UseBarcodeChk.is(':checked');

                if (useScanner == true) {

                    if (tokenBoxScanTimer) clearTimeout(tokenBoxScanTimer);

                    tokenBoxScanTimer = setTimeout(function () {

                        var getSerialNumber = s.GetInputElement().value;

                        s.GetInputElement().value = getSerialNumber + ',';

                        if (s.GetInputElement().value == ',') {

                            s.GetInputElement().value = '';

                        } else {

                            BeepSoundForScan();

                        }

                    }, 500);

                }

            });

            this.SNoTknBox.TokensChanged.AddHandler(function (s, e) {

                //If Serial Numbers have been modified
                that.IsCurrentRowEdited = true;

                //If there are still any tokens in the TokenBox and qty hasn't been updated, then set it equal to the number of Serial Numbers
                var tokenCollection = serialNumberInput(s.GetTokenCollection());

                //Update the Quantity field if the quantity has not been entered
                var qty = that.GetFltFrmStr(that.QtyTxtBox.val());

                if (tokenCollection.length > 0 && (isNaN(qty) || qty == 1 || qty == tokenQty)) {

                    that.QtyTxtBox.val(tokenCollection.length);

                    that.ShowPricingDetails(); //Update the Pricing according to the pricing rules based on quantity

                }

                tokenQty = tokenCollection.length;

            });

            //Update the width of the token box div according to the table row
            var jQRow = $(this.GridClientID).find('tr.InVoiceRows').last();

            //The width is calculated as follows
            //The width of the whole TR element. From this the widths of the Row Number column and Command column are subtracted
            //The width is then further adjusted for paddings in each of those TDs

            $(this.SNoDivID).css('width', jQRow.find('td.inoutProdCodeColumn').width() + jQRow.find('td.inoutProdDescColumn').width() - 8 - 2).css('z-index', 2);
        }

        if ($(this.BNoDivID)) {

            $(this.BNoDivID).find('input').each(function () {
                $(this).off('change').on('change', function () {
                    
                    //If Batch Numbers have been modified
                    that.IsCurrentRowEdited = true;

                });
            });

            $(this.BNoDivID).css('z-index', 2);

        }

        //initialize the Hide in the Row Error panel
        $(that.ErrorPanelDivID).find('span').off('click').on('click', function (e) { that.HideErrorMessage(); });

        // We need to see which will be the last editor in the Inout row, so that the TAB action can be bounded to that editor
        //The last editor can be, Remarks, ExpectedDateLatestTxtBox, Discounts, Taxes, Unit Price, Quantity, 

        lastEditorDesc = '';

        if (that.LastEditorArray[that.EditorArrayIndices.ExpectedDates] == '1') {

            lastEditorDesc = 'ExpectedDateLatest';

            this.ExpectedDateLatestTxtBox.off('keydown').on('keydown', function (event) {

                that.LastEditorTAB(this, event);

            });

        }

        if (that.LastEditorArray[that.EditorArrayIndices.Remarks] == '1') {

            if (lastEditorDesc == '') {

                lastEditorDesc = 'Remarks';

                this.RemarksTxtBox.off('keydown').on('keydown', function (event) {

                    that.LastEditorTAB(this, event);

                });

            } else {

                this.RemarksTxtBox.off('keydown').on('keydown', function (e) {

                    if (that.LastEditorArray[that.EditorArrayIndices.Remarks] != '1') {

                        that.LastEditorTAB(this, e);

                    } else {

                        that.CheckKeyAndHideEditors(e, this);

                    }

                });

            }

        }

        if (that.LastEditorArray[that.EditorArrayIndices.Tax] == '1' && this.PriceEditPermission === true) {

            if (lastEditorDesc == '') {

                lastEditorDesc = 'Tax';

                $(that.DrpTaxes.GetInputElement()).off('keydown').on('keydown', function (event) { that.LastEditorTAB(this, event); });

            } else {

                $(that.DrpTaxes.GetInputElement()).off('keydown').on('keydown', function (e) { that.CheckKeyAndHideEditors(e, this); });

            }

        }

        if (that.LastEditorArray[that.EditorArrayIndices.Discount] == '1' && this.PriceEditPermission === true) {

            if (lastEditorDesc == '') {

                lastEditorDesc = 'Discount';

                $(that.DrpDiscounts.GetInputElement()).off('keydown').on('keydown', function (event) { that.LastEditorTAB(this, event); });

            } else {

                $(that.DrpDiscounts.GetInputElement()).off('keydown').on('keydown', function (e) { that.CheckKeyAndHideEditors(e, this); });

            }

        }

        if (that.LastEditorArray[that.EditorArrayIndices.UnitPrice] == '1' && that.LastEditorArray[that.EditorArrayIndices.LineTotal] == '1' && this.PriceEditPermission === true) {

            if (lastEditorDesc == '') {

                lastEditorDesc = 'UnitPrice';

                this.UnitPriceTxtBox.off('keydown').on('keydown', function (event) {

                    that.LastEditorTAB(this, event);

                });

            } else {

                this.UnitPriceTxtBox.off('keydown').on('keydown', function (e) {

                    if (that.LastEditorArray[that.EditorArrayIndices.Discount] != '1' && (that.DrpDiscounts && !that.DrpDiscounts.GetEnabled()) && (that.DrpTaxes && !that.DrpTaxes.GetEnabled())) {

                        that.LastEditorTAB(this, e);

                    } else {

                        that.CheckKeyAndHideEditors(e, this);

                    }

                });

            }

        }

        if (lastEditorDesc == '') {

            lastEditorDesc = 'Qty';

            this.QtyTxtBox.off('keydown').on('keydown', function (event) {

                that.LastEditorTAB(this, event);

            });

        } else {

            this.QtyTxtBox.off('keyup').on('keyup', function (e) {

                if (!that.CheckKeyAndHideEditors(e, this) && e.which !== 9) that.ShowPricingDetails();

            });

        }

        $(that.SKUImageID).off('resize').on('resize', function (e) { if (that.CurrentRow != null && that.EditorsAreHidden == false) { that.ShowSKUImage('', that.CurrentRow, 1); } });

    },

    initializeGridRowHandlers: function () {

        var that = this;

        var resizeTimer = null;

        that.GridRowUpdatingArray = []; that.GridRowUpdatingArray.length = that.GridRowCount + 1;

        for (var i = 0; i < that.GridRowUpdatingArray.length; i++) { that.GridRowUpdatingArray[i] = false; }  //Initialize the updating array

        $(that.GridClientID).find('tr.InVoiceRows').each(function (i) { that.AddHandlersToRow(this); });

        $(that.GridClientID).find('tr.dxgvFooter_MV').children('td').last().prev().css('border-right', '1px solid #DDD');    //To set the right border on the last footer cell

        $(that.GridClientID).off('resize').on('resize', function (event) {

            if (resizeTimer) clearTimeout(resizeTimer);

            if (that.EditorsAreHidden == false && that.IsCurrentRowUpdating == false && $(that.ProdDtlsTabID).is(':visible') == true) {

                resizeTimer = setTimeout(function () {

                    that.OnlyResizeEditors(that.CurrentRow);

                    if ($(that.AvlblQtyDivID).css('display') != 'none') {

                        that.ShowAvailableQuantity(true);

                    }

                }, 150);

            }
            else {

                if ($(that.ClickNewRowDivID).css('visibility') == 'visible' && $(that.ProdDtlsTabID).is(':visible') == true) {

                    resizeTimer = setTimeout(function () {

                        that.ShowClickNewRow(true);

                    }, 150);

                }

            }

        });

        $(that.ClickNewRowDivID).off('click').on('click', function (e) { $(that.GridClientID).find('tr.InVoiceRows').last().trigger('click'); });

    },

    AddHandlersToRow: function (row) {

        var that = this;

        $(row).on('click', function (event) {

            $(that.SKUTextAutoCompleteID).css('display', 'none');

            that.ShowAllEditors(this, false);

        });

        $(row).on('mouseenter', function (e) {

            $(this).find("td.inoutCommandsColumn").css("opacity", "1");

        }).on('mouseleave', function (e) {

            $(this).find("td.inoutCommandsColumn").css("opacity", "0.2");

        });  //Set the hovering for each row

        $(row).find('td.inoutCommandsColumn i.fa-trash-alt').on('click', function (e) {

            e.stopPropagation();

            if (that.LockGridWebServices == true) return;

            that.HideAllEditors();

            that.PutOriginalValuesBack();

            that.DeleteSelectedRow($(this).parent('td').parent('tr'), this);

        });

        $(row).children('td.inoutCommandsColumn').css('opacity', '0.2'); //Set the icons in the command column at less opacity

    },

    RemoveHandlersFromRow: function (r) {

        $(r).off();

        $(r).children('td.inoutCommandsColumn').css('opacity', 1);

        $(r).find('td.inoutCommandsColumn i').off();

    },

    AddImageDisplayHandlerToRow: function (row) {

        var that = this;

        $(row).children('td.inoutProdCodeColumn').children('span').on('mouseenter', function () {

            var productSKU = $(row).children('td.inoutProdCodeColumn').children('span').text();

            if (that.GetRowProdImg(row).length > 0 && productSKU.length > 0) {

                if ($("#" + $(row).children('td.inoutProdCodeColumn').children('span').prop('id') + ":hover").length > 0) {

                    that.ShowSKUImage(that.GetRowProdImg(row), row, 0); /* ShowSKUImage will display the image only if the doc type is set to display the image*/

                }

            }

        }).on('mouseleave', function () {

            that.HideSKUImage();

        });

    },

    ShowClickNewRow: function (onlyResizeFlag) {

        var LastRowElem = $(this.GridClientID).find('tr.InVoiceRows').last();

        var LastRowNumElem = $(LastRowElem).children('td.inoutRowNumColumn');

        $(this.ClickNewRowDivID).position({
            my: "left top+2",
            at: "left top",
            of: LastRowNumElem
        });

        if (!onlyResizeFlag) $(this.ClickNewRowDivID).css('visibility', 'visible');
    },

    HideClickNewRow: function () {

        $(this.ClickNewRowDivID).css('visibility', 'hidden');

        $(this.ClickNewRowDivID).css('top', '0');

        $(this.ClickNewRowDivID).css('left', '0');

    },

    PasteFromClipboard: function () {

        var that = this;

        if (DocLayoutJSObj.CDH.EntityID === 0 && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsTransfer) {   // message saying the Supplier has to be selected first

            alert(this.TextStrings.Warnings.SelectEntity);

            Clipboard.Hide();

            $(this.EntityAuCmTxtID).trigger('focus');

            return;

        }

        ShowLoading();

        if (this.CurrentClickedRow != 0) {

            this.CheckKeyAndHideEditors({ 'which': 27 }, this.SKUTxtBox);

        }

        // send request to a webservice
        this.WSObj.PasteFromClipboard(
            DocLayoutJSObj.CDH,
            function (response) {

                HideLoading();

                if (response.requestStatus === 'F') {

                    // the response is of the form: PNBA~0001~2607#stacktrace
                    var msgToBeDisplayed = '';

                    var tempresponseMsg;

                    if (response.errMsg.indexOf('#') != -1)
                        tempresponseMsg = response.errMsg.split('#')[0]; // if there is the # character in the error string (comes from the test site with the stacktrace)
                    else
                        tempresponseMsg = response.errMsg;

                    var temperrMsg = tempresponseMsg.split('~')[0];

                    var tempProblematicSKU = tempresponseMsg.split('~')[1];

                    var tempProblematicProdId = tempresponseMsg.split('~')[2];

                    switch (temperrMsg) {
                        case 'PNT':
                            msgToBeDisplayed = tempProblematicSKU + ': ' + 'This Clipboard product is not found in the related document and cannot be added to this document.';
                            break;
                        case 'PNF':
                            msgToBeDisplayed = tempProblematicSKU + ': ' + 'This Clipboard product does not exist in your megaventory account.';
                            break;
                        case 'PNFA':
                            msgToBeDisplayed = String.format(tempProblematicSKU + ': ' + 'This Clipboard product does not exist in your megaventory account.', tempProblematicProdId);
                            break;
                        case 'PNB':
                            msgToBeDisplayed = tempProblematicSKU + ': ' + 'This Clipboard product does not have the same supplier as the supplier selected for this document (the Document Type is set to restrict products by supplier).';
                            break;
                        case 'PNBA':
                            msgToBeDisplayed = String.format(tempProblematicSKU + ': ' + 'This Clipboard product does not have the same supplier as the supplier selected for this document (the Document Type is set to restrict products by supplier).', tempProblematicProdId);
                            break;
                        case 'MO':
                            msgToBeDisplayed = tempProblematicSKU + ': ' + 'This Clipboard product is a "Manufactured from Work Order" type of product and cannot be added in this document.';
                            break;
                        default:
                            msgToBeDisplayed = response.errMsg;
                    };

                    if (that.EditorsAreHidden === true) { $(that.ClickNewRowDivID).trigger('click'); }

                    that.HideAllEditors();

                    that.DisplayErrorMessage(msgToBeDisplayed, 'SKU');

                }
                else {

                    that.UpdateRowsAfterPasting(response);

                    //CLear the CLipboard
                    Clipboard.RemoveAllItems();

                }

                Clipboard.Hide();

            },
            function () {

                HideLoading();

                alert(response.errMsg);

            });

    },

    UpdateRowsAfterPasting: function (response) {

        var that = this;

        this.HideAllEditors();

        var prodDetails = response.ProductDetails;

        // we start with the last row of the grid which is empty
        this.CurrentRow = $(this.GridClientID).find('tr.InVoiceRows').last();

        this.RemoveHandlersFromRow(this.CurrentRow);

        for (var i = 0; i < prodDetails.length; i++) {

            //Here we update the new values in the row, we already have the tempProdID, we will update the other variables with the selected values and then transfer those values to the respective TDs
            this.TempProdID = prodDetails[i].ProductID;

            this.TempImage = prodDetails[i].ProductImgURL;

            this.TempUOM = prodDetails[i].ProductUOM;

            this.TempSupplierSKU = prodDetails[i].ProductSupplierSKU;

            this.TempRequiresSerialNumbers = prodDetails[i].ProductRequiresSerialNumbers;
            
            this.TempRequiresBatchNumbers = prodDetails[i].ProductRequiresBatchNumbers;

            this.SKUTxtBox.val(prodDetails[i].ProductSKUCode);

            this.SKUDescTxtBox.val(prodDetails[i].ProductDesc + ' ' + prodDetails[i].ProductVersion);

            this.QtyTxtBox.val(this.GetStrFrmFlt(prodDetails[i].ProductQty));

            this.UnitPriceTxtBox.val('');

            this.SetDiscountDrpDown(response.RowUpdateValues[i].rowDiscountID);

            this.SetTaxDrpDown(response.RowUpdateValues[i].rowTaxID);

            this.RemarksTxtBox.val('');

            this.ExpectedDateEarliestTxtBox.val(response.RowUpdateValues[i].rowExpectedDateEarliest);

            this.ExpectedDateLatestTxtBox.val(response.RowUpdateValues[i].rowExpectedDateLatest);

            this.ExpectedDateLatestTxtBox.prop('title', response.RowUpdateValues[i].rowExpectedDateTip);

            this.UpdateClientRowValues();

            this.ResultAfterRowUpdation(response.RowUpdateValues[i], this.CurrentRow);

            this.AddImageDisplayHandlerToRow(this.CurrentRow);

            this.CurrentRow = this.CreateNewGridRow();

        }

        this.AddHandlersToRow(this.CurrentRow);

        this.CurrentRow = null;

    },

    ShowAllEditors: function (row, onlyResizeFlag) {
        
        var that = this;
        //In case this row was clicked while no action was taken on a previously editable row, the values should be returned back

        if (this.CurrentClickedRow == this.GetSelectedRowNumber(row)) {  //If the same row which is already being edited is clicked again

            if (this.IsRowNew == true) {

                this.SetFocus(this.FocusElements.SKUTxtBoxID);

            }
            else {

                this.ShowQDtls = true; this.SetFocus(this.FocusElements.QtyTxtBoxID);

            }

            return;

        }

        if (this.IsCurrentRowUpdating == false) {

            if (this.CheckRowEditedAndLeft() == true) return;

            this.PutOriginalValuesBack();

        }

        //Get the original values in this row
        this.CurrentRowProdID = this.GetRowProdID(row);
        this.CurrentRowSKUCode = this.GetRowSKU(row);
        this.CurrentRowSKUDesc = this.GetRowProdDesc(row);
        this.CurrentRowQty = this.GetRowQty(row);
        this.CurrentRowQtyUnit = this.GetRowQtyUnit(row);
        this.CurrentRowUnitPrice = this.GetRowUnitPrice(row);
        this.CurrentRowDiscount = this.GetRowDiscountVal(row);
        this.CurrentRowDiscountDetails = this.GetRowDiscountLbl(row);
        this.CurrentRowTax = this.GetRowTaxVal(row);
        this.CurrentRowTaxDetails = this.GetRowTaxLbl(row);
        this.CurrentRowLineTotal = this.GetRowTotal(row);
        this.CurrentRowRemarks = this.GetRowRemarks(row);
        this.CurrentRowExpectedDateEarliest = this.GetRowExpectedDateEarliest(row);
        this.CurrentRowExpectedDateLatest = this.GetRowExpectedDateLatest(row);
        this.CurrentRowExpectedDatesToolTip = this.GetRowExpectedDatesToolTip(row);
        this.CurrentRowImage = this.GetRowProdImg(row);
        this.CurrentRowSupplierSKU = this.GetRowSupplierSKU(row);
        this.CurrentRowSerialNumbers = this.GetRowSerialNumbersFlag(row) == true ? this.GetRowSerialNumbers(row) : '';
        this.CurrentRowBatchNumbers = this.GetRowBatchNumbersFlag(row) == true ? this.GetRowBatchNumbers(row) : '';
        this.TempUOM = this.CurrentRowQtyUnit;
        this.TempSupplierSKU = this.CurrentRowSupplierSKU;
        this.SKUTextBoxVal = this.CurrentRowSKUCode;
        this.CurrentClickedRow = this.GetSelectedRowNumber(row);
        
        if (this.CurrentClickedRow == this.GridRowCount) {

            this.HideClickNewRow();

        } else {

            if (this.EditorsAreHidden == false) {

                this.ShowClickNewRow(false);

            }

        }

        //Move editors to this row
        this.MoveEditors('SKU', row, onlyResizeFlag);

        if (!this.IsRowNew || !this.UseBarcodeChk.is(':checked')) {

            this.MoveEditors('SKUDesc', row, onlyResizeFlag);

            this.MoveEditors('Qty', row, onlyResizeFlag);

            if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') {

                this.MoveEditors('UnitPrice', row, onlyResizeFlag);

                this.UnitPriceTxtBox.data('tip', '');

            }
            else if (this.LastEditorArray[0] == '1') {

                this.UnitPriceTxtBox.val(''); //Reset the value of the hidden unit price field

            }

            if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') { this.MoveEditors('Discount', row, onlyResizeFlag); }

            if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') { this.MoveEditors('Tax', row, onlyResizeFlag); }

            if (this.LastEditorArray[this.EditorArrayIndices.Remarks] == '1') { this.MoveEditors('Remarks', row, onlyResizeFlag); }

            if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') { this.MoveEditors('ExpectedDateLatest', row, onlyResizeFlag); }

            //If Show Image is there then see if there is any image, if yes then show image
            if (this.CurrentRowImage != '' && this.CurrentRowImage != null) {

                this.ShowSKUImage(that.CurrentRowImage, row);

            } else {

                this.HideSKUImage();

            }

            $(row).children('td.inoutCommandsColumn').find('i:first').css('display', 'none');
        }

        this.MoveEditors('AddRow', row, onlyResizeFlag);

        /* Serial Numbers editor 
        Check if this row needs Serial Numbers, if yes, then show the Serial Numbers control, else Hide it
        */
        if (this.GetRowSerialNumbersFlag(row) == true &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote) {

            this.MoveSerialNumbersEditor(row, onlyResizeFlag);

        } else {

            this.HideSerialNumbersEditor();

        }

        if (this.GetRowBatchNumbersFlag(row) == true &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote) {

            this.BindBatchNumbersTextBoxAutocomplete(this.CurrentRowProdID);

            this.MoveBatchNumbersEditor(row, onlyResizeFlag);

        } else {

            this.HideBatchNumbersEditor();

        }

        this.EditorsAreHidden = false;

        this.UseBarcodeChk.attr("disabled", true);

        //Hide the original values in the row
        this.SetRowSKU(row, '');
        this.SetRowProdDesc(row, '');
        this.SetRowQty(row, '');
        this.SetRowQtyUnit(row, '');
        this.SetRowUnitPrice(row, '');
        this.SetRowDiscountLbl(row, '');
        this.SetRowDiscountVal(row, '');
        this.SetRowTaxLbl(row, '');
        this.SetRowTaxVal(row, '');
        this.SetRowTotal(row, '');
        this.SetRowRemarks(row, '');
        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDateEarliest(row, '');
        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDateLatest(row, '');
        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDatesToolTip(row, '');
        this.SetRowSupplierSKU(row, '');
        this.SetRowSerialNumbers(row, ''); 
        this.SetRowBatchNumbers(row, ''); 

        this.PricingDetails = null;
        this.SelectedPricing = null;

        //Disable pricing fields if there are not price edit permissions
        if (this.PriceEditPermission === false)
            this.DisablePricingFields();
        else
            this.EnablePricingFields();

        this.CurrentRow = row;

        this.IsCurrentRowEdited = false;

        if (this.IsRowNew == true) {

            this.TempProdID = 0;

            this.FetchAvailabilityInfo = false;

            this.SetFocus(that.FocusElements.SKUTxtBoxID);

        }
        else {

            this.TempProdID = this.GetRowProdID(row);

            this.FetchAvailabilityInfo = true;

            this.SetFocus(that.FocusElements.QtyTxtBoxID);

        }

    },

    HideAllEditors: function () {

        $('div.InvoiceGridCellFieldEditorDiv').css('visibility', 'hidden');

        $('div.InvoiceGridCellFieldEditorDiv').css('top', '0');

        $('div.InvoiceGridCellFieldEditorDiv').css('left', '0');

        if (this.IsRowNew == false) {

            $(this.CurrentRow).children('td.inoutCommandsColumn').find('i:nth-child(1)').css('display', '');

        }

        this.HideAvailableQuantity();

        this.HideSKUImage();

        this.HideErrorMessage();

        this.HideExpectedDatePickers();

        if (this.CurrentClickedRow == this.GridRowCount) { this.ShowClickNewRow(false); }

        this.EditorsAreHidden = true;

        this.CurrentClickedRow = 0;

        this.IsCurrentRowEdited = false;

        this.UseBarcodeChk.prop('disabled', false);

    },

    OnlyResizeEditors: function (row) {
        //Move editors to this row
        this.MoveEditors('SKU', row, true);
        this.MoveEditors('SKUDesc', row, true);
        this.MoveEditors('Qty', row, true);
        if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') this.MoveEditors('UnitPrice', row, true);
        if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') this.MoveEditors('Discount', row, true);
        if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') this.MoveEditors('Tax', row, true);
        if (this.LastEditorArray[this.EditorArrayIndices.Remarks] == '1') this.MoveEditors('Remarks', row, true);
        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.MoveEditors('ExpectedDateLatest', row, true);
        this.MoveEditors('AddRow', row, true);

        /* Serial Numbers editor 
       Check if this row needs Serial Numbers, if yes, then show the Serial Numbers control, else Hide it
       */
        if (this.GetRowSerialNumbersFlag(row) == true &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote)
            this.MoveSerialNumbersEditor(row, true);
        else
            this.HideSerialNumbersEditor();

        //Move batch numbers editor
        if (this.GetRowBatchNumbersFlag(row) == true &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote)
            this.MoveBatchNumbersEditor(row, true);
        else
            this.HideBatchNumbersEditor();

        if (this.CurrentClickedRow != this.GridRowCount) {
            this.ShowClickNewRow(true);
        }
    },

    MoveEditors: function (fieldName, selectedRow, onlyResizeFlag) {
        
        var whichTD;

        var fieldEditorDivID;

        var fieldEditor;

        if (fieldName == 'SKU') {

            whichTD = 'td.inoutProdCodeColumn';

            fieldEditorDivID = this.SKUDivID;

        }
        else if (fieldName == 'SKUDesc') {

            whichTD = 'td.inoutProdDescColumn';

            fieldEditorDivID = this.SKUDescDivID;

            fieldEditor = this.SKUDescTxtBox;

        }
        else if (fieldName == 'Qty') {

            whichTD = 'td.inoutQTYColumn';

            fieldEditorDivID = this.QtyDivID;

            fieldEditor = this.QtyTxtBox;

        }
        else if (fieldName == 'UnitPrice') {

            whichTD = 'td.inoutProdPriceColumn';

            fieldEditorDivID = this.UnitPriceDivID;

        }
        else if (fieldName == 'Discount') {

            whichTD = 'td.inoutDiscountsColumn';

            fieldEditorDivID = this.DiscountDivID;

        }
        else if (fieldName == 'Tax') {

            whichTD = 'td.inoutTaxesColumn';

            fieldEditorDivID = this.TaxDivID;

        }
        else if (fieldName == 'Remarks') {

            whichTD = 'td.inoutRemarksColumn';

            fieldEditorDivID = this.RemarksDivID;

            fieldEditor = this.RemarksTxtBox;

        }
        else if (fieldName == 'ExpectedDateLatest') {

            whichTD = 'td.inoutExpectedDates';

            fieldEditorDivID = this.ExpectedDatesDivID;

            fieldEditor = this.ExpectedDateLatestTxtBox;

        }
        else if (fieldName == 'AddRow') {

            whichTD = 'td.inoutCommandsColumn';

            fieldEditorDivID = this.RowActionDivID;

        }

        $(fieldEditorDivID).css('width', $(selectedRow).children(whichTD).width()); //Set the width of the DIV first equal to the Grid column, to make the postioning correct

        $(fieldEditorDivID).position({
            my: "left center",
            at: "left center",
            of: $(selectedRow).children(whichTD)
        });

        if (onlyResizeFlag == false) {

            if (fieldName == 'Discount') {

                this.SetDiscountDrpDown(this.GetRowHdnDiscountID(selectedRow));

            } else if (fieldName == 'Tax') {

                this.SetTaxDrpDown(this.GetRowHdnTaxID(selectedRow));

            } else if (fieldName == 'SKU') {

                if ($(selectedRow).children(whichTD).find('span').html() != '') { this.IsRowNew = false; } else { this.IsRowNew = true; }

                this.SKUTxtBox.val(htmlDecode($(selectedRow).children(whichTD).find('span').html()));

            } else if (fieldName == 'UnitPrice') {

                this.UnitPriceTxtBox.val(this.GetRowUnitPrice(selectedRow));

            } else if (fieldName == 'ExpectedDateLatest') {

                this.ExpectedDateEarliestTxtBox.val(this.GetRowExpectedDateEarliest(selectedRow));

                this.ExpectedDateLatestTxtBox.val(this.GetRowExpectedDateLatest(selectedRow));

            } else if (fieldName == 'AddRow') {


            } else {

                fieldEditor.val(htmlDecode($(selectedRow).children(whichTD).find('span:eq(0)').html()));

            }

            $(fieldEditorDivID).css('visibility', 'visible');

        }
    },

    MoveSerialNumbersEditor: function (r, onlyResizeFlag) {
        ///<summary>Method to show and position the Serial Numbers Token Box control</summary>
        ///<param name="r">The TR row element corresponding to which the Control will be positioned.</param>
        //Get the values of existing Serial Numbers
        if (onlyResizeFlag == false && this.SNoTknBox)
            this.SNoTknBox.SetText(this.GetRowSerialNumbers(r));

        //Set the height of the row
        //$(r).css('height', '100px');

        $(this.SNoDivID).position({
            my: 'left top-10',
            at: 'left bottom',
            of: $(this.SKUDivID)
        });

        $(this.SNoDivID).css('visibility', 'visible');
    },

    HideSerialNumbersEditor: function () {
        ///<summary>Method to hide the Serial Numbers Token Box control. This method also clears the Token Box.</summary>

        $(this.SNoDivID).css('visibility', 'hidden').css('top', '0').css('left', '0');
        if (this.SNoTknBox)
            this.SNoTknBox.SetText('');

    },
    
    MoveBatchNumbersEditor: function (r, onlyResizeFlag) {
        ///<summary>Method to show and position the Batch Numbers Token Box control</summary>
        ///<param name="r">The TR row element corresponding to which the Control will be positioned.</param>
        //Get the values of existing Serial Numbers
        if (onlyResizeFlag == false && $(this.BNoDivID).find('input')) {

            //TODO - BATCH 2.00 : If we accept multiple batches per row, this code has to change

            var batchesForDetail = this.GetRowBatchNumbers(r).split(',');

            var batchNameAndDate = batchesForDetail[0].split(StaticObj.separatorString);

            $(this.BNoDivID).find('input').first().val(batchNameAndDate[0]);
            $(this.BNoDivID).find('input').last().val(MV_DateFormatter(batchNameAndDate[2]));

        }

        $(this.BNoDivID).find('input').last().datepicker({
            dateFormat: "M dd, yy",
            onSelect: (d, i) => {
                $(this).focus();
                if (d !== i.lastVal) {
                    $(this).change();                    
                }
            }
        })

        $(this.BNoDivID).position({
            my: 'left top-10',
            at: 'left bottom',
            of: $(this.SKUDivID)
        });

        $(this.BNoDivID).css('visibility', 'visible');

        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsOutbound ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsOutboundAndSalesInvoice ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsTransfer) {

            $(this.BNoDivID).find('input').last().attr('disabled','disabled');

        }
       
    },

    HideBatchNumbersEditor: function () {
        ///<summary>Method to hide the Batch Numbers Token Box control. This method also clears the Box.</summary>

        $(this.BNoDivID).css('visibility', 'hidden').css('top', '0').css('left', '0');
        if ($(this.BNoDivID).find('input'))
            $(this.BNoDivID).find('input').first().val('');

    },

    BindBatchNumbersTextBoxAutocomplete: function (productID) {

        //add autocomplete
        if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsOutbound ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsOutboundAndSalesInvoice ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsTransfer) {

            DocLayoutJSObj.docRowBatchNumberShippingAC($('#BatchNumbersTextBox'), productID, 0);

        }
        else if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierNoCredit) {
            
            DocLayoutJSObj.docRowBatchNumberReturnAC($('#BatchNumbersTextBox'), productID, DocLayoutJSObj.CDH.ParentDocumentID);

        }
        else {

            DocLayoutJSObj.docRowBatchNumberAC($('#BatchNumbersTextBox'));

        }

},

    GetProductDetails: function (SearchText) {

        var that = this;

        this.SKUTextBoxVal = SearchText;

        if (!this.UseBarcodeChk.is(':checked') || !this.IsRowNew)
            this.SetFocus(that.FocusElements.QtyTxtBoxID);
        else
            this.QtyTxtBox.val('1');

        if (DocLayoutJSObj.CDH.EntityID === 0 && DocLayoutJSObj.CDH.DocumentChoice !== DocumentChoices.GoodsTransfer) {   // message saying the Supplier has to be selected first

            this.DisplayErrorMessage(this.TextStrings.Warnings.SelectEntity, 'SKU', this.CurrentRow);
            this.SKUTxtBox.val('');
            this.SKUTextBoxVal = '';
            this.TempProdID = 0;
            $(this.EntityAuCmTxtID).trigger('focus');
            return;
        }

        if (SearchText != '') {

            $(that.SKUDivID).find('#i_ProdPick').removeClass('fa-search').addClass('fa-circle-notch fa-spin');

            if (!this.UseBarcodeChk.is(':checked') || !this.IsRowNew)
                this.DisablePricingFields();

            that.WSObj.GetProductDetails(SearchText, DocLayoutJSObj.CDH, function (response) { that.ShowProductDetails(response); });

        }
        else {
            this.TempProdID = 0;
        }
    },

    ShowProductDetails: function (response) {        //function called by the product details web service after data is received

        $(this.SKUDivID).find('#i_ProdPick').removeClass('fa-circle-notch fa-spin').addClass('fa-search');

        this.SKUDescTxtBox.attr('disabled', false);

        this.UnitPriceTxtBox.attr('disabled', false);

        this.HideErrorMessage();

        if (response.requestResult == 'S') {

            this.TempProdID = response.productID;

            this.TempImage = response.productImgURL;

            this.TempUOM = response.productUOM;

            this.TempSupplierSKU = response.productSupplierSKU;

            if (this.TempImage != '') { this.ShowSKUImage(this.TempImage, this.CurrentRow); } else { this.HideSKUImage(); }

            this.TempRequiresSerialNumbers = response.productRequiresSerialNumbers;

            this.TempRequiresBatchNumbers = response.productRequiresBatchNumbers;

            this.SKUTextBoxVal = response.productSKUCode;

            this.SKUTxtBox.val(response.productSKUCode);

            this.SKUDescTxtBox.val(response.productDesc + ' ' + response.productVersion);

            this.PricingDetails = response.prodPricingDetails;

            if (this.PricingDetails == null) {

                this.UnitPriceTxtBox.val(this.GetStrFrmFlt(response.productPrice));

                this.EnablePricingFields();

            } else { this.ShowPricingDetails(); }

            //Quantity results
            this.FetchAvailabilityInfo = false;

            var qDtlsResponse = {};

            qDtlsResponse.status = 'S';

            qDtlsResponse.errMsg = '';

            qDtlsResponse.prodQtyDetails = response.prodQtyDetails;

            qDtlsResponse.prodPricingDetails = response.prodPricingDetails;

            //If the SKU requires serial numbers, and this is not an SO or PO
            //then even if the BarCode checkbox is checked, the line will not be added automatically
            //User will need to take action accordingly
            //this.IsRowNew &&
            var productRequiresSerialNumberAndDocumentNotSOorPOorQuote = this.TempRequiresSerialNumbers == true &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote

            if (productRequiresSerialNumberAndDocumentNotSOorPOorQuote == true) {

                //Show Serial Numbers Token Box Control 
                this.MoveSerialNumbersEditor(this.CurrentRow, false);
                if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierNoCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientNoCredit) {

                    //Show the QuantityDetails to verify quantity requirements for return document. Otherwise, the row cannot be inserted.
                    this.GetQuantityDetails(response.productID);

                    return;

                } else {

                    //Focus in the Serial Numbers token box.
                    if (this.SNoTknBox) {

                        this.SNoTknBox.Focus();

                    }

                    clearTimeout(this.Timers.ShowQtyTimer);

                    var that = this;

                    this.Timers.ShowQtyTimer = setTimeout(function () { that.ShowQuantityDetails(qDtlsResponse) }, 500);

                    return;

                }

            } else {

                this.HideSerialNumbersEditor();

            }

            var productRequiresBatchNumberAndDocumentNotSOorPOorQuote = this.TempRequiresBatchNumbers == true &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
                DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote

            if (productRequiresBatchNumberAndDocumentNotSOorPOorQuote == true) {

                //Show Batch Numbers Token Box Control 
                this.MoveBatchNumbersEditor(this.CurrentRow, false);

                this.BindBatchNumbersTextBoxAutocomplete(response.productID);

                if (DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplier ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnToSupplierNoCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClient ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientWithCredit ||
                    DocLayoutJSObj.CDH.DocumentChoice == DocumentChoices.GoodsReturnFromClientNoCredit) {

                    //Show the QuantityDetails to verify quantity requirements for return document. Otherwise, the row cannot be inserted.
                    this.GetQuantityDetails(response.productID);

                    return;

                } else {

                    //Focus in the Batch Numbers input box.
                    if (this.BNoDivID) {

                        $(this.BNoDivID).find('input').first().focus();

                    }

                    clearTimeout(this.Timers.ShowQtyTimer);

                    var that = this;

                    this.Timers.ShowQtyTimer = setTimeout(function () { that.ShowQuantityDetails(qDtlsResponse) }, 500);

                    return;

                }

            } else {

                this.HideBatchNumbersEditor();

            }

            if (this.UseBarcodeChk.is(':checked') && this.IsRowNew) {

                this.ShowQuantityDetails(qDtlsResponse);

                this.VerifyCheckPostAndShowNewRow();

                return;

            }

            this.ShowQuantityDetails(qDtlsResponse);

        } else {

            var msgToBeDisplayed = '';

            this.SKUTextBoxVal = '';

            this.HideAvailableQuantity();

            this.HideSKUImage();

            switch (response.errMsg) {
                case 'PNT':
                    msgToBeDisplayed = this.TextStrings.GetProdDetailsErrors.PNT;
                    break;
                case 'PNF':
                    msgToBeDisplayed = this.TextStrings.GetProdDetailsErrors.PNF;
                    break;
                case 'PNFA':
                    msgToBeDisplayed = String.format(this.TextStrings.GetProdDetailsErrors.PNFA, htmlEncode(this.SKUTxtBox.val()));
                    break;
                case 'PNB':
                    msgToBeDisplayed = this.TextStrings.GetProdDetailsErrors.PNB;
                    break;
                case 'PNBA':
                    msgToBeDisplayed = String.format(this.TextStrings.GetProdDetailsErrors.PNBA, response.productID);
                    break;
                case 'MO':
                    msgToBeDisplayed = this.TextStrings.GetProdDetailsErrors.MO;
                    break;
                default:
                    msgToBeDisplayed = response.errMsg;
            };

            this.TempProdID = 0;

            this.TempUOM = '';

            this.TempImage = '';

            this.TempSupplierSKU = '';

            this.SKUDescTxtBox.val('');

            this.UnitPriceTxtBox.val('');

            this.DisplayErrorMessage(msgToBeDisplayed, 'SKU');

        }

    },

    ShowPricingDetails: function () {

        var that = this;

        var d = this.PricingDetails;

        if (!d || d.length === 0) return;

        var qty = this.GetFltFrmStr(this.QtyTxtBox.val());

        var curPrice = this.UnitPriceTxtBox.val();

        var curDis = ($(this.DiscountDivID).length != 0 && this.DrpDiscounts) ? this.DrpDiscounts.GetSelectedIndex() : 0;

        var curTax = ($(this.TaxDivID).length != 0 && this.DrpTaxes) ? this.DrpTaxes.GetSelectedIndex() : 0;

        if (isNaN(qty)) return;

        for (var i = 0; i < d.length; i++) {

            var ruleMinQty = d[i].MinQty;

            var ruleMaxQty = d[i].MaxQty;

            if (qty >= ruleMinQty && qty <= ruleMaxQty) {

                this.SelectedPricing = d[i];

                this.UnitPriceTxtBox.val(this.GetStrFrmFlt(d[i].CalculatedBasePrice));

                this.UnitPriceTxtBox.data('tip', d[i].PricingRuleName);

                if (d[i].DefaultDiscountID > 0) {

                    this.SetDiscountDrpDown(d[i].DefaultDiscountID);

                } else if (i === d.length - 1) {  //For the default case

                    this.SetDiscountDrpDown(this.GetRowHdnDiscountID(this.CurrentRow));

                } else {

                    this.SetDiscountDrpDown(0);

                }

                if (d[i].DefaultTaxID > 0) {

                    this.SetTaxDrpDown(d[i].DefaultTaxID);

                } else if (i === d.length - 1) {  //For the default case

                    this.SetTaxDrpDown(this.GetRowHdnTaxID(this.CurrentRow));

                } else {

                    this.SetTaxDrpDown(0);

                }

                if (!d[i].AllowEdit)
                    this.DisablePricingFields();
                else
                    this.EnablePricingFields();

                if (this.UnitPriceTxtBox.val() != curPrice || ($(this.DiscountDivID).length != 0 && this.DrpDiscounts && curDis != this.DrpDiscounts.GetSelectedIndex()) || ($(this.TaxDivID).length != 0 && this.DrpTaxes && this.DrpTaxes.GetSelectedIndex()))
                    this.IsCurrentRowEdited = true;

                break;

            }
        }

    },

    EnablePricingFields: function () {

        this.UnitPriceTxtBox.removeClass('txtboxDisabled')

        this.UnitPriceTxtBox.prop('readonly', false);

        if ($(this.DiscountDivID).length != 0 && this.DrpDiscounts) this.DrpDiscounts.SetEnabled(true);

        if ($(this.TaxDivID).length != 0 && this.DrpTaxes) this.DrpTaxes.SetEnabled(true);

    },

    DisablePricingFields: function () {

        this.UnitPriceTxtBox.addClass('txtboxDisabled')

        this.UnitPriceTxtBox.attr("readonly", "readonly");

        if ($(this.DiscountDivID).length != 0 && this.DrpDiscounts) {

            this.DrpDiscounts.HideDropDown();

            this.DrpDiscounts.SetEnabled(false);

        }

        if ($(this.TaxDivID).length != 0 && this.DrpTaxes) {

            this.DrpTaxes.HideDropDown();

            this.DrpTaxes.SetEnabled(false);

        }

    },

    AddUpdProduct: function (url) {
        var newwindow = window.open(url, 'name', 'height=735,width=850,top=0,left=200,resizable=yes,scrollbars=yes');
        if (window.focus) { newwindow.focus(); }
    },

    ShowAvailableQuantity: function (onlyResizeFlag) {

        var that = this;

        if (this.TempProdID > 0) {

            if (this.FetchAvailabilityInfo == true) {

                $('#img_AvlblQty').css('display', '');

                $('#div_AvlblQtyValues').css('display', 'none');

            }

            $(this.AvlblQtyDivID).css({
                visibility: 'visible',
                display: ''
            }).position({
                my: "left top",
                at: "left bottom",
                of: this.QtyTxtBox,
                collision: "flip"
            });

            if (onlyResizeFlag == true) return;

            if (this.FetchAvailabilityInfo == true) {

                this.Misc.ShowQuantityDetailsWaitCount = 4;

                this.GetQuantityDetails(this.TempProdID);

                this.FetchAvailabilityInfo = false;

            }

        }
        else {

            if (this.Timers.FetchQtyTimer) clearTimeout(this.Timers.FetchQtyTimer);

            this.Misc.ShowQuantityDetailsWaitCount = this.Misc.ShowQuantityDetailsWaitCount - 1;

            if (this.Misc.ShowQuantityDetailsWaitCount >= 0) { this.Timers.FetchQtyTimer = setTimeout(function () { that.ShowAvailableQuantity(false); }, 200); }

            else { this.Misc.ShowQuantityDetailsWaitCount = 4; }

        }

    },

    HideAvailableQuantity: function () {

        $(this.AvlblQtyDivID).css({
            display: 'none',
            visibility: 'hidden',
            top: 0,
            left: 0
        });

    },

    HideExpectedDatePickers: function () {

        $('.datepicker').datepicker('hide');

    },

    GetQuantityDetails: function (prodID) {

        var that = this;

        $('#img_AvlblQty').css('display', '');      //Show the loading image in the Availability Panel

        $('#div_AvlblQtyValues').css('display', 'none');

        this.WSObj.GetQuantityDetails(prodID, DocLayoutJSObj.CDH, function (response) {

            that.ShowQuantityDetails(response);

        });

    },

    ShowQuantityDetails: function (response) {

        if (response.status === 'S') {

            this.PricingDetails = response.prodPricingDetails;

            var show = false;

            var dtls = response.prodQtyDetails[0];

            if (response.prodRequiresSerialNumbers == true || response.prodRequiresSerialNumbers == false) this.TempRequiresSerialNumbers = response.prodRequiresSerialNumbers;

            if (response.prodRequiresBatchNumbers == true || response.prodRequiresBatchNumbers == false) this.TempRequiresBatchNumbers = response.prodRequiresBatchNumbers;

            if (dtls.aQty > 0) {

                this.CurrentRowSKUCurQty = dtls.aQty;

                $('#div_UsedQtyValues').show().html(this.TextStrings.QtyInDoc + ': ' + this.GetStrFrmFlt(dtls.aQty));

                show = true;

            } else {

                this.CurrentRowSKUCurQty = 0;

                $('#div_UsedQtyValues').hide().html('');

            }

            $('#div_PDocQty').hide(); // Parent quantity

            if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesQuote ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutbound ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsOutboundAndSalesInvoice ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsTransfer ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) { // here we show the On Hand availability info

                var ohDivID = '#' + 'div_OnHandValues';

                var onHandTbl = $(ohDivID).find('#tbl_AvlblQty').children('tbody');

                var supplierAvailTbl = $(ohDivID).find('#tbl_SupplierAvlbl');

                onHandTbl.find('tr:gt(0)').each(function (i) { $(this).remove(); });  //remove any previous rows

                supplierAvailTbl.hide();

                var fRowOnHand = onHandTbl.find('tr').first();

                var lastRow = fRowOnHand;

                var newRow;

                var supplierAvailabilityRow;

                var wNum = dtls.qtyDtls === null ? 0 : dtls.qtyDtls.length;

                var avalblC = 0;

                if (wNum === 0) {

                    avalblC = 0;

                } else {

                    var qdtls = dtls.qtyDtls;

                    var numOfTds = 0

                    if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder &&
                        this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') {

                        if ((dtls.SupplierQuantityRangeLowerLimit != -1 && dtls.SupplierQuantityRangeUpperLimit != -1) ||
                            (dtls.MinETA != -1 && dtls.MaxETA != -1)) {

                            supplierAvailTbl.show();

                            supplierAvailTbl.find('tbody td').css('border-bottom', '1px solid #CCC');

                            if (dtls.SupplierQuantityRangeLowerLimit != -1 && dtls.SupplierQuantityRangeUpperLimit != -1) {

                                var qtyToDisplay = dtls.SupplierQuantityRangeLowerLimit == dtls.SupplierQuantityRangeUpperLimit ? dtls.SupplierQuantityRangeLowerLimit : dtls.SupplierQuantityRangeLowerLimit + ' - ' + dtls.SupplierQuantityRangeUpperLimit;

                                $(supplierAvailTbl).find('#td_SupplierQuantityRangeValue').html(qtyToDisplay);

                            } else {

                                $(supplierAvailTbl).find('#td_SupplierQuantityRangeValue').html('-');

                            }

                            if (dtls.MinETA != -1 && dtls.MaxETA != -1) {

                                var leadTimeInDays = dtls.productSupplierLeadTime != -1 ? ' (' + dtls.productSupplierLeadTime + ')' : '';

                                var datesToDisplay = dtls.MinETA == dtls.MaxETA ? dtls.MinETA : dtls.MinETA + ' - ' + dtls.MaxETA;

                                $(supplierAvailTbl).find('#td_SupplierLeadTimeValue').html(datesToDisplay + leadTimeInDays);

                                if (this.ExpectedDateEarliestTxtBox.val().length == 0 &&
                                    this.ExpectedDateLatestTxtBox.val().length == 0) {

                                    if (dtls.MinETA != '-1') this.ExpectedDateEarliestTxtBox.val(dtls.MinETA);

                                    if (dtls.MaxETA != '-1') this.ExpectedDateLatestTxtBox.val(dtls.MaxETA);

                                    if (dtls.LeadTimeTip.length > 0) {

                                        this.ExpectedDateEarliestTxtBox.prop('title', htmlEncode(dtls.LeadTimeTip));

                                        this.ExpectedDateLatestTxtBox.prop('title', htmlEncode(dtls.LeadTimeTip));

                                    }

                                };

                            } else {

                                $(supplierAvailTbl).find('#td_SupplierLeadTimeValue').html('-');

                            }

                        }

                    }

                    for (var i = 0; i < wNum; i++) {

                        if (i === 0) { numOfTds = $('#tbl_AvlblQty tr:eq(0) td').length }

                        newRow = fRowOnHand.clone(true);

                        $(newRow).insertAfter(lastRow);

                        $(newRow).find('td:eq(0)').html(qdtls[i].wAbrev);

                        $(newRow).find('td#td_AvlblQty_OnHand').html(this.GetStrFrmFlt(qdtls[i].qty + qdtls[i].nrQty + qdtls[i].nrQtyWO - qdtls[i].nsQty - qdtls[i].naQtyWO));

                        if (qdtls[i].qty + qdtls[i].nrQty + qdtls[i].nrQtyWO - qdtls[i].nsQty - qdtls[i].naQtyWO > 0) {

                            $(newRow).find('td:eq(1)').css('color', 'green');

                        } else {

                            $(newRow).find('td:eq(1)').css('color', 'red');

                        }

                        $(newRow).find('td#td_AvlblQty').html(this.GetStrFrmFlt(qdtls[i].qty));

                        $(newRow).find('td#td_AvlblQty_NonShipped').html(this.GetStrFrmFlt(qdtls[i].nsQty));

                        $(newRow).find('td#td_AvlblQty_Nonallocated').html(this.GetStrFrmFlt(qdtls[i].naQtyWO));

                        $(newRow).find('td#td_AvlblQty_NonReceived').html(this.GetStrFrmFlt(qdtls[i].nrQty));

                        $(newRow).find('td#td_AvlblQty_NonReceivedWO').html(this.GetStrFrmFlt(qdtls[i].nrQtyWO));

                        avalblC += 1;

                        lastRow = newRow;
                    }

                }

                if (avalblC === 0) {

                    newRow = fRowOnHand.clone(true);

                    $(newRow).insertAfter(lastRow);

                    $(ohDivID).find('#tbl_AvlblQty').children('thead').find('tr').hide();

                    supplierAvailTbl.hide();

                    $(newRow).find('td:eq(0)').html('No quantity information available');

                    $('#tbl_AvlblQty td').css('width', 'auto').css('padding-left', '0').css('border-top', 'none');

                } else {

                    $(ohDivID).find('#tbl_AvlblQty').children('thead').find('tr').show();

                    var percentWidthOfTd = (100 / $('#tbl_AvlblQty tbody tr:first > td').length) + '%'

                    $('#tbl_AvlblQty td').css('width', percentWidthOfTd).css('padding-left', '10px');

                }

                $('#tbl_AvlblQty').css('width', $('#InOutInvoiceGrid').width() / 2 + 'px');

                $(ohDivID).show();

                show = true;

            }
            else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
                DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) {

                $('#div_PDocQty').show().html(this.TextStrings.QtyAvlbl + ': ' + this.GetStrFrmFlt(dtls.pQty));

                if (dtls.pQty > 0) { this.CurrentRowSKUAvlbility = dtls.pQty; } else { this.CurrentRowSKUAvlbility = 0; }

                show = true;

            }

            if (show === true) {

                $('#img_AvlblQty').css('display', 'none');

                $('#div_AvlblQtyValues').css('display', '');

                this.ShowAvailableQuantity(true);

            }

        }
        else {

            alert(response.errMsg);

        }

    },

    PutOriginalValuesBack: function () {

        var r = this.CurrentRow;

        if (!r) return;

        this.SetRowSKU(r, this.CurrentRowSKUCode);

        this.SetRowProdDesc(r, this.CurrentRowSKUDesc);

        this.SetRowQty(r, this.CurrentRowQty);

        this.SetRowQtyUnit(r, this.CurrentRowQtyUnit);

        this.SetRowUnitPrice(r, this.CurrentRowUnitPrice);

        this.SetRowDiscountLbl(r, this.CurrentRowDiscountDetails);

        this.SetRowDiscountVal(r, this.CurrentRowDiscount);

        this.SetRowTaxLbl(r, this.CurrentRowTaxDetails);

        this.SetRowTaxVal(r, this.CurrentRowTax);

        this.SetRowTotal(r, this.CurrentRowLineTotal);

        this.SetRowRemarks(r, this.CurrentRowRemarks);

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') { this.SetRowExpectedDateEarliest(r, this.CurrentRowExpectedDateEarliest); }

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') { this.SetRowExpectedDateLatest(r, this.CurrentRowExpectedDateLatest); }

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') { this.SetRowExpectedDatesToolTip(r, this.CurrentRowExpectedDatesToolTip); }

        this.SetRowSupplierSKU(r, this.CurrentRowSupplierSKU);

        if (this.GetRowBatchNumbersFlag(r)) {

            this.SetRowBatchNumbers(r, this.CurrentRowBatchNumbers);
            
        } else if (this.GetRowSerialNumbersFlag(r)) {

            this.SetRowSerialNumbers(r, this.CurrentRowSerialNumbers);
            
        }

        if (this.IsRowNew == false) $(r).children('td.inoutCommandsColumn').find('i:first').css('display', '');

    },

    CheckKeyAndHideEditors: function (event, editor) {

        if (event.which == 27) {
            $(editor).val('');
            setTimeout(function () { $('#FocusOutTextBox').focus(); }, 1); /* http://stackoverflow.com/questions/17384464/jquery-focus-not-working-in-chrome */
            this.HideAllEditors();
            this.PutOriginalValuesBack();
            return true;
        }
        else
            return false;
    },

    LastEditorTAB: function (editorType, KeyDownEvent) {

        var that = this;

        if (this.CheckKeyAndHideEditors(KeyDownEvent, editorType)) {

            return;

        }
        else if (KeyDownEvent.which == 9 && KeyDownEvent.shiftKey == false) {   // TAB

            that.HideAvailableQuantity();

            var t = setTimeout(function () { that.VerifyCheckPostAndShowNewRow(); }, 10);

        }

    },

    VerifyCheckPostAndShowNewRow: function () {

        if (this.LockGridWebServices == true) return;

        this.HideSKUImage();    //Hide the SKU Image

        if (this.AreRowValuesValid() != true) return;

        //Update the number of the new row
        
        this.IsCurrentRowUpdating = true;   //This is to prevent the original values being put back on the rows

        if (this.IsCurrentRowEdited == true || $(this.CurrentRow).data('rowIsFaulty') ==  '1') {

            this.UpdateClientRowValues();

            this.UpdateDBRowValues(this.CurrentRow);

            this.AddImageDisplayHandlerToRow(this.CurrentRow);

        } else {

            this.PutOriginalValuesBack();

        }

        //If a new row has to be created then a new row will be cloned from the hidden Row
        var CurRowNum = this.GetSelectedRowNumber(this.CurrentRow);

        var newRow;

        if (CurRowNum < this.GridRowCount) {

            newRow = $(this.CurrentRow).next();

            while (this.GridRowUpdatingArray[this.GetSelectedRowNumber(newRow)] == true) {

                CurRowNum = CurRowNum + 1;

                newRow = $(newRow).next();

            }

        } else {

            newRow = this.CreateNewGridRow();

            this.AddHandlersToRow(newRow);

        }

        this.HideErrorMessage();    //Hide the error messsage panel if it was showing before

        this.HideAllEditors();

        this.ShowAllEditors(newRow, false);

        this.IsCurrentRowUpdating = false;

    },

    AreRowValuesValid: function () {

        //SKU, SKU Desc validity -- it should not be blank
        if (this.TempProdID == 0 || this.SKUTxtBox.val() == '') {
            this.DisplayErrorMessage(this.TextStrings.ProductCode + ': ' + this.TextStrings.Warnings.ReqField, 'SKU');
            this.SetFocus(this.FocusElements.SKUTxtBoxID);
            return false;
        }

        if (this.SKUDescTxtBox.val() == '') {
            this.DisplayErrorMessage(this.TextStrings.ProductDesc + ': ' + this.TextStrings.Warnings.ReqField, 'SKUDesc');
            this.SetFocus(this.FocusElements.ProdDescTxtBoxID);
            return false;
        }

        if (this.ValidateUserQuantity() == false) {
            this.SetFocus(this.FocusElements.QtyTxtBoxID);
            return false;
        }

        if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') {

            var inputPrice = this.UnitPriceTxtBox.val();

            if (inputPrice == '') {
                this.DisplayErrorMessage(this.TextStrings.UnitPrice + ': ' + this.TextStrings.Warnings.ReqField, 'UnitPrice');
                this.SetFocus(this.FocusElements.UnitPriceTxtBoxID);
                return false;
            }
            else if (isNaN(this.GetFltFrmStr(inputPrice)) === true) {
                this.DisplayErrorMessage(this.TextStrings.Warnings.UnitPriceErr, 'UnitPrice');
                this.SetFocus(this.FocusElements.UnitPriceTxtBoxID);
                return false;
            }
            else if (this.GetFltFrmStr(inputPrice) < 0) {
                //Uncomment to forbid negative prices
                //this.DisplayErrorMessage(this.TextStrings.Warnings.UnitPriceErr, 'UnitPrice');
                //this.SetFocus(this.FocusElements.UnitPriceTxtBoxID);
                //return false;
            } else if (this.GetFltFrmStr(inputPrice) > 999999999.999999999) {
                this.DisplayErrorMessage(this.TextStrings.Warnings.TooLargeNumber, 'UnitPrice');
                this.SetFocus(this.FocusElements.UnitPriceTxtBoxID);
                return false;
            }

            var decimalDigits = inputPrice.split('.');
            if (decimalDigits.length === 1) decimalDigits = inputPrice.split(',');

            if (decimalDigits.length === 2 && String(decimalDigits[1]).length > 9) {
                this.DisplayErrorMessage(this.TextStrings.Warnings.TooManyDecimals, 'UnitPrice');
                this.SetFocus(this.FocusElements.UnitPriceTxtBoxID);
                return false;
            }

            if (this.SelectedPricing != null) {
                if (!this.DrpDiscounts && this.SelectedPricing.DefaultDiscountID > 0) {
                    this.DisplayErrorMessage('The Pricing Rule used for this product in this document requires discounts to be enabled for this document type.', 'UnitPrice');
                    return false;
                }
                else if (!this.DrpTaxes && this.SelectedPricing.DefaultTaxID > 0) {
                    this.DisplayErrorMessage('The Pricing Rule used for this product in this document requires taxes to be enabled for this document type.', 'UnitPrice');
                    return false;
                }
            }
        }

        //Unit Price Validity
        //If everything okay, then return true
        return true;
    },

    ValidateUserQuantity: function () {

        var OnHandQty = this.CurrentRowSKUAvlbility;

        var InputQtyInThisRow = this.QtyTxtBox.val();

        var inputQtyFlt = this.GetFltFrmStr(InputQtyInThisRow);

        var UsedCurrently = this.CurrentRowSKUCurQty;

        //Check 1 - valid qty input
        if (InputQtyInThisRow == '') {
            this.DisplayErrorMessage(this.TextStrings.Quantity + ': ' + this.TextStrings.Warnings.ReqField, 'Qty');
            this.SetFocus(this.FocusElements.QtyTxtBoxID);
            return false;
        }

        if (isNaN(this.GetFltFrmStr(InputQtyInThisRow)) == true || this.GetFltFrmStr(InputQtyInThisRow) <= 0) {
            this.DisplayErrorMessage(this.TextStrings.Warnings.QtyErr, 'Qty');
            return false;
        }
        else if (this.GetFltFrmStr(InputQtyInThisRow) > 999999999.999999999) {
            this.DisplayErrorMessage(this.TextStrings.Warnings.TooLargeNumber, 'Qty');
            return false;
        }

        var decimalDigits = InputQtyInThisRow.split('.');

        if (decimalDigits.length === 1) decimalDigits = InputQtyInThisRow.split(',');

        if (decimalDigits.length === 2 && String(decimalDigits[1]).length > 9) {

            this.DisplayErrorMessage(this.TextStrings.Warnings.TooManyDecimals, 'Qty');

            this.SetFocus(this.FocusElements.QtyTxtBoxID);

            return false;

        }

        var UsedQtyInThisRow = this.CurrentRowQty;

        if ((DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClient ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnFromClientNoCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplier ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierWithCredit ||
            DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.GoodsReturnToSupplierNoCredit) &&
            inputQtyFlt + UsedCurrently - UsedQtyInThisRow > OnHandQty) {

            this.DisplayErrorMessage(this.TextStrings.Warnings.QtyGtr, 'Qty');

            return false;

        }

        //Check Serial Numbers against the input quantity
        if (this.SNoTknBox && this.TempRequiresSerialNumbers == true) {

            //Check if the input quantity is fractional
            if (inputQtyFlt % 1 > 0) {
                this.DisplayErrorMessage('This product requires Serialised inventory. The quantity cannot be fractional.', 'Qty')
                return false;
            }

            var tokens = serialNumberInput(this.SNoTknBox.GetTokenCollection());

            if (tokens.length > inputQtyFlt) {
                this.DisplayErrorMessage('Number of Serial Numbers is more than the quantity entered.', 'Qty');
                return false;
            }

            //Check if the maximum allowed limit for Serial Numbers has been exceeded
            if (tokens.length > 500) {
                this.DisplayErrorMessage('Only up to 500 Serial Numbers are allowed at a time.', 'Qty');
                return false;
            }
        }

        //Quanity Validity
        //If everything okay, then return true
        return true;
    },

    UpdateClientRowValues: function () {

        //Here we update the new values in the row, we already have the tempProdID,
        //we will update the other variables with the selected values and then transfer those values to the respective TDs
        this.TempSKUCode = this.SKUTxtBox.val();

        this.TempSKUDesc = this.SKUDescTxtBox.val();

        this.TempQty = this.GetFltFrmStr(this.QtyTxtBox.val());

        if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1') {

            if (this.UnitPriceTxtBox.val() != '') {

                this.TempUnitPrice = this.GetFltFrmStr(this.UnitPriceTxtBox.val());

            } else {

                this.TempUnitPrice = -1;

            }
        } else {

            this.TempUnitPrice = 0;

        }

        if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') {

            this.SetRowHdnDiscountID(this.CurrentRow, this.DrpDiscounts.GetSelectedItem().value);

            if (this.DrpDiscounts.GetSelectedItem().value != 0) {

                this.TempDisID = parseInt(this.DrpDiscounts.GetSelectedItem().value, 10);

                this.TempDisLabel = (' (' + this.DrpDiscounts.GetSelectedItem().text + ')').replace(".", this.NumberFormat.Decimal);

            } else {
                this.TempDisID = 0;
                this.TempDisLabel = '';
            }

        } else {

            this.TempDisID = 0;

            this.TempDisLabel = '';

        }

        if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') {

            this.SetRowHdnTaxID(this.CurrentRow, this.DrpTaxes.GetSelectedItem().value)

            if (this.DrpTaxes.GetSelectedItem().value != 0) {

                this.TempTaxID = parseInt(this.DrpTaxes.GetSelectedItem().value, 10);

                this.TempTaxLabel = (' (' + this.DrpTaxes.GetSelectedItem().text + ')').replace(".", this.NumberFormat.Decimal);

            } else {

                this.TempTaxID = 0;

                this.TempTaxLabel = '';

            }

        } else {

            this.TempTaxID = 0;

            this.TempTaxLabel = '';

        }

        if (this.LastEditorArray[this.EditorArrayIndices.Remarks] == '1') {

            this.TempRemarks = this.RemarksTxtBox.val();

        }

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') {

            this.TempExpectedDateEarliest = htmlEncode(this.ExpectedDateEarliestTxtBox.val());

            this.TempExpectedDateLatest = htmlEncode(this.ExpectedDateLatestTxtBox.val());

            this.TempExpectedDatesToolTip = htmlEncode(this.ExpectedDateLatestTxtBox.prop('title'));

        }

        if (this.SNoTknBox && this.TempRequiresSerialNumbers == true) {
            
            this.TempSerialNumbers = serialNumberInput(this.SNoTknBox.GetTokenCollection());

        } else {

            this.TempSerialNumbers = [];

        }

        var row = this.CurrentRow;
        
        if ($(this.BNoDivID).length && this.TempRequiresBatchNumbers == true &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.PurchaseOrder &&
            DocLayoutJSObj.CDH.DocumentChoice != DocumentChoices.SalesQuote) {
            
            this.TempBatchNumber = $(this.BNoDivID).find('input').first().val();

            var expiryDate = MV_StringToDate($(this.BNoDivID).find('input').last().val(), "MMM dd, YYYY");

            var expiryShortString = MV_GetSimpleDate(expiryDate); // string in "yyyy-MM-dd" format

            this.TempBatchNumberExpiryDate = expiryShortString;

        } else {

            this.TempBatchNumber = '';

            this.TempExpiryDate = '';

        }

        this.SetRowProdID(row, this.TempProdID);

        this.SetRowSKU(row, this.TempSKUCode);

        this.SetRowProdDesc(row, this.TempSKUDesc);

        this.SetRowSerialNumbersFlag(row, this.TempRequiresSerialNumbers);

        this.SetRowBatchNumbersFlag(row, this.TempRequiresBatchNumbers)

        this.SetRowQty(row, this.TempQty);

        this.SetRowQtyUnit(row, this.TempUOM);

        this.SetRowUnitPrice(row, this.GetStrFrmFlt(this.TempUnitPrice));

        if (this.UnitPriceTxtBox.data('tip') && this.UnitPriceTxtBox.data('tip') !== '') { this.SetRowUnitPriceTip(row, this.UnitPriceTxtBox.data('tip')); }

        this.SetRowDiscountLbl(row, this.TempDisLabel);

        this.SetRowTaxLbl(row, this.TempTaxLabel);

        this.SetRowRemarks(row, this.TempRemarks);

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDateEarliest(row, this.TempExpectedDateEarliest);

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDateLatest(row, this.TempExpectedDateLatest);

        if (this.LastEditorArray[this.EditorArrayIndices.ExpectedDates] == '1') this.SetRowExpectedDatesToolTip(row, this.TempExpectedDatesToolTip);

        this.SetRowProdImg(row, this.TempImage);

        this.SetRowSupplierSKU(row, this.TempSupplierSKU);

        if (this.TempRequiresSerialNumbers == true) { this.SetRowSerialNumbers(row, this.TempSerialNumbers.join()); }

        if (this.TempRequiresBatchNumbers == true && this.TempBatchNumber.length > 0) { this.SetRowBatchNumbers(row, this.TempBatchNumber + StaticObj.separatorString + this.TempQty + StaticObj.separatorString +  this.TempBatchNumberExpiryDate); }

        //The Row totals and grand totals will be updated from the values from the DB

    },
        
    UpdateDBRowValues: function (selectedRow) {

        //disable Verify/Save buttons as long as UpdateDBRowValues lasts

        this.LockGridWebServices = true;

        this.ConfirmBtn.SetEnabled(false);

        this.SaveBtn.SetEnabled(false);

        this.GridRowUpdatingArray[this.GetSelectedRowNumber(selectedRow)] = true;     //Set the variable to say this row is being updated

        //remove events from this row
        this.RemoveHandlersFromRow(selectedRow);

        //Show the loading image
        $(selectedRow).children('td').css('color', 'Gray');

        $(selectedRow).find('td.inoutCommandsColumn i').removeClass('fa-trash-alt').addClass('fa-circle-notch fa-spin').css('display', '');

        //create the row values object
        var RowValues = {
            'ProdID': this.TempProdID,
            'ProdCode': this.TempSKUCode,
            'ProdDesc': this.TempSKUDesc,
            'ProdQty': this.TempQty,
            'ProdUnitPrice': this.TempUnitPrice,
            'ProdDiscountID': this.TempDisID,
            'ProdTaxID': this.TempTaxID,
            'Remarks': this.TempRemarks,
            'ExpectedDateEarliest': this.TempExpectedDateEarliest,
            'ExpectedDateLatest': this.TempExpectedDateLatest,
            'ExpectedDatesToolTip': this.TempExpectedDatesTooltip,
            'SerialNumbers': this.TempSerialNumbers,
            'BatchNumbers': this.TempBatchNumber.length > 0 ? [this.TempBatchNumber + StaticObj.separatorString + this.TempQty + StaticObj.separatorString + this.TempBatchNumberExpiryDate] : null
        };
        
        var TempTableDetailID = this.GetRowTempDtID(selectedRow);

        var RealTableDetailID = this.GetRowRealDtID(selectedRow);

        var ClVlId = DocLayoutJSObj.CDH.ValidityID;

        var that = this;

        //Send data to the server, provide the result handling function, show the loading image
        this.WSObj.UpdateDocumentRow(DocLayoutJSObj.CDH.ID,
            TempTableDetailID,
            RealTableDetailID,
            RowValues,
            ClVlId,
            function (response) { that.ResultAfterRowUpdation(response, selectedRow); });
    },

    ResultAfterRowUpdation: function (result, rowObj) {

        var that = this;

        if (result.requestStatus === 'S') {
            
            DocLayoutJSObj.InDocument.DocumentRowsUpdated = true;  // Update the rows updated variable

            this.SetRowUnitPrice(rowObj, this.GetStrFrmFlt(result.rowUnitPrice));

            this.SetRowDiscountVal(rowObj, this.GetStrFrmFlt(result.rowDiscount));

            this.SetRowTaxVal(rowObj, this.GetStrFrmFlt(result.rowTax));

            this.SetRowTotal(rowObj, this.GetStrFrmFlt(result.rowTotal));

            $(rowObj).children('td').css('color', 'Green');

            $(rowObj).find('td.inoutCommandsColumn i').removeClass('fa-circle-notch fa-spin').addClass('far fa-check').show();

            this.SetRowTempDtID(rowObj, result.tempTableDetailID);

            this.UpdateTotals(result);

            var t = setTimeout(function () { that.ChangeRowToNormal(rowObj,'s'); }, 2000);

            // if one row has been added, and the doc type restricts based on entity, then the entity drop down will be disabled
            if (this.GridRowCount === 2) { this.DisableEntityAndCurrencySelection(); } //DocLayoutJSObj.CDH.TypeSupRestriction === 1 && 

        }
        if (result.requestStatus === 'F') {

            $(rowObj).children('td').css('color', 'Red').css('font-weight', '700');

            $(rowObj).find('td.inoutCommandsColumn i').removeClass('fa-circle-notch fa-spin').addClass('fa-exclamation-triangle');

            this.AddTipToWarning($(rowObj).find('td.inoutCommandsColumn i').attr('id'), result.errMsg);

            this.DisplayErrorMessage(result.errMsg, 'SKU', rowObj);

            var t = setTimeout(function () { that.ChangeRowToNormal(rowObj, 'f'); }, 2000);

        }

        this.LockGridWebServices = false;

        this.ConfirmBtn.SetEnabled(true);

        this.SaveBtn.SetEnabled(true);

    },

    DeleteSelectedRow: function (rowObj, imgObj) {

        //disable Verify/Save buttons as long as DeleteSelectedRow lasts
        this.LockGridWebServices = true;

        this.ConfirmBtn.SetEnabled(false);

        this.SaveBtn.SetEnabled(false);

        $(rowObj).children('td').css('color', 'Gray');

        $(imgObj).removeClass('fa-trash-alt').addClass('fa-circle-notch fa-spin');

        this.RemoveHandlersFromRow(rowObj);  //Unbind hover, click events from this row

        this.GridRowUpdatingArray[this.GetSelectedRowNumber(rowObj)] = true;

        var TempTableDetailID = this.GetRowTempDtID(rowObj);

        var RealTableDetailID = this.GetRowRealDtID(rowObj);

        var ClVlId = DocLayoutJSObj.CDH.ValidityID;

        var that = this;

        this.WSObj.DeleteInvoiceRow(DocLayoutJSObj.CDH.ID,
            TempTableDetailID,
            RealTableDetailID,
            ClVlId,
            function (response) { that.ExecuteClientRowDeletion(response, rowObj); });

    },

    ExecuteClientRowDeletion: function (result, rowObj) {

        var that = this;

        if (result.requestStatus == 'S') {

            DocLayoutJSObj.InDocument.DocumentRowsUpdated = true;      // Update the rows updated variable

            var thisRowNum = this.GetSelectedRowNumber(rowObj);

            this.GridRowUpdatingArray = this.GridRowUpdatingArray.splice(thisRowNum, 1);

            this.GridRowCount = this.GridRowCount - 1;

            $(rowObj).nextAll(':visible').each(function (n) {   //Update the Row numbers for the remaining rows

                that.SetSelectedRowNumber(this, thisRowNum);

                thisRowNum = thisRowNum + 1;

            });

            $(rowObj).children('td').html('');

            $(rowObj).slideUp(100, function () {

                $(this).remove();

            });

            this.UpdateTotals(result);

            // if all rows have been deleted, and the doc type restricts based on user, then the entity drop down will be enabled
            if (this.GridRowCount === 1) {

                this.EnableEntityAndCurrencySelection();

            }

        }
        else if (result.requestStatus == 'F') {

            $(rowObj).children('td').css('color', 'Red');

            $(rowObj).find('td.inoutCommandsColumn i').removeClass('fa-circle-notch fa-spin').addClass('fa-exclamation-triangle');

            this.AddTipToWarning($(rowObj).find('td.inoutCommandsColumn i').attr('id'), result.errMsg);

            this.DisplayErrorMessage(result.errMsg, 'SKU', rowObj);

            this.GridRowUpdatingArray[this.GetSelectedRowNumber(rowObj)] = true;

        }

        this.LockGridWebServices = false;

        this.ConfirmBtn.SetEnabled(true);

        this.SaveBtn.SetEnabled(true);

    },

    UpdateTotals: function (r) {

        this.GridTotalsElements.TotalQtyElem.SetText(this.GetStrFrmFlt(r.totalQty));

        if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') this.GridTotalsElements.TotalDiscountsElem.SetText(this.FormatNumberStr(this.GetStrFrmFlt(r.totalDiscount)));

        if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') this.GridTotalsElements.TotalTaxesElem.SetText(this.FormatNumberStr(this.GetStrFrmFlt(r.totalTax)));

        if (this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') this.GridTotalsElements.TotalAmountElem.SetText(this.FormatNumberStr(this.GetStrFrmFlt(r.grandTotal)));

    },

    CreateNewGridRow: function () {

        var CurRowNum = this.GetSelectedRowNumber(this.CurrentRow);

        var hiddenRow = $(this.GridClientID).find('tr.hdnInVoiceRow');

        var lastRow = $(this.GridClientID).find('tr.InVoiceRows').last();

        var newRow = hiddenRow.clone(true);

        newRow.removeClass('hdnInVoiceRow').addClass('InVoiceRows dxgvDataRow_MV');

        $(newRow).insertAfter(lastRow);

        this.GridRowCount = this.GridRowCount + 1;

        this.GridRowUpdatingArray[this.GridRowUpdatingArray.length] = false;

        this.SetSelectedRowNumber(newRow, CurRowNum + 1);

        return newRow;
    },

    ChangeRowToNormal: function (rowObj, param) {

        if (param == 'f') {

            $(rowObj).data('rowIsFaulty', '1');

            this.GridRowUpdatingArray[this.GetSelectedRowNumber(rowObj)] = true;

            $(rowObj).find('td.inoutCommandsColumn i').removeClass('fa-exclamation-triangle').addClass('fa-trash-alt');

        }
        else if (param == 's') {

            $(rowObj).data('rowIsFaulty', '0');

            this.GridRowUpdatingArray[this.GetSelectedRowNumber(rowObj)] = false;

            $(rowObj).children('td').css('color', 'Black').css('font-weight', '400');
            
            $(rowObj).find('td.inoutCommandsColumn i').removeClass('fa-exclamation-triangle').removeClass('fa-check').addClass('fa-trash-alt');

        }

        this.AddHandlersToRow(rowObj);

    },

    DisableEntityAndCurrencySelection: function () {

        var that = this;

        var dC = DocLayoutJSObj.CDH.DocumentChoice;

        var cH = DocumentChoices;

        if ((dC === cH.SalesQuote || dC === cH.SalesOrder || dC === cH.GoodsOutbound) && this.PriceEditPermission === true) return;

        $(this.EntityAuCmTxtID).addClass('txtboxDisabled').data('state', -1).prop('readonly', true).prop('disabled', true).on('mouseenter', function (e) { TipRight(that.TextStrings.Warnings.EntitySelectionDisabled, 'td_DocHeaderEntity'); });

        $(this.EntityImgID).hide();

        if (this.DrpCurrencies != null && this.PriceEditPermission === false) { this.DrpCurrencies.SetEnabled(false); }

    },

    EnableEntityAndCurrencySelection: function () {

        $(this.EntityAuCmTxtID).removeClass('txtboxDisabled').data('state', 1).prop('readonly', false).prop('disabled', false).off('mouseenter');

        $(this.EntityImgID).show();

        if (this.DrpCurrencies) { this.DrpCurrencies.SetEnabled(true); }

    },

    SetFocus: function (EditorID) {

        if (document.getElementById(EditorID) != null) document.getElementById(EditorID).focus();

    },

    CheckRowEditedAndLeft: function () {

        if (this.IsCurrentRowEdited == true) {

            this.DisplayErrorMessage(this.TextStrings.Warnings.RowNotUpdated, 'Row');

            return true;

        }

        return false;

    },

    ShowSKUImage: function (ImageURL, rowObj, param) {

        if (param != 1) {

            $(this.SKUImageID).attr('src', ImageURL);

            $(this.SKUImageID).css('display', '');

        }

        $(this.SKUImageID).position({
            my: "left bottom",
            at: "left top",
            of: $(rowObj).find('td.inoutProdCodeColumn').first(),
            collision: 'fit'
        });

    },

    HideSKUImage: function () {

        $(this.SKUImageID).css('display', 'none');

    },

    AddTipToWarning: function (ImgID, Msg) {

        $('#' + ImgID).off();

        $('#' + ImgID).mouseenter(function () { Tip(Msg); });

    },

    GetSelectedRowNumber: function (row) { return parseInt($(row).children('td.inoutRowNumColumn').find('span').html(), 10); },

    SetSelectedRowNumber: function (row, num) { $(row).children('td.inoutRowNumColumn').find('span').html(num); },

    GetRowSKU: function (row) { return htmlDecode($(row).children("td.inoutProdCodeColumn").find('span').html()); },

    SetRowSKU: function (row, val) { $(row).children("td.inoutProdCodeColumn").find('span').html(htmlEncode(val)); },

    GetRowProdID: function (row) { return this.GetRowProdColHdnVal(row, 1); },

    SetRowProdID: function (row, val) { this.SetRowProdColHdnVal(row, 1, val); },

    GetRowTempDtID: function (row) { return this.GetRowProdColHdnVal(row, 0); },

    SetRowTempDtID: function (row, val) { this.SetRowProdColHdnVal(row, 0, val); },

    GetRowRealDtID: function (row) { return this.GetRowProdColHdnVal(row, 2); },

    SetRowRealDtID: function (row, val) { this.SetRowProdColHdnVal(row, 2, val); },

    GetRowSerialNumbersFlag: function (row) {
        ///<summary>Method to get the Serial Numbers flag for a given row. This indicates if the Product in this row requires Serial Numbers.</summary>

        var hdnVal = this.GetRowProdColHdnVal(row, 3, true);

        return (hdnVal == '1' || hdnVal == 'true');

    },

    SetRowSerialNumbersFlag: function (row, val) { return this.SetRowProdColHdnVal(row, 3, val); },

    GetRowSerialNumbers: function (row) {

        ///<summary>Method to get the Serial Numbers currently assigned to a document row.</summary>
       
        return $(row).find("td.inoutProdDescColumn input[type='hidden']:eq(0)").val();

    },
    
    SetRowSerialNumbers: function (row, val) {

        ///<summary>Method to set the Serial Numbers in a document row.</summary>
        
        $(row).find("td.inoutProdDescColumn input[type='hidden']:eq(0)").val(val);

    },

    GetRowBatchNumbersFlag: function (row) {

        ///<summary>Method to get the Batch Numbers flag for a given row. This indicates if the Product in this row requires Batch Numbers.</summary>

        var hdnVal = this.GetRowProdColHdnVal(row, 4, true);

        return (hdnVal == '1' || hdnVal == 'true');

    },

    SetRowBatchNumbersFlag: function (row, val) { return this.SetRowProdColHdnVal(row, 4, val); },

    GetRowBatchNumbers: function (row) {

        ///<summary>Method to get the Batch Numbers currently assigned to a document row.</summary>
        
        return $(row).find("td.inoutProdDescColumn input[type='hidden']:eq(1)").val();

    },

    SetRowBatchNumbers: function (row, val) {

        ///<summary>Method to set the Batch Numbers in a document row.</summary>
        
        $(row).find("td.inoutProdDescColumn input[type='hidden']:eq(1)").val(val);

    },

    GetRowProdColHdnVal: function (row, hdnPos, raw) {

        var hdnVal = $(row).find("td.inoutProdCodeColumn input[type='hidden']:eq(" + hdnPos + ")").val();

        if (raw && raw == true) { return hdnVal; }            

        return parseInt(hdnVal, 10);

    },

    SetRowProdColHdnVal: function (row, hdnPos, val) {

        $(row).find("td.inoutProdCodeColumn input[type='hidden']:eq(" + hdnPos + ")").val(String(val));

    },

    GetRowProdDesc: function (row) {

        return htmlDecode($(row).children('td.inoutProdDescColumn').find('span').html());

    },

    SetRowProdDesc: function (row, val) {

        $(row).children('td.inoutProdDescColumn').find('span').html(htmlEncode(val));

    },

    GetRowProdImg: function (row) {

        return htmlDecode($(row).children('td.inoutRowNumColumn').find("input[type='hidden']:eq(0)").val());

    },

    SetRowProdImg: function (row, val) {

        $(row).children('td.inoutRowNumColumn').find("input[type='hidden']:eq(0)").val(htmlEncode(val));

    },

    GetRowQty: function (row) {

        return this.GetFltFrmStr(($(row).children('td.inoutQTYColumn').find('span:nth-child(1)').html()));
        
    },

    SetRowQty: function (row, q) {
       
        if (q) {

            $(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(0)').val(this.GetStrFrmFlt(q));
          
            $(row).children('td.inoutQTYColumn').find('span:eq(0)').html(this.GetStrFrmFlt(q));

        } else {
            
            $(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(0)').val('');

            $(row).children('td.inoutQTYColumn').find('span:eq(0)').html('');

        }

    },

    GetRowQtyUnit: function (row) { return htmlDecode($(row).children('td.inoutQTYColumn').find('span:nth-child(2)').html()); },

    SetRowQtyUnit: function (row, val) { $(row).children('td.inoutQTYColumn').find('span:nth-child(2)').html(htmlEncode(val)); },

    GetRowUnitPrice: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') return String($(r).children('td.inoutProdPriceColumn').find('span').html()).replaceAll(this.NumberFormat.ThousandsSeparator, ''); else return ''; },

    SetRowUnitPrice: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') $(r).children('td.inoutProdPriceColumn').find('span').html(this.FormatNumberStr(v)); },

    SetRowUnitPriceTip: function (r, m) {

        if (this.LastEditorArray[this.EditorArrayIndices.UnitPrice] == '1' && this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') {

            $(r).children('td.inoutProdPriceColumn').find('span').off().on('mouseenter', function (e) { Tip(m); });

        }

    },

    GetRowDiscountLbl: function (r) {

        if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') return htmlDecode($(r).children('td.inoutDiscountsColumn').find('span:nth-child(1)').html()); else return '';

    },

    SetRowDiscountLbl: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') $(r).children('td.inoutDiscountsColumn').find('span:nth-child(1)').html(htmlEncode(v)); },

    GetRowDiscountVal: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') return $(r).children('td.inoutDiscountsColumn').find('span:nth-child(2)').html().replaceAll(this.NumberFormat.ThousandsSeparator, ''); else return ''; },

    SetRowDiscountVal: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') $(r).children('td.inoutDiscountsColumn').find('span:nth-child(2)').html(this.FormatNumberStr(v)); },

    GetRowHdnDiscountID: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') return $(r).find("td.inoutDiscountsColumn input[type='hidden']").val(); },

    SetRowHdnDiscountID: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Discount] == '1') $(r).find("td.inoutDiscountsColumn input[type='hidden']").val(v); },

    SetDiscountDrpDown: function (v) {
        if (!this.DrpDiscounts || $(this.DiscountDivID).length == 0) return;

        var DV = this.DrpDiscounts.FindItemByValue(v);
        if (DV != null)
            this.DrpDiscounts.SetSelectedItem(DV);
        else
            this.DrpDiscounts.SetSelectedIndex(0);
    },

    GetRowTaxLbl: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') return htmlDecode($(r).children('td.inoutTaxesColumn').find('span:nth-child(1)').html()); else return ''; },

    SetRowTaxLbl: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') $(r).children('td.inoutTaxesColumn').find('span:nth-child(1)').html(htmlEncode(v)); },

    GetRowTaxVal: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') return $(r).children('td.inoutTaxesColumn').find('span:nth-child(2)').html().replaceAll(this.NumberFormat.ThousandsSeparator, ''); else return ''; },

    SetRowTaxVal: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') $(r).children('td.inoutTaxesColumn').find('span:nth-child(2)').html(this.FormatNumberStr(v)); },

    GetRowHdnTaxID: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') return $(r).find("td.inoutTaxesColumn input[type='hidden']").val(); },

    SetRowHdnTaxID: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.Tax] == '1') $(r).find("td.inoutTaxesColumn input[type='hidden']").val(v); },

    SetTaxDrpDown: function (v) {
        if (!this.DrpTaxes || $(this.TaxDivID).length == 0) return;

        var DV = this.DrpTaxes.FindItemByValue(v);
        if (DV != null)
            this.DrpTaxes.SetSelectedItem(DV);
        else
            this.DrpTaxes.SetSelectedIndex(0);
    },

    GetRowTotal: function (r) { if (this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') return $(r).children('td.inoutLineTotalColumn').find('span').html().replaceAll(this.NumberFormat.ThousandsSeparator, ''); else return ''; },

    SetRowTotal: function (r, v) { if (this.LastEditorArray[this.EditorArrayIndices.LineTotal] == '1') $(r).children('td.inoutLineTotalColumn').find('span').html(this.FormatNumberStr(v)); },

    GetRowRemarks: function (r) { return htmlDecode($(r).children('td.inoutRemarksColumn').find('span').html()); },

    GetRowExpectedDateEarliest: function (r) { return htmlDecode($(r).children('td.inoutExpectedDates').find('span.inoutExpectedDateEarliest').html()); },

    GetRowExpectedDateLatest: function (r) { return htmlDecode($(r).children('td.inoutExpectedDates').find('span.inoutExpectedDateLatest').html()); },

    GetRowExpectedDatesToolTip: function (r) { return htmlDecode($(r).children('td.inoutExpectedDates').prop('title')); },

    SetRowRemarks: function (r, v) { $(r).children('td.inoutRemarksColumn').find('span').html(htmlEncode(v)); },

    SetRowExpectedDateEarliest: function (r, v) {

        r = $(r);

        if (v.length == 0) return

        if (v != '-1') r.children('td.inoutExpectedDates').find('span.inoutExpectedDateEarliest').html(htmlEncode(v));

        var txtBoxExpectedDateObj = $('#' + DocLayoutJSObj.FieldsObj.HFldIDs.ExpectedDateEarliest);

        if (txtBoxExpectedDateObj.val().length == 0) {

            ((v == "-1") ? "" : txtBoxExpectedDateObj.val(htmlEncode(v)));

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.ExpectedDateEarliestUpdated = true;

        } else {

            var dateInHeader = new Date(txtBoxExpectedDateObj.val());

            var InVoiceRows = r.siblings('tr.InVoiceRows');

            InVoiceRows.push(r[0]);

            var allDates = $(InVoiceRows).children('td.inoutExpectedDates').find('span.inoutExpectedDateEarliest');

            var i;

            var j = -1;

            var maxDate = new Date(0).getTime();

            for (i = 0; i < allDates.length; i++) {

                var dateAsjqueryObj = $(allDates[i]);

                if (dateAsjqueryObj.html() == '') { continue; }

                if (new Date(dateAsjqueryObj.html()).getTime() > maxDate) {

                    maxDate = new Date(dateAsjqueryObj.html()).getTime();

                    j = i;

                }

            }

            if (j > -1) {

                txtBoxExpectedDateObj.val(htmlEncode($(allDates[j]).html()));

                DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

                DocLayoutJSObj.InDocument.ExpectedDateEarliestUpdated = true;

            }

        }

    },

    SetRowExpectedDateLatest: function (r, v) {

        r = $(r);

        if (v.length == 0) return

        if (v != '-1') r.children('td.inoutExpectedDates').find('span.inoutExpectedDateLatest').html(htmlEncode(v));

        var txtBoxExpectedDateObj = $('#' + DocLayoutJSObj.FieldsObj.HFldIDs.ExpectedDateLatest);

        if (txtBoxExpectedDateObj.val().length == 0) {

            ((v == "-1") ? "" : txtBoxExpectedDateObj.val(htmlEncode(v)));

            DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

            DocLayoutJSObj.InDocument.ExpectedDateLatestUpdated = true;

        } else {

            var dateInHeader = new Date(txtBoxExpectedDateObj.val());

            var InVoiceRows = r.siblings('tr.InVoiceRows');

            InVoiceRows.push(r[0]);

            var allDates = $(InVoiceRows).children('td.inoutExpectedDates').find('span.inoutExpectedDateLatest');

            var i;

            var j = -1;

            var maxDate = new Date(0).getTime();

            for (i = 0; i < allDates.length; i++) {

                var dateAsjqueryObj = $(allDates[i]);

                if (dateAsjqueryObj.html() == '') { continue; }

                if (new Date(dateAsjqueryObj.html()).getTime() > maxDate) {

                    maxDate = new Date(dateAsjqueryObj.html()).getTime();

                    j = i;

                }

            }

            if (j > -1) {

                txtBoxExpectedDateObj.val(htmlEncode($(allDates[j]).html()));

                DocLayoutJSObj.InDocument.DocumentHeaderUpdated = true;

                DocLayoutJSObj.InDocument.ExpectedDateLatestUpdated = true;

            }

        }

    },

    SetRowExpectedDatesToolTip: function (r, v) { $(r).children('td.inoutExpectedDates').prop('title', htmlEncode(v)); },

    GetRowSupplierSKU: function (r) { return htmlDecode($(r).children('td.inoutProdSupplierCColumn').find('span').html()); },

    SetRowSupplierSKU: function (r, v) { $(r).children('td.inoutProdSupplierCColumn').find('span').html(htmlEncode(v)); },

    CrtMGQtyDtls: function (qT, dT) {

        var that = this;

        switch (dT) {

            case DocumentChoices.SalesOrder:
            case DocumentChoices.PurchaseOrder:

                $(this.GridClientID).find('tr.InVoiceRows').each(function (i) {

                    if (that.GetRowSKU(this) === '') return;

                    var htm = $(this).children('td.inoutQTYColumn').html();

                    var preHtml = '<span>' + that.TextStrings.QDtlOrdd + ':</span>';

                    var postHtml;

                    if (qT === 'si' || qT === 'ri') {
                        postHtml = '<div></div><div></div>';
                    }
                    else if (qT === 'i') {
                        postHtml = '<div></div>';
                    }

                    $(this).children('td.inoutQTYColumn').html(preHtml + htm + postHtml);
                    if (qT === 'si') {
                        that.SetMGQtyDtl(this, 's');
                    }
                    if (qT === 'ri') {
                        that.SetMGQtyDtl(this, 'r');
                    }
                    that.SetMGQtyDtl(this, 'i');
                });
                break;
        }
    },

    RemMGQtyDtls: function (qT, dT) {

        var that = this;

        switch (dT) {

            case DocumentChoices.SalesOrder:

            case DocumentChoices.PurchaseOrder:

                $(this.GridClientID).find('tr.InVoiceRows').each(function (i) {

                    if (that.GetRowSKU(this) === '') return;

                    $(this).children('td.inoutQTYColumn').find('span').not('[id*="lbl_InvoiceRowQty"]').not('[id*="lbl_Unit"]').remove();

                    if (qT === 'si' || qT === 'ri') {

                        $(this).children('td.inoutQTYColumn').find('div').last().remove();

                        $(this).children('td.inoutQTYColumn').find('div').last().remove();

                    }
                    else if (qT === 'i') {

                        $(this).children('td.inoutQTYColumn').find('div').last().remove();

                    }

                });

                break;

        }

    },

    SetMGQtyDtl: function (row, qT) {
        if (qT === 's' || qT === 'r') {   // shipped/received quantity
            var lbl = this.TextStrings.QDtlShpd;
            if (qT === 'r') lbl = this.TextStrings.QDtlRcvd;
            $(row).children('td.inoutQTYColumn').find('div').last().prev().html(lbl + ': ' + this.GetStrFrmFlt(this.GetMGMovQty(row)));
        }
        else if (qT === 'i') {  // invoiced quantity
            $(row).children('td.inoutQTYColumn').find('div').last().html(this.TextStrings.QDtlInvd + ': ' + this.GetStrFrmFlt(this.GetMGInvQty(row)));
        }
    },

    GetMGMainQty: function (row) { return this.GetFltFrmStr($(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(0)').val()); },

    SetMGMainQty: function (row, q) {
        $(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(0)').val(this.GetStrFrmFlt(q));
        $(row).children('td.inoutQTYColumn').find('span:eq(1)').html(this.GetStrFrmFlt(q));
    },

    GetMGMovQty: function (row) {
        return this.GetFltFrmStr($(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(2)').val());
    },

    SetMGMovQty: function (row, q) {
        var qStr = this.GetStrFrmFlt(this.GetMGMovQty(row) + q);
        $(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(2)').val(qStr);
        if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.SalesOrder) {
            this.SetMGQtyDtl(row, 's');
        }
        else if (DocLayoutJSObj.CDH.DocumentChoice === DocumentChoices.PurchaseOrder) {
            this.SetMGQtyDtl(row, 'r');
        }
    },

    GetMGInvQty: function (row) {
        return this.GetFltFrmStr($(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(3)').val());
    },

    SetMGInvQty: function (row, q) {
        var qStr = this.GetStrFrmFlt(this.GetMGInvQty(row) + q);
        $(row).children('td.inoutQTYColumn').find('input[type=hidden]:eq(3)').val(qStr);
        this.SetMGQtyDtl(row, 'i');
    },

    GetStrFrmFlt: function (fNum) {   // converts a number to its locale representation, basically changing the decimal
        if (fNum === undefined) { return '0'; }
        return (parseFloat(fNum).toFixed(9) * 1).toString().replace('.', this.NumberFormat.Decimal);
    },

    GetFltFrmStr: function (str) {    // converts a locale string into floating number, basically changing the decimal
        if (str === undefined) { return 0; }
        return +(str.replace(this.NumberFormat.Decimal, '#').replace('.', '|').replace(',', '|').replace('#', '.'));
    },

    FormatNumberStr: function (nStr) {
        nStr += '';
        x = nStr.split(this.NumberFormat.Decimal);
        x1 = x[0];
        x2 = x.length > 1 ? x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + this.NumberFormat.ThousandsSeparator + '$2');
        }
        if (x1.length > 0) {
            if (x2.length < 2) {
                var itr = 2 - x2.length;
                for (var j = 0; j < itr; j++)
                    x2 += '0';
            }
            x2 = this.NumberFormat.Decimal + x2;
        }

        return x1 + x2;
    },

    DisplayErrorMessage: function (Message, PositionalElementType, rowObj) {
        var that = this;
        var PositionalElement;
        var RowObject;

        this.HideErrorMessage();

        if (rowObj)
            RowObject = rowObj;
        else
            RowObject = this.CurrentRow;

        if (PositionalElementType == 'SKU') {
            PositionalElement = $(RowObject).find("td.inoutProdCodeColumn");
        }
        else if (PositionalElementType == 'SKUDesc') {
            PositionalElement = $(RowObject).find("td.inoutProdDescColumn");
        }
        else if (PositionalElementType == 'Qty') {
            PositionalElement = $(RowObject).find("td.inoutQTYColumn");
        }
        else if (PositionalElementType == 'UnitPrice') {
            PositionalElement = $(RowObject).find("td.inoutProdPriceColumn");
        }
        else if (PositionalElementType == 'Row') {
            PositionalElement = RowObject;
        }
        $(this.ErrorMessageDivID).html(Message);

        $(that.ErrorPanelDivID).css('z-index', '1000').css('display', '');

        $(that.ErrorPanelDivID).position({
            my: 'left bottom-10px',
            at: 'left top',
            of: PositionalElement,
            collision: 'fit'
        });
    },

    HideErrorMessage: function () {
        var ErrorMessageDivID = '#' + $(this.ErrorPanelDivID).find('div:first').attr('id');
        $(this.ErrorPanelDivID).css('display', 'none').css('z-index', '0').css({ top: 0, left: 0 });
        $(ErrorMessageDivID).html('');
    }

};


//todo : use this object for global functions and change other instances of getFltFrmStr or getStrFrmFlt to use these. 
var globalFunctions = {

    'NumFD' : StaticObj.decimalSeparator,

    'GetFltFromStr': function (str) {  // converts a locale string into floating number, basically changing the decimal
        str += '';
        return +(str.replace(this.NumFD, '#').replace('.', '|').replace(',', '|').replace('#', '.'));
    },

    'GetStrFromFlt': function (fNum) {   // converts a number to its locale representation, basically changing the decimal

        return String(parseFloat(fNum).toFixed(9) * 1).replace('.', this.NumFD);

    }

}

/**
 * Parses any valid date string and converts it to an "MMM dd, YYYY" format 
 * or an empty string if input is not valid.
 * @param {String} DateString - A date String in any valid format
 */
function MV_DateFormatter(DateString) {
       
    var dateToReturn = '';

    if (DateString == null || DateString == undefined || DateString == '') { return ''; }
    
    var inputDate = Date.parse(DateString);
    
    if (inputDate == null || isNaN(inputDate)) { return ''; }

    ///eg: 05/10/2021 will return "May 10, 2021"
    dateToReturn = new Intl.DateTimeFormat('en-Us', { day: "2-digit", month: "short", year: "numeric" }).format(inputDate);     //  Locale, {options}    

    return dateToReturn;

}

/**
 * Converts any JS Date object to a "YYYY-MM-DD" String.
 * @param {Date} DateObject - A Date object
 * @returns {String} 
 */
function MV_GetSimpleDate(DateObject) {

    if (DateObject == '' || DateObject == null) { return ''; }

    if (!(DateObject instanceof Date)) { return '';} //check if its a valid date object

    var day = ('0' + DateObject.getDate()).slice(-2);
    var month = ('0' + (DateObject.getMonth() + 1)).slice(-2);
    var year = DateObject.getFullYear();

    return year + '-' + month + '-' + day;
}


/**
 * Converts a 'MMM dd, YYYY' String to a JavaScript Date Object.
 * @param {String} DateString - A Date String In 'MMM dd, YYYY' format, eg: May 10, 2021
 * @param {String} Format - Should be the string  'MMM dd, YYYY'
 * @returns {Date} - A JS Date Object Or Null if Input is invalid.
 */
function MV_StringToDate(DateString, Format) {

    var DateFrom;

    if (Format == 'MMM dd, YYYY') {
        DateFrom = /^(\w{3})\s(\d{2}),\s(\d{4})$/.exec(DateString);
    }

    if (DateFrom == null) {
        return null;
    }

    var FromMonth = MV_StringToDate.months[DateFrom[1].toLowerCase()];
    var FromDay = parseInt(DateFrom[2], 10);
    var FromYear = parseInt(DateFrom[3], 10);
    var FromDateFinally = new Date(FromYear, FromMonth, FromDay);
    return FromDateFinally;
}

MV_StringToDate.months = {
    jan: 0, feb: 1, mar: 2, apr: 3, may: 4, jun: 5,
    jul: 6, aug: 7, sep: 8, oct: 9, nov: 10, dec: 11
};

